{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/mobx/lib/mobx.es6.js","webpack:///../src/lib/modify-template.ts","webpack:///../src/lib/shady-render.ts","webpack:///../src/lib/updating-element.ts","webpack:///../src/lib/decorators.ts","webpack:///../src/lib/css-tag.ts","webpack:///src/lit-element.ts","webpack:///../src/directives/class-map.ts","webpack:///../src/directives/style-map.ts","webpack:///../src/directives/repeat.ts","webpack:///../src/directives/unsafe-html.ts","webpack:///../src/directives/if-defined.ts","webpack:///../src/lib/mixin.ts","webpack:///src/lit-mobx.ts","webpack:///./node_modules/wc-context/core.js","webpack:///./node_modules/wc-context/lit-element.js","webpack:///./src/components/base.js","webpack:///../src/lib/default-template-processor.ts","webpack:///src/lit-html.ts","webpack:///../src/lib/template.ts","webpack:///../src/lib/parts.ts","webpack:///../src/lib/part.ts","webpack:///../src/lib/dom.ts","webpack:///../src/lib/template-factory.ts","webpack:///../src/lib/directive.ts","webpack:///../src/lib/render.ts","webpack:///../src/lib/template-result.ts","webpack:///../src/lib/template-instance.ts","webpack:///../src/client.js","webpack:///./src/components/list-errors.js","webpack:///../src/is-object.js","webpack:///./src/components/red-error.js","webpack:///./node_modules/promise-prototype-finally/index.js","webpack:///./node_modules/process/browser.js","webpack:///(webpack)/buildin/global.js","webpack:///./node_modules/superagent/node_modules/component-emitter/index.js","webpack:///./node_modules/fast-safe-stringify/index.js","webpack:///../src/request-base.js","webpack:///../src/response-base.js","webpack:///../src/utils.js","webpack:///../src/agent-base.js","webpack:///./src/agent.js","webpack:///./src/stores/articlesStore.js","webpack:///./src/stores/commentsStore.js","webpack:///./src/stores/authStore.js","webpack:///./src/stores/commonStore.js","webpack:///./src/stores/editorStore.js","webpack:///./src/stores/userStore.js","webpack:///./src/stores/profileStore.js","webpack:///./src/stores/rootStore.js","webpack:///../src/index.ts","webpack:///../lib/utils.js","webpack:///../lib/invariant.js","webpack:///../lib/path.js","webpack:///../lib/events.js","webpack:///../lib/locations/location-bar.js","webpack:///../lib/locations/browser.js","webpack:///../lib/locations/memory.js","webpack:///../lib/constants.js","webpack:///../lib/transition.js","webpack:///../lib/logger.js","webpack:///../lib/qs.js","webpack:///../lib/router.js","webpack:///../lib/array-dsl.js","webpack:///../lib/function-dsl.js","webpack:///./node_modules/slick-router/middlewares/wc.js","webpack:///./node_modules/slick-router/middlewares/router-links.js","webpack:///./src/pages/login-page.js","webpack:///./src/pages/Home/Banner.js","webpack:///./src/components/loading-spinner.js","webpack:///./src/pages/Home/Tags.js","webpack:///./src/components/ListPagination.js","webpack:///./src/components/article-preview.js","webpack:///./src/components/ArticleList.js","webpack:///./src/pages/Home/home-main-view.js","webpack:///./src/pages/Home/home-page.js","webpack:///./src/pages/register-page.js","webpack:///./src/pages/editor-page.js","webpack:///./src/pages/profile-page.js","webpack:///./src/pages/settings-page.js","webpack:///./src/router.js","webpack:///./node_modules/slick-router/components/animated-outlet.js","webpack:///./src/components/app-header.js","webpack:///./src/realworld-app.js","webpack:///./src/index.js"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","installedModules","0","__webpack_require__","exports","module","l","e","promises","installedChunkData","promise","Promise","resolve","reject","onScriptComplete","script","document","createElement","charset","timeout","nc","setAttribute","src","p","jsonpScriptSrc","error","Error","event","onerror","onload","clearTimeout","chunk","errorType","type","realSrc","target","message","name","request","undefined","setTimeout","head","appendChild","all","m","c","d","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","oe","err","console","jsonpArray","window","oldJsonpFunction","slice","s","OBFUSCATED_ERROR","EMPTY_ARRAY","freeze","EMPTY_OBJECT","getNextId","globalState","mobxGuid","fail","invariant","check","once","func","invoked","apply","this","arguments","noop","isObject","isPlainObject","proto","getPrototypeOf","addHiddenProp","propName","writable","configurable","createInstanceofPredicate","clazz","x","isES6Map","thing","Map","isES6Set","Set","getPlainObjectKeys","enumerables","add","getOwnPropertySymbols","forEach","k","getOwnPropertyDescriptor","Array","from","stringifyKey","toString","String","toPrimitive","$mobx","Atom","constructor","isPendingUnobservation","isBeingObserved","observers","diffValue","lastAccessedBy","lowestObserverState","IDerivationState","NOT_TRACKING","onBecomeObserved","onBecomeObservedListeners","listener","onBecomeUnobserved","onBecomeUnobservedListeners","reportObserved","reportChanged","startBatch","observable","STALE","dependenciesState","UP_TO_DATE","isTracing","TraceMode","NONE","logTraceInfo","onBecomeStale","propagateChanged","endBatch","isAtom","createAtom","onBecomeObservedHandler","onBecomeUnobservedHandler","atom","arg3","interceptHook","comparer","identity","a","b","structural","deepEqual","default","is","shallow","mobxDidRunLazyInitializersSymbol","mobxPendingDecorators","enumerableDescriptorCache","nonEnumerableDescriptorCache","createPropertyInitializerDescriptor","prop","cache","initializeInstance","set","decorators","keys","propertyCreator","descriptor","decoratorTarget","decoratorArguments","createPropDecorator","propertyInitiallyEnumerable","decorator","applyImmediately","inheritedDecorators","assign","quacksLikeADecorator","args","deepEnhancer","v","_","isObservable","isArray","array","map","referenceEnhancer","newValue","createDecoratorForEnhancer","enhancer","propertyName","_decoratorTarget","decoratorArgs","initialValue","initializer","asObservableObject","addObservableProp","res","process","env","defaultCreateObservableOptions","deep","defaultDecorator","proxy","asCreateObservableOptions","deepDecorator","shallowDecorator","isObservableObject","isObservableArray","isObservableMap","isObservableSet","refDecorator","refStructDecorator","oldValue","getEnhancerFromOptions","options","observableFactories","box","incorrectlyUsedAsDecorator","ObservableValue","equals","initialValues","owned","adm","ObservableArrayAdministration","values","Proxy","arrayTraps","prev","allowStateChangesStart","spliceWithArray","allowStateChangesEnd","createObservableArray","ObservableMap","ObservableSet","props","extendObservable","getDefaultDecoratorFromObjectOptions","base","objectProxyTraps","createDynamicObservableObject","extendObservableObjectWithProperties","ref","struct","arg2","methodName","computedDecorator","instance","addComputedProp","context","computedStructDecorator","computed","arg1","opts","ComputedValue","CaughtException","cause","isCaughtException","shouldCompute","derivation","POSSIBLY_STALE","prevAllowStateReads","allowStateReadsStart","prevUntracked","untrackedStart","obs","observing","obj","isComputedValue","disableErrorBoundaries","untrackedEnd","allowStateReadsEnd","changeDependenciesStateTo0","checkIfStateModificationsAreAllowed","hasObservers","size","computationDepth","allowStateChanges","enforceActions","trackDerivedFunction","f","newObserving","unboundDepsCount","runId","prevTracking","trackingDerivation","result","prevObserving","lowestNewObservingDerivationState","i0","dep","removeObserver","addObserver","bindDependencies","clearObserving","untracked","action","allowStateReads","currentActionId","nextActionId","createAction","actionName","fn","executeAction","isMobxAction","scope","runInfo","startTime","prevDerivation","prevAllowStateChanges","notifySpy","actionId","parentActionId","_startAction","suppressReactionErrors","_endAction","super","hasUnreportedChange","dehanceValue","dehancer","prepareNewValue","UNCHANGED","setNewValue","hasInterceptors","change","interceptChange","hasListeners","notifyListeners","intercept","handler","registerInterceptor","observe","fireImmediately","registerListener","toJSON","valueOf","__mapid","isComputing","isRunningSetter","setter","compareStructural","requiresReaction","keepAlive","propagateMaybeChanged","inBatch","trackAndCompute","propagateChangeConfirmed","warnAboutUntrackedRead","computeValue","peek","wasSuspended","changed","track","suspend","firstTime","prevValue","autorun","prevU","MobXGlobals","version","pendingUnobservations","pendingReactions","isRunningReactions","spyListeners","globalReactionErrorHandlers","computedRequiresReaction","reactionRequiresObservable","observableRequiresReaction","computedConfigurable","mockGlobal","getGlobal","global","self","canMergeGlobalState","isolateCalled","__mobxInstanceCount","__mobxGlobals","node","delete","queueForUnobservation","runReactions","list","log","BREAK","lines","printDepTree","tree","depth","join","dependencies","child","nodeToDependencyTree","getAtom","Function","replace","Reaction","onInvalidate","errorHandler","requiresObservable","isDisposed","_isScheduled","_isTrackPending","_isRunning","schedule","isScheduled","runReaction","reportExceptionInDerivation","warn","dispose","getDisposer","trace","enterBreakPoint","pop","getAtomFromArgs","LOG","MAX_REACTION_ITERATIONS","reactionScheduler","runReactionsHelper","allReactions","iterations","splice","remainingReactions","isReaction","setReactionScheduler","baseScheduler","dontReassignFields","namedActionDecorator","actionFieldDecorator","arg4","defineBoundAction","view","reaction","scheduler","delay","reactionRunner","onError","createSchedulerFromOptions","bound","applyToInstance","run","expression","effect","effectAction","baseFn","runSync","nextValue","hook","cb","listenersKey","hookListeners","configure","isolateGlobalState","ea","properties","resultDescriptor","item","indexOf","unique","FlowCancellationError","_isObservable","has","propOrCb","cbOrFire","getAdministration","observeObservableProperty","observeObservable","transaction","thisArg","getAdm","isPropertyKey","val","write","defaultEnhancer","parseInt","deleteProperty","remove","ownKeys","keysAtom","Reflect","preventExtensions","interceptable","interceptors","idx","listenable","changeListeners","listeners","MAX_SPLICE_SIZE","getArrayLength","arrayExtensions","isNaN","setArrayLength","lastKnownLength","newV","oldV","dehanceValues","index","added","addedCount","removed","removedCount","newLength","currentLength","newItems","updateArrayLength","oldLength","delta","deleteCount","Math","max","min","spliceItemsIntoValues","notifyArraySplice","concat","notifyArrayChildUpdate","notify","clear","toJS","items","unshift","reverse","clone","sort","compareFn","funcName","isObservableArrayAdministration","_a","ObservableMapMarker","initialData","_keysAtom","_data","_hasMap","merge","_has","entry","newEntry","hasKey","_updateValue","_addValue","_updateHasMapEntry","nextIndex","makeIterable","next","done","entries","iterator","callback","other","newKeys","getMapLikeKeys","filter","toPOJO","_a$1","ObservableSetMarker","_atom","callbackFn","observableValues","ObservableObjectAdministration","read","pendingKeys","exists","observablePropertyConfigs","generateObservablePropConfig","notifyPropertyAddition","propertyOwner","isPropertyConfigurable","computedPropertyConfigs","getAdministrationForComputedPropOwner","generateComputedPropConfig","oldObservable","illegalAccess","owner","getKeys","isObservableObjectAdministration","anyThing","eq","aStack","bStack","className","unwrap","areArrays","aCtor","bCtor","has$1","getSelf","__MOBX_DEVTOOLS_GLOBAL_HOOK__","injectMobx","spy","extras","getDebugName","named","walkerNodeFilter","removeNodesFromTemplate","template","nodesToRemove","element","content","parts","walker","createTreeWalker","partIndex","nextActiveIndexInTemplateParts","part","nodeIndex","removeCount","nodesToRemoveInTemplate","currentRemovingNode","nextNode","currentNode","previousSibling","parentNode","removeChild","countNodes","count","nodeType","startIndex","getTemplateCacheKey","scopeName","compatibleShadyCSSVersion","ShadyCSS","prepareTemplateDom","shadyTemplateFactory","cacheKey","templateCache","stringsArray","WeakMap","keyString","strings","getTemplateElement","TEMPLATE_TYPES","shadyRenderSet","prepareTemplateStyles","renderedDOM","templateElement","styles","querySelectorAll","condensedStyle","style","textContent","templates","removeStylesFromLitTemplates","refNode","insertCount","walkerIndex","insertBefore","insertNodeIntoTemplate","firstChild","querySelector","nativeShadow","cloneNode","removes","JSCompiler_renameProperty","_obj","defaultConverter","Boolean","JSON","stringify","Number","parse","notEqual","old","defaultPropertyDeclaration","attribute","converter","reflect","hasChanged","microtaskPromise","STATE_HAS_UPDATED","STATE_UPDATE_REQUESTED","STATE_IS_REFLECTING_TO_ATTRIBUTE","STATE_IS_REFLECTING_TO_PROPERTY","STATE_HAS_CONNECTED","finalized","UpdatingElement","HTMLElement","_updateState","_instanceProperties","_updatePromise","_hasConnectedResolver","_changedProperties","_reflectingProperties","initialize","finalize","attributes","_classProperties","attr","_attributeNameForProperty","_attributeToPropertyMap","superProperties","_ensureClassProperties","noAccessor","_requestUpdate","superCtor","propKeys","getOwnPropertyNames","createProperty","toLowerCase","fromAttribute","toAttribute","_saveInstanceProperties","_v","_attributeToProperty","ctor","attrValue","_propertyValueToAttribute","removeAttribute","_propertyValueFromAttribute","shouldRequestUpdate","_valueHasChanged","_hasRequestedUpdate","_enqueueUpdate","updateComplete","previousUpdatePromise","rej","_hasConnected","performUpdate","_applyInstanceProperties","shouldUpdate","changedProperties","update","_markUpdated","firstUpdated","updated","_getUpdateComplete","_propertyToAttribute","supportsAdoptingStyleSheets","Document","CSSStyleSheet","flattenStyles","flat","Infinity","arrayFlat","_styles","_getUniqueStyles","userStyles","reduceRight","renderRoot","createRenderRoot","ShadowRoot","adoptStyles","attachShadow","adoptedStyleSheets","styleSheet","_needsShimAdoptedStyleSheets","ScopingShim","prepareAdoptedCssText","cssText","localName","connectedCallback","hasUpdated","styleElement","templateResult","render","eventContext","container","hasRendered","needsScoping","host","firstScopeRender","renderContainer","createDocumentFragment","templateFactory","classMapCache","styleMapCache","classInfo","committer","classList","oldInfo","styleMap","styleInfo","removeProperty","setProperty","createAndInsertPart","containerPart","beforePart","startNode","beforeNode","endNode","newPart","insertAfterNode","updatePart","setValue","commit","insertPartBefore","nextSibling","removePart","generateMap","start","end","partListCache","keyListCache","repeat","keyFnOrTemplate","keyFn","oldParts","oldKeys","newParts","newValues","newKeyToIndexMap","oldKeyToIndexMap","oldHead","oldTail","newHead","newTail","oldIndex","oldPart","previousValues","unsafeHTML","previousValue","fragment","innerHTML","importNode","ifDefined","cachedRequestUpdate","cachedPerformUpdate","MobxReactionUpdate","requestUpdate","nodeName","disconnectedCallback","orphanMap","resolved","orphanResolveQueue","contexts","running","then","orphans","orphan","sendContextEvent","detail","handled","el","CustomEvent","bubbles","cancelable","composed","dispatchEvent","observeContext","addOrphan","unobserveContext","removeOrphan","initializedElements","WeakSet","withContext","Base","__wcContext","observedContexts","providedContextConfigs","providedContexts","__wcProvidedContexts","mappedProps","__wcMappedProps","config","observerMap","__wcContextObserverMap","addEventListener","stopPropagation","targetEl","contextChangedCallback","registerProvidedContext","shouldChange","contextName","observer","notifyContextChange","Component","LitElement","defaultTemplateProcessor","prefix","html","marker","random","nodeMarker","markerRegex","RegExp","boundAttributeSuffix","Template","stack","lastPartIndex","hasAttributes","endsWith","stringForPart","lastAttributeNameRegex","exec","attributeLookupName","attributeValue","getAttribute","statics","split","tagName","parent","lastIndex","insert","createMarker","match","createTextNode","str","suffix","isTemplatePartActive","createComment","isPrimitive","isIterable","AttributeCommitter","dirty","_createPart","AttributePart","text","_getValue","directive","NodePart","__pendingValue","__insert","__commitText","__commitTemplateResult","Node","__commitNode","__commitIterable","valueAsString","processor","_clone","itemParts","itemPart","appendIntoPart","insertAfterPart","BooleanAttributePart","PropertyCommitter","single","PropertyPart","eventOptionsSupported","removeEventListener","_e","EventPart","eventName","__boundHandleEvent","handleEvent","newListener","oldListener","shouldRemoveListener","capture","passive","shouldAddListener","__options","getOptions","noChange","nothing","isCEPolyfill","customElements","polyfillWrapFlushCallback","reparentNodes","before","removeNodes","templateCaches","directives","isDirective","appendInto","commentMarker","TemplateResult","isCommentBinding","commentOpen","lastIndexOf","attributeMatch","substr","getHTML","SVGTemplateResult","svgElement","TemplateInstance","__parts","handleTextExpression","handleAttributeExpressions","adoptNode","upgrade","root","Emitter","require","safeStringify","RequestBase","ResponseBase","Agent","url","ActiveXObject","trim","serialize","pairs","pushEncodedKeyValuePair","encodeURIComponent","parseString","len","pos","pair","decodeURIComponent","isJSON","mime","test","Response","req","method","xhr","responseType","status","fields","line","field","parseHeader","getResponseHeader","_parseBody","Request","_query","err_","new_err","del","json","xml","urlencoded","form","_parser","msg","pass","btoa","encoder","string","_auth","user","file","_shouldRetry","_retries","_uploadTimeout","_formData","readyState","handleProgress","direction","username","_isHost","contentType","_header","_serializer","header","ListErrors","errors","define","wrapperStyle","display","justifyContent","errorStyle","margin","borderRadius","padding","color","fontWeight","backgroundColor","RedError","finally","catch","reason","cachedSetTimeout","cachedClearTimeout","defaultSetTimout","defaultClearTimeout","runTimeout","fun","currentQueue","queue","draining","queueIndex","cleanUpNextTick","drainQueue","runClearTimeout","Item","nextTick","title","browser","argv","versions","on","addListener","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","binding","cwd","chdir","dir","umask","g","mixin","_callbacks","callbacks","stable","deterministicStringify","stableStringify","arr","replacerStack","replacer","spacer","decirc","propertyDescriptor","replaceGetterValues","compareFunction","tmp","deterministicDecirc","ERROR_CODES","override","_retryCallback","_fullfilledPromise","_okCallback","base64Encoder","TypeError","headers","isObj","query","includes","queryArr","_timeout","_responseTimeout","utils","ct","params","def","API_ROOT","encode","commonStore","authStore","handleErrors","response","logout","responseBody","body","tokenPlugin","token","requests","superagent","use","put","post","limit","omitSlug","article","slug","page","lim","byAuthor","author","byTag","tag","favorite","favoritedBy","feed","unfavorite","current","login","email","password","register","save","comment","commentId","forArticle","follow","unfollow","getAll","stores","ArticlesStore","articlesRegistry","getArticle","setPage","setPredicate","predicate","$req","myFeed","agent","loadArticles","isLoading","articles","articlesCount","totalPagesCount","ceil","loadArticle","acceptCached","makeFavorite","favorited","favoritesCount","unmakeFavorite","createArticle","updateArticle","deleteArticle","CommentsStore","setArticleSlug","articleSlug","comments","loadComments","isLoadingComments","commentErrors","isCreatingComment","deleteComment","id","findIndex","AuthStore","rootStore","setUsername","setEmail","setPassword","reset","inProgress","setToken","userStore","pullUser","forgetUser","CommonStore","localStorage","setItem","removeItem","loadTags","isLoadingTags","tags","setAppLoaded","appLoaded","getItem","EditorStore","loadInitialData","articlesStore","description","tagList","setTitle","setDescription","setBody","addTag","removeTag","submit","UserStore","loadingUser","currentUser","updateUser","newUser","updatingUser","ProfileStore","loadProfile","isLoadingProfile","profile","following","RootStore","commentsStore","editorStore","profileStore","DEFAULT_DELIMITER","balanced","open","close","tokens","defaultDelimiter","delimiter","whitelist","path","isEscaped","pattern","code","charCodeAt","validPattern","char","optional","escapeString","flags","sensitive","stringToRegexp","strict","route","endToken","isEndDelimited","tokensToRegexp","pathToRegexp","groups","source","regexpToRegexp","paths","arrayToRegexp","extend","pick","attrs","reduce","acc","assoc","isEqual","obj1","obj2","keys1","every","condition","format","argIndex","paramInjectMatcher","specialParamChars","queryMatcher","_compiledPatterns","compilePattern","paramNames","re","matcher","extractQuery","qs","withoutQuery","bindEvent","unbindEvent","History","handlers","checkUrl","location","history","pathname","href","forcePushState","_hasPushState","_wantsHashChange","decodeURI","search","trailingSlash","getHash","routeStripper","started","hashChange","_wantsPushState","pushState","getFragment","rootStripper","loc","atRoot","hash","replaceState","silent","loadUrl","some","trigger","pathStripper","_updateHash","BrowserLocation","locationBar","LocationBar","onChange","handleURL","changeCallback","hasPushState","rootURL","stop","MemoryLocation","getURL","setURL","TRANSITION_REDIRECTED","TRANSITION_CANCELLED","runError","router","transition","middleware","logError","routes","Date","now","cancelled","state","redirectTo","transitionTo","retry","cancel","activeTransition","isCancelled","followRedirects","callNext","prevResult","middlewareName","middlewarePromise","defineLogger","querystring","Router","nextId","at","arrayDsl","children","ancestors","matches","names","currentLevel","level","childrenCallback","functionDsl","matchers","dupes","abstracts","eachBranch","memo","lastRoute","abstract","createLocation","previousUrl","dispatch","replaceURL","replaceWith","doTransition","queryString","indices","withQuery","param","paramName","lastChar","paramValue","injectParams","formatURL","destroy","exact","activeRoutes","activeParams","activeQuery","isActive","generate","removeRoot","pathWithoutQuery","cp","extractParams","nextPath","info","rootOutlet","rootOutletEl","routeElMap","routeComponentMap","TransitionValue","getValue","parseFloat","parseNumber","getOutlet","shadowRoot","outlet","resolveRootOutlet","getParentEl","parentIndex","component","async","runLifeCycle","routeMethod","elMethod","applyProperties","removedEls","outletCurrentEl","wc","prevRoutes","changingIndex","currentRoutes","getChangingIndex","deactivated","routeIndex","activated","reuse","$router","resolveComponents","routeState","$route","parentEl","outletEl","currentEl","firstElementChild","renderElements","parentElRemoved","activeRoute","updateDOMTree","routerLinksData","unbindRouterLinks","linkContainers","delegate","selector","selectorTarget","undelegate","mutationHandler","mutations","mutation","attributeName","updateLink","ownerEl","addedNodes","createLinks","elementsObserverConfig","childList","subtree","getAttributeValues","getRouteProp","routeName","routeEl","attrPrefix","defaults","getDefaults","rootEl","closest","updateActiveClass","activeClass","hasAttribute","toggle","anchorEl","linkClickHandler","button","metaKey","altKey","ctrlKey","shiftKey","preventDefault","bindRouterLinks","rootEls","MutationObserver","eventHandlers","eventHandler","createClass","withRouterLinks","optionsOrCtorOrDescriptor","kind","elements","finisher","ctorOrDescriptor","routerLinks","LoginPage","handleEmailChange","handlePasswordChange","handleSubmitForm","Banner","appName","width","height","position","borderTop","borderRight","borderBottom","borderLeft","transform","animation","LoadingSpinner","Tags","ListPagination","range","isCurrent","currentPage","ev","onSetPage","ArticlePreview","handleClickFavorite","favoriteButtonClass","image","createdAt","toDateString","ArticleList","loading","MainView","handleTabChange","tab","handleSetPage","getPredicate","getTag","getTab","YourFeedTab","GlobalFeedTab","TagFilterTab","HomePage","tabChanged","RegisterPage","handleUsernameChange","EditorPage","tagInput","changeTitle","changeDescription","changeBody","changeTagInput","handleTagInputKeyDown","keyCode","handleAddTag","handleRemoveTag","submitForm","dataLoaded","EditProfileSettings","isUser","FollowUserButton","classes","ProfilePage","handleFollow","handleUnfollow","disposeRouterLinks","renderTabs","isFavorites","bio","SettingsForm","updateState","newState","onSubmitForm","SettingsPage","handleClickLogout","updatingUserErrors","ArticlePage","AnimationHook","getOption","hasOption","runParallel","beforeEnter","enter","leave","raf","requestAnimationFrame","TRANSITION","ANIMATION","transitionProp","transitionEndEvent","animationProp","animationEndEvent","whenTransitionEnds","propCount","getComputedStyle","transitionDelays","transitionDurations","transitionTimeout","getTimeout","animationDelays","animationDurations","animationTimeout","getTransitionInfo","ended","onEnd","delays","durations","toMs","runTransition","GenericCSS","animationRegistry","defaultHook","getAnimationHook","AnimatedOutlet","removing","appending","AppHeader","LoggedOutView","LoggedInView","AnimationHookClass","registerAnimation","App","_____APP_STATE_____","configureMobx","disposer","createRouter","listen","getElementById"],"mappings":"aACE,SAASA,EAAqBC,GAQ7B,IAPA,IAMIC,EAAUC,EANVC,EAAWH,EAAK,GAChBI,EAAcJ,EAAK,GAKAK,EAAI,EAAGC,EAAW,GACpCD,EAAIF,EAASI,OAAQF,IACzBH,EAAUC,EAASE,GAChBG,OAAOC,UAAUC,eAAeC,KAAKC,EAAiBV,IAAYU,EAAgBV,IACpFI,EAASO,KAAKD,EAAgBV,GAAS,IAExCU,EAAgBV,GAAW,EAE5B,IAAID,KAAYG,EACZI,OAAOC,UAAUC,eAAeC,KAAKP,EAAaH,KACpDa,EAAQb,GAAYG,EAAYH,IAKlC,IAFGc,GAAqBA,EAAoBf,GAEtCM,EAASC,QACdD,EAASU,OAATV,GAOF,IAAIW,EAAmB,GAKnBL,EAAkB,CACrBM,EAAG,GAWJ,SAASC,EAAoBlB,GAG5B,GAAGgB,EAAiBhB,GACnB,OAAOgB,EAAiBhB,GAAUmB,QAGnC,IAAIC,EAASJ,EAAiBhB,GAAY,CACzCI,EAAGJ,EACHqB,GAAG,EACHF,QAAS,IAUV,OANAN,EAAQb,GAAUU,KAAKU,EAAOD,QAASC,EAAQA,EAAOD,QAASD,GAG/DE,EAAOC,GAAI,EAGJD,EAAOD,QAKfD,EAAoBI,EAAI,SAAuBrB,GAC9C,IAAIsB,EAAW,GAKXC,EAAqBb,EAAgBV,GACzC,GAA0B,IAAvBuB,EAGF,GAAGA,EACFD,EAASX,KAAKY,EAAmB,QAC3B,CAEN,IAAIC,EAAU,IAAIC,SAAQ,SAASC,EAASC,GAC3CJ,EAAqBb,EAAgBV,GAAW,CAAC0B,EAASC,MAE3DL,EAASX,KAAKY,EAAmB,GAAKC,GAGtC,IACII,EADAC,EAASC,SAASC,cAAc,UAGpCF,EAAOG,QAAU,QACjBH,EAAOI,QAAU,IACbhB,EAAoBiB,IACvBL,EAAOM,aAAa,QAASlB,EAAoBiB,IAElDL,EAAOO,IA1DV,SAAwBpC,GACvB,OAAOiB,EAAoBoB,EAAI,IAAM,GAAGrC,IAAUA,GAAW,MAyD9CsC,CAAetC,GAG5B,IAAIuC,EAAQ,IAAIC,MAChBZ,EAAmB,SAAUa,GAE5BZ,EAAOa,QAAUb,EAAOc,OAAS,KACjCC,aAAaX,GACb,IAAIY,EAAQnC,EAAgBV,GAC5B,GAAa,IAAV6C,EAAa,CACf,GAAGA,EAAO,CACT,IAAIC,EAAYL,IAAyB,SAAfA,EAAMM,KAAkB,UAAYN,EAAMM,MAChEC,EAAUP,GAASA,EAAMQ,QAAUR,EAAMQ,OAAOb,IACpDG,EAAMW,QAAU,iBAAmBlD,EAAU,cAAgB8C,EAAY,KAAOE,EAAU,IAC1FT,EAAMY,KAAO,iBACbZ,EAAMQ,KAAOD,EACbP,EAAMa,QAAUJ,EAChBH,EAAM,GAAGN,GAEV7B,EAAgBV,QAAWqD,IAG7B,IAAIpB,EAAUqB,YAAW,WACxB1B,EAAiB,CAAEmB,KAAM,UAAWE,OAAQpB,MAC1C,MACHA,EAAOa,QAAUb,EAAOc,OAASf,EACjCE,SAASyB,KAAKC,YAAY3B,GAG5B,OAAOJ,QAAQgC,IAAInC,IAIpBL,EAAoByC,EAAI9C,EAGxBK,EAAoB0C,EAAI5C,EAGxBE,EAAoB2C,EAAI,SAAS1C,EAASiC,EAAMU,GAC3C5C,EAAoB6C,EAAE5C,EAASiC,IAClC7C,OAAOyD,eAAe7C,EAASiC,EAAM,CAAEa,YAAY,EAAMC,IAAKJ,KAKhE5C,EAAoBiD,EAAI,SAAShD,GACX,oBAAXiD,QAA0BA,OAAOC,aAC1C9D,OAAOyD,eAAe7C,EAASiD,OAAOC,YAAa,CAAEC,MAAO,WAE7D/D,OAAOyD,eAAe7C,EAAS,aAAc,CAAEmD,OAAO,KAQvDpD,EAAoBqD,EAAI,SAASD,EAAOE,GAEvC,GADU,EAAPA,IAAUF,EAAQpD,EAAoBoD,IAC/B,EAAPE,EAAU,OAAOF,EACpB,GAAW,EAAPE,GAA8B,iBAAVF,GAAsBA,GAASA,EAAMG,WAAY,OAAOH,EAChF,IAAII,EAAKnE,OAAOoE,OAAO,MAGvB,GAFAzD,EAAoBiD,EAAEO,GACtBnE,OAAOyD,eAAeU,EAAI,UAAW,CAAET,YAAY,EAAMK,MAAOA,IACtD,EAAPE,GAA4B,iBAATF,EAAmB,IAAI,IAAIM,KAAON,EAAOpD,EAAoB2C,EAAEa,EAAIE,EAAK,SAASA,GAAO,OAAON,EAAMM,IAAQC,KAAK,KAAMD,IAC9I,OAAOF,GAIRxD,EAAoB4D,EAAI,SAAS1D,GAChC,IAAI0C,EAAS1C,GAAUA,EAAOqD,WAC7B,WAAwB,OAAOrD,EAAgB,SAC/C,WAA8B,OAAOA,GAEtC,OADAF,EAAoB2C,EAAEC,EAAQ,IAAKA,GAC5BA,GAIR5C,EAAoB6C,EAAI,SAASgB,EAAQC,GAAY,OAAOzE,OAAOC,UAAUC,eAAeC,KAAKqE,EAAQC,IAGzG9D,EAAoBoB,EAAI,GAGxBpB,EAAoB+D,GAAK,SAASC,GAA2B,MAApBC,QAAQ3C,MAAM0C,GAAYA,GAEnE,IAAIE,EAAaC,OAAqB,aAAIA,OAAqB,cAAK,GAChEC,EAAmBF,EAAWxE,KAAKiE,KAAKO,GAC5CA,EAAWxE,KAAOd,EAClBsF,EAAaA,EAAWG,QACxB,IAAI,IAAInF,EAAI,EAAGA,EAAIgF,EAAW9E,OAAQF,IAAKN,EAAqBsF,EAAWhF,IAC3E,IAAIU,EAAsBwE,EAInBpE,EAAoBA,EAAoBsE,EAAI,I,gCCrMrD,iQACA,MAAMC,EAAmB,2FACnBC,EAAc,GACpBnF,OAAOoF,OAAOD,GACd,MAAME,EAAe,GAErB,SAASC,IACL,QAASC,GAAYC,SAEzB,SAASC,EAAK7C,GAEV,MADA8C,GAAU,EAAO9C,GACX,IAEV,SAAS8C,EAAUC,EAAO/C,GACtB,IAAK+C,EACD,MAAM,IAAIzD,MAAM,WAAaU,GAAWsC,IAVhDlF,OAAOoF,OAAOC,GAgCd,SAASO,EAAKC,GACV,IAAIC,GAAU,EACd,OAAO,WACH,IAAIA,EAGJ,OADAA,GAAU,EACHD,EAAKE,MAAMC,KAAMC,YAGhC,MAAMC,EAAO,OASb,SAASC,EAASpC,GACd,OAAiB,OAAVA,GAAmC,iBAAVA,EAEpC,SAASqC,EAAcrC,GACnB,GAAc,OAAVA,GAAmC,iBAAVA,EACzB,OAAO,EACX,MAAMsC,EAAQrG,OAAOsG,eAAevC,GACpC,OAAOsC,IAAUrG,OAAOC,WAAuB,OAAVoG,EAEzC,SAASE,EAAc/B,EAAQgC,EAAUzC,GACrC/D,OAAOyD,eAAee,EAAQgC,EAAU,CACpC9C,YAAY,EACZ+C,UAAU,EACVC,cAAc,EACd3C,UAmBR,SAAS4C,EAA0B9D,EAAM+D,GACrC,MAAMJ,EAAW,SAAW3D,EAE5B,OADA+D,EAAM3G,UAAUuG,IAAY,EACrB,SAAUK,GACb,OAAOV,EAASU,KAAsB,IAAhBA,EAAEL,IAShC,SAASM,EAASC,GACd,OAAOA,aAAiBC,IAE5B,SAASC,EAASF,GACd,OAAOA,aAAiBG,IAK5B,SAASC,EAAmB3C,GACxB,MAAM4C,EAAc,IAAIF,IACxB,IAAK,IAAI7C,KAAOG,EACZ4C,EAAYC,IAAIhD,GAOpB,OANArE,OAAOsH,sBAAsB9C,GAAQ+C,QAAQC,IACrCxH,OAAOyH,yBAAyBjD,EAAQgD,GAAG9D,YAC3C0D,EAAYC,IAAIG,KAIjBE,MAAMC,KAAKP,GAEtB,SAASQ,EAAavD,GAClB,OAAIA,GAAOA,EAAIwD,SACJxD,EAAIwD,WAEJ,IAAIC,OAAOzD,GAAKwD,WAW/B,SAASE,EAAYhE,GACjB,OAAiB,OAAVA,EAAiB,KAAwB,iBAAVA,EAAqB,GAAKA,EAAQA,EAG5E,MAAMiE,EAAQnE,OAAO,uBACrB,MAAMoE,EAKFC,YAAYrF,EAAO,QAAUyC,KACzBU,KAAKnD,KAAOA,EACZmD,KAAKmC,wBAAyB,EAC9BnC,KAAKoC,iBAAkB,EACvBpC,KAAKqC,UAAY,IAAInB,IACrBlB,KAAKsC,UAAY,EACjBtC,KAAKuC,eAAiB,EACtBvC,KAAKwC,oBAAsBC,EAAiBC,aAEhDC,mBACQ3C,KAAK4C,2BACL5C,KAAK4C,0BAA0BrB,QAAQsB,GAAYA,KAG3DC,qBACQ9C,KAAK+C,6BACL/C,KAAK+C,4BAA4BxB,QAAQsB,GAAYA,KAO7DG,iBACI,OAAOA,GAAehD,MAK1BiD,gBACIC,KAk1CR,SAA0BC,GAEtB,GAAIA,EAAWX,sBAAwBC,EAAiBW,MACpD,OACJD,EAAWX,oBAAsBC,EAAiBW,MAElDD,EAAWd,UAAUd,QAAQjE,IACrBA,EAAE+F,oBAAsBZ,EAAiBa,aACrChG,EAAEiG,YAAcC,EAAUC,MAC1BC,GAAapG,EAAG6F,GAEpB7F,EAAEqG,iBAENrG,EAAE+F,kBAAoBZ,EAAiBW,QA91CvCQ,CAAiB5D,MACjB6D,KAEJhC,WACI,OAAO7B,KAAKnD,MAGpB,MAAMiH,EAASnD,EAA0B,OAAQsB,GACjD,SAAS8B,EAAWlH,EAAMmH,EAA0B9D,EAAM+D,EAA4B/D,GAClF,MAAMgE,EAAO,IAAIjC,EAAKpF,GA41D1B,IAAuCsH,EAp1DnC,OANIH,IAA4B9D,GA21DzBkE,GAAc,mBA11DAF,EAAMF,EA01D2BG,GAx1DlDF,IAA8B/D,GAC9B4C,GAAmBoB,EAAMD,GAEtBC,EAeX,MAAMG,EAAW,CACbC,SAbJ,SAA0BC,EAAGC,GACzB,OAAOD,IAAMC,GAabC,WAXJ,SAA4BF,EAAGC,GAC3B,OAAOE,GAAUH,EAAGC,IAWpBG,QANJ,SAAyBJ,EAAGC,GACxB,OAAOxK,OAAO4K,GAAGL,EAAGC,IAMpBK,QAVJ,SAAyBN,EAAGC,GACxB,OAAOE,GAAUH,EAAGC,EAAG,KAYrBM,EAAmCjH,OAAO,kCAC1CkH,EAAwBlH,OAAO,2BAC/BmH,EAA4B,GAC5BC,EAA+B,GACrC,SAASC,EAAoCC,EAAMzH,GAC/C,MAAM0H,EAAQ1H,EAAasH,EAA4BC,EACvD,OAAQG,EAAMD,KACTC,EAAMD,GAAQ,CACXzE,cAAc,EACdhD,WAAYA,EACZC,MAEI,OADA0H,EAAmBrF,MACZA,KAAKmF,IAEhBG,IAAIvH,GACAsH,EAAmBrF,MACnBA,KAAKmF,GAAQpH,KAI7B,SAASsH,EAAmB1I,GACxB,IAAiD,IAA7CA,EAAOmI,GACP,OACJ,MAAMS,EAAa5I,EAAOoI,GAC1B,GAAIQ,EAAY,CACZhF,EAAc5D,EAAQmI,GAAkC,GAExD,MAAMU,EAAO,IAAIxL,OAAOsH,sBAAsBiE,MAAgBvL,OAAOwL,KAAKD,IAC1E,IAAK,MAAMlH,KAAOmH,EAAM,CACpB,MAAMlI,EAAIiI,EAAWlH,GACrBf,EAAEmI,gBAAgB9I,EAAQW,EAAE6H,KAAM7H,EAAEoI,WAAYpI,EAAEqI,gBAAiBrI,EAAEsI,sBAIjF,SAASC,EAAoBC,EAA6BL,GACtD,OAAO,WACH,IAAIG,EACJ,MAAMG,EAAY,SAAkBpJ,EAAQwI,EAAMO,EAAYM,GAI1D,IAAyB,IAArBA,EAEA,OADAP,EAAgB9I,EAAQwI,EAAMO,EAAY/I,EAAQiJ,GAC3C,KAIX,IAAK5L,OAAOC,UAAUC,eAAeC,KAAKwC,EAAQoI,GAAwB,CACtE,MAAMkB,EAAsBtJ,EAAOoI,GACnCxE,EAAc5D,EAAQoI,EAAuB/K,OAAOkM,OAAO,GAAID,IASnE,OAPAtJ,EAAOoI,GAAuBI,GAAQ,CAClCA,OACAM,kBACAC,aACAC,gBAAiBhJ,EACjBiJ,sBAEGV,EAAoCC,EAAMW,IAErD,OAAIK,EAAqBlG,YAErB2F,EAAqBzG,EACd4G,EAAUhG,MAAM,KAAME,aAI7B2F,EAAqBlE,MAAMzH,UAAU+E,MAAM7E,KAAK8F,WACzC8F,IAInB,SAASI,EAAqBC,GAC1B,OAA0B,IAAhBA,EAAKrM,QAAgC,IAAhBqM,EAAKrM,UACZ,iBAAZqM,EAAK,IAAsC,iBAAZA,EAAK,KAC3B,IAAhBA,EAAKrM,SAA4B,IAAZqM,EAAK,GAGnC,SAASC,EAAaC,EAAGC,EAAG1J,GAExB,OAAI2J,GAAaF,GACNA,EAEP5E,MAAM+E,QAAQH,GACPnD,EAAWuD,MAAMJ,EAAG,CAAEzJ,SAC7BuD,EAAckG,GACPnD,EAAW3E,OAAO8H,OAAGvJ,EAAW,CAAEF,SACzCiE,EAASwF,GACFnD,EAAWwD,IAAIL,EAAG,CAAEzJ,SAC3BoE,EAASqF,GACFnD,EAAWmC,IAAIgB,EAAG,CAAEzJ,SACxByJ,EAkBX,SAASM,EAAkBC,GAEvB,OAAOA,EAUX,SAASC,EAA2BC,GAChCrH,EAAUqH,GACV,MAAMhB,EAAYF,GAAoB,EAAM,CAAClJ,EAAQqK,EAActB,EAAYuB,EAAkBC,KAI7F,MAAMC,EAAezB,EACfA,EAAW0B,YACP1B,EAAW0B,YAAYjN,KAAKwC,GAC5B+I,EAAW3H,WACfhB,EACNsK,GAAmB1K,GAAQ2K,kBAAkBN,EAAcG,EAAcJ,KAEvEQ,QAEa,IAAZC,GAA2BA,EAAQC,IAQpC1B,GAEN,OADAwB,EAAIR,SAAWA,EACRQ,EAKX,MAAMG,EAAiC,CACnCC,MAAM,EACN9K,UAAME,EACN6K,sBAAkB7K,EAClB8K,OAAO,GAOX,SAASC,EAA0B/G,GAC/B,OAAIA,QACO2G,EACU,iBAAV3G,EACA,CAAElE,KAAMkE,EAAO4G,MAAM,EAAME,OAAO,GAMtC9G,EAfX/G,OAAOoF,OAAOsI,GAiBd,MAAMK,EAAgBjB,EAA2BT,GAC3C2B,EAAmBlB,GAlFzB,SAAyBR,EAAGC,EAAG1J,GAC3B,OAAIyJ,QACOA,EACP2B,GAAmB3B,IAAM4B,GAAkB5B,IAAM6B,GAAgB7B,IAAM8B,GAAgB9B,GAChFA,EACP5E,MAAM+E,QAAQH,GACPnD,EAAWuD,MAAMJ,EAAG,CAAEzJ,OAAM8K,MAAM,IACzCvH,EAAckG,GACPnD,EAAW3E,OAAO8H,OAAGvJ,EAAW,CAAEF,OAAM8K,MAAM,IACrD7G,EAASwF,GACFnD,EAAWwD,IAAIL,EAAG,CAAEzJ,OAAM8K,MAAM,IACvC1G,EAASqF,GACFnD,EAAWmC,IAAIgB,EAAG,CAAEzJ,OAAM8K,MAAM,IACpClI,GAAK+H,MAsEVa,EAAevB,EAA2BF,GAC1C0B,EAAqBxB,GAhE3B,SAA2BR,EAAGiC,EAAU1L,GAGpC,OAAI6H,GAAU4B,EAAGiC,GACNA,EACJjC,KA4DX,SAASkC,EAAuBC,GAC5B,OAAOA,EAAQb,iBACTa,EAAQb,iBAAiBb,UACR,IAAjB0B,EAAQd,KACJf,EACAP,EA+Bd,MAAMqC,EAAsB,CACxBC,IAAI5K,EAAO0K,GACHxI,UAAUlG,OAAS,GACnB6O,EAA2B,OAC/B,MAAMpL,EAAIsK,EAA0BW,GACpC,OAAO,IAAII,GAAgB9K,EAAOyK,EAAuBhL,GAAIA,EAAEX,MAAM,EAAMW,EAAEsL,SAEjFpC,MAAMqC,EAAeN,GACbxI,UAAUlG,OAAS,GACnB6O,EAA2B,SAC/B,MAAMpL,EAAIsK,EAA0BW,GACpC,OA67ER,SAA+BM,EAAehC,EAAUlK,EAAO,mBAAqByC,IAAa0J,GAAQ,GACrG,MAAMC,EAAM,IAAIC,GAA8BrM,EAAMkK,EAAUiC,GAhzFtCxK,EAizFLyK,EAAIE,OAjzFS3I,EAizFDwB,EAjzFWjE,EAizFJkL,EAhzFtCjP,OAAOyD,eAAee,EAAQgC,EAAU,CACpC9C,YAAY,EACZ+C,UAAU,EACVC,cAAc,EACd3C,UALR,IAA4BS,EAAQgC,EAAUzC,EAkzF1C,MAAM8J,EAAQ,IAAIuB,MAAMH,EAAIE,OAAQE,IAEpC,GADAJ,EAAIpB,MAAQA,EACRkB,GAAiBA,EAAchP,OAAQ,CACvC,MAAMuP,EAAOC,IAAuB,GACpCN,EAAIO,gBAAgB,EAAG,EAAGT,GAC1BU,GAAqBH,GAEzB,OAAOzB,EAv8EI6B,CAAsBX,EAAeP,EAAuBhL,GAAIA,EAAEX,OAE7E8J,IAAIoC,EAAeN,GACXxI,UAAUlG,OAAS,GACnB6O,EAA2B,OAC/B,MAAMpL,EAAIsK,EAA0BW,GACpC,OAAO,IAAIkB,GAAcZ,EAAeP,EAAuBhL,GAAIA,EAAEX,OAEzEyI,IAAIyD,EAAeN,GACXxI,UAAUlG,OAAS,GACnB6O,EAA2B,OAC/B,MAAMpL,EAAIsK,EAA0BW,GACpC,OAAO,IAAImB,GAAcb,EAAeP,EAAuBhL,GAAIA,EAAEX,OAEzE2B,OAAOqL,EAAOtE,EAAYkD,GACM,iBAAjBxI,UAAU,IACjB2I,EAA2B,UAC/B,MAAMpL,EAAIsK,EAA0BW,GACpC,IAAgB,IAAZjL,EAAEqK,MACF,OAAOiC,GAAiB,GAAID,EAAOtE,EAAY/H,GAE9C,CACD,MAAMoK,EAAmBmC,GAAqCvM,GAExDqK,EAk0ElB,SAAuCmC,GACnC,MAAMnC,EAAQ,IAAIuB,MAAMY,EAAMC,IAE9B,OADAD,EAAKhI,GAAO6F,MAAQA,EACbA,EAr0EeqC,CADDJ,GAAiB,QAAI/M,OAAWA,EAAWS,IAGxD,OADA2M,GAAqCtC,EAAOgC,EAAOtE,EAAYqC,GACxDC,IAGfuC,IAAK/B,EACLxD,QAASmD,EACTL,KAAMI,EACNsC,OAAQ/B,GAENnF,EAtEN,SAA0BmD,EAAGgE,EAAMnG,GAE/B,GAA4B,iBAAjBlE,UAAU,IAA2C,iBAAjBA,UAAU,GACrD,OAAO8H,EAAchI,MAAM,KAAME,WAGrC,GAAIuG,GAAaF,GACb,OAAOA,EAEX,MAAMiB,EAAMnH,EAAckG,GACpBnD,EAAW3E,OAAO8H,EAAGgE,EAAMnG,GAC3BzC,MAAM+E,QAAQH,GACVnD,EAAWuD,MAAMJ,EAAGgE,GACpBxJ,EAASwF,GACLnD,EAAWwD,IAAIL,EAAGgE,GAClBrJ,EAASqF,GACLnD,EAAWmC,IAAIgB,EAAGgE,GAClBhE,EAElB,GAAIiB,IAAQjB,EACR,OAAOiB,EAEX9H,GAAK+H,IAmDT,SAASoB,EAA2B2B,GAChC9K,EAEC,+CAA8C8K,iDAA0DA,mBAJ7GvQ,OAAOwL,KAAKkD,GAAqBnH,QAAQ1E,GAASsG,EAAWtG,GAAQ6L,EAAoB7L,IAOzF,MAAM2N,EAAoB3E,GAAoB,EAAO,CAAC4E,EAAUzD,EAActB,EAAYC,EAAiBuB,KACvG,MAAM,IAAEvJ,EAAF,IAAO2H,GAAQI,EAIf+C,EAAUvB,EAAc,IAAM,GACpCG,GAAmBoD,GAAUC,gBAAgBD,EAAUzD,EAAchN,OAAOkM,OAAO,CAAEvI,MACjF2H,MAAKqF,QAASF,GAAYhC,MAE5BmC,EAA0BJ,EAAkB,CAAE1B,OAAQzE,EAASI,aAK/DoG,EAAW,SAAkBC,EAAMR,EAAMnG,GAC3C,GAAoB,iBAATmG,EAEP,OAAOE,EAAkBzK,MAAM,KAAME,WAEzC,GAAa,OAAT6K,GAAiC,iBAATA,GAA0C,IAArB7K,UAAUlG,OAEvD,OAAOyQ,EAAkBzK,MAAM,KAAME,WAOzC,MAAM8K,EAAuB,iBAATT,EAAoBA,EAAO,GAI/C,OAHAS,EAAKpN,IAAMmN,EACXC,EAAKzF,IAAsB,mBAATgF,EAAsBA,EAAOS,EAAKzF,IACpDyF,EAAKlO,KAAOkO,EAAKlO,MAAQiO,EAAKjO,MAAQ,GAC/B,IAAImO,GAAcD,IAI7B,IAAItI,EAoBAe,EAtBJqH,EAASR,OAASO,EAGlB,SAAWnI,GAGPA,EAAiBA,EAAgB,cAAoB,GAAK,eAI1DA,EAAiBA,EAAgB,WAAiB,GAAK,aAOvDA,EAAiBA,EAAgB,eAAqB,GAAK,iBAG3DA,EAAiBA,EAAgB,MAAY,GAAK,QAjBtD,CAkBGA,IAAqBA,EAAmB,KAE3C,SAAWe,GACPA,EAAUA,EAAS,KAAW,GAAK,OACnCA,EAAUA,EAAS,IAAU,GAAK,MAClCA,EAAUA,EAAS,MAAY,GAAK,QAHxC,CAIGA,IAAcA,EAAY,KAC7B,MAAMyH,EACF/I,YAAYgJ,GACRlL,KAAKkL,MAAQA,GAIrB,SAASC,EAAkBpQ,GACvB,OAAOA,aAAakQ,EAaxB,SAASG,GAAcC,GACnB,OAAQA,EAAWhI,mBACf,KAAKZ,EAAiBa,WAClB,OAAO,EACX,KAAKb,EAAiBC,aACtB,KAAKD,EAAiBW,MAClB,OAAO,EACX,KAAKX,EAAiB6I,eAAgB,CAElC,MAAMC,EAAsBC,IAAqB,GAC3CC,EAAgBC,KAChBC,EAAMN,EAAWO,UAAW9Q,EAAI6Q,EAAI5R,OAC1C,IAAK,IAAIF,EAAI,EAAGA,EAAIiB,EAAGjB,IAAK,CACxB,MAAMgS,EAAMF,EAAI9R,GAChB,GAAIiS,GAAgBD,GAAM,CACtB,GAAItM,GAAYwM,uBACZF,EAAIlO,WAGJ,IACIkO,EAAIlO,MAER,MAAO5C,GAIH,OAFAiR,GAAaP,GACbQ,GAAmBV,IACZ,EAMf,GAAIF,EAAWhI,oBAAsBZ,EAAiBW,MAGlD,OAFA4I,GAAaP,GACbQ,GAAmBV,IACZ,GAOnB,OAHAW,GAA2Bb,GAC3BW,GAAaP,GACbQ,GAAmBV,IACZ,IAgBnB,SAASY,GAAoCjI,GACzC,MAAMkI,EAAelI,EAAK7B,UAAUgK,KAAO,EAEvC9M,GAAY+M,iBAAmB,GAAKF,GACpC3M,GAAK+H,GAGJjI,GAAYgN,oBAAsBH,GAA+C,WAA/B7M,GAAYiN,gBAC/D/M,GAAK+H,GAkBb,SAASiF,GAAqBpB,EAAYqB,EAAG/B,GACzC,MAAMY,EAAsBC,IAAqB,GAGjDU,GAA2Bb,GAC3BA,EAAWsB,aAAe,IAAIjL,MAAM2J,EAAWO,UAAU7R,OAAS,KAClEsR,EAAWuB,iBAAmB,EAC9BvB,EAAWwB,QAAUtN,GAAYsN,MACjC,MAAMC,EAAevN,GAAYwN,mBAEjC,IAAIC,EACJ,GAFAzN,GAAYwN,mBAAqB1B,GAEU,IAAvC9L,GAAYwM,uBACZiB,EAASN,EAAEvS,KAAKwQ,QAGhB,IACIqC,EAASN,EAAEvS,KAAKwQ,GAEpB,MAAO5P,GACHiS,EAAS,IAAI/B,EAAgBlQ,GAOrC,OAJAwE,GAAYwN,mBAAqBD,EAoBrC,SAA0BzB,GAEtB,MAAM4B,EAAgB5B,EAAWO,UAC3BA,EAAaP,EAAWO,UAAYP,EAAWsB,aACrD,IAAIO,EAAoCzK,EAAiBa,WAIrD6J,EAAK,EAAGrS,EAAIuQ,EAAWuB,iBAC3B,IAAK,IAAI/S,EAAI,EAAGA,EAAIiB,EAAGjB,IAAK,CACxB,MAAMuT,EAAMxB,EAAU/R,GACA,IAAlBuT,EAAI9K,YACJ8K,EAAI9K,UAAY,EACZ6K,IAAOtT,IACP+R,EAAUuB,GAAMC,GACpBD,KAIAC,EAAI/J,kBAAoB6J,IACxBA,EAAoCE,EAAI/J,mBAGhDuI,EAAU7R,OAASoT,EACnB9B,EAAWsB,aAAe,KAI1B7R,EAAImS,EAAclT,OAClB,KAAOe,KAAK,CACR,MAAMsS,EAAMH,EAAcnS,GACJ,IAAlBsS,EAAI9K,WACJ+K,GAAeD,EAAK/B,GAExB+B,EAAI9K,UAAY,EAKpB,KAAO6K,KAAM,CACT,MAAMC,EAAMxB,EAAUuB,GACA,IAAlBC,EAAI9K,YACJ8K,EAAI9K,UAAY,EAChBgL,GAAYF,EAAK/B,IAKrB6B,IAAsCzK,EAAiBa,aACvD+H,EAAWhI,kBAAoB6J,EAC/B7B,EAAW1H,iBArEf4J,CAAiBlC,GAEjBY,GAAmBV,GACZyB,EAqEX,SAASQ,GAAenC,GAEpB,MAAMM,EAAMN,EAAWO,UACvBP,EAAWO,UAAY,GACvB,IAAI/R,EAAI8R,EAAI5R,OACZ,KAAOF,KACHwT,GAAe1B,EAAI9R,GAAIwR,GAC3BA,EAAWhI,kBAAoBZ,EAAiBC,aAEpD,SAAS+K,GAAUC,GACf,MAAMpE,EAAOoC,KACb,IACI,OAAOgC,IADX,QAII1B,GAAa1C,IAGrB,SAASoC,KACL,MAAMpC,EAAO/J,GAAYwN,mBAEzB,OADAxN,GAAYwN,mBAAqB,KAC1BzD,EAEX,SAAS0C,GAAa1C,GAClB/J,GAAYwN,mBAAqBzD,EAErC,SAASkC,GAAqBmC,GAC1B,MAAMrE,EAAO/J,GAAYoO,gBAEzB,OADApO,GAAYoO,gBAAkBA,EACvBrE,EAEX,SAAS2C,GAAmB3C,GACxB/J,GAAYoO,gBAAkBrE,EAMlC,SAAS4C,GAA2Bb,GAChC,GAAIA,EAAWhI,oBAAsBZ,EAAiBa,WAClD,OACJ+H,EAAWhI,kBAAoBZ,EAAiBa,WAChD,MAAMqI,EAAMN,EAAWO,UACvB,IAAI/R,EAAI8R,EAAI5R,OACZ,KAAOF,KACH8R,EAAI9R,GAAG2I,oBAAsBC,EAAiBa,WAKtD,IAAIsK,GAAkB,EAClBC,GAAe,EACnB,SAASC,GAAaC,EAAYC,EAAI5D,GAMlC,MAAM7C,EAAM,WACR,OAAO0G,GAAcF,EAAYC,EAAI5D,GAAOpK,KAAMC,YAGtD,OADAsH,EAAI2G,cAAe,EACZ3G,EAEX,SAAS0G,GAAcF,EAAYC,EAAIG,EAAO/H,GAC1C,MAAMgI,EAYV,SAAsBL,EAAYI,EAAO/H,GAErC,IAAIiI,EAAY,EAu9BT7G,EAx8BP,MAAM8G,EAAiB5C,KACvBxI,KACA,MAAMqL,EAAwBhF,IAAuB,GAC/CgC,EAAsBC,IAAqB,GAC3C4C,EAAU,CACZE,iBACAC,wBACAhD,sBACAiD,WAg8BGhH,EA/7BH6G,YACAI,SAAUZ,KACVa,eAAgBd,IAGpB,OADAA,GAAkBQ,EAAQK,SACnBL,EA3CSO,GAChB,IACI,OAAOX,EAAGjO,MAAMoO,EAAO/H,GAE3B,MAAOzH,GAEH,MADAyP,EAAQnS,MAAQ0C,EACVA,EALV,SA4CJ,SAAoByP,GACZR,KAAoBQ,EAAQK,UAC5BhP,EAAK,6DAETmO,GAAkBQ,EAAQM,oBACJ3R,IAAlBqR,EAAQnS,QACRsD,GAAYqP,wBAAyB,GAEzCnF,GAAqB2E,EAAQG,uBAC7BtC,GAAmBmC,EAAQ7C,qBAC3B1H,KACAmI,GAAaoC,EAAQE,gBACjBF,EAAQI,YAAahH,EAGzBjI,GAAYqP,wBAAyB,EAnDjCC,CAAWT,IAgEnB,SAAS7E,GAAuBgD,GAC5B,MAAMjD,EAAO/J,GAAYgN,kBAEzB,OADAhN,GAAYgN,kBAAoBA,EACzBjD,EAEX,SAASG,GAAqBH,GAC1B/J,GAAYgN,kBAAoBjD,EAepC,MAAMT,WAAwB5G,EAC1BC,YAAYnE,EAAOgJ,EAAUlK,EAAO,mBAAqByC,IAAakP,GAAY,EAAM1F,EAASzE,EAASM,SACtGmK,MAAMjS,GACNmD,KAAK+G,SAAWA,EAChB/G,KAAKnD,KAAOA,EACZmD,KAAK8I,OAASA,EACd9I,KAAK+O,qBAAsB,EAC3B/O,KAAKjC,MAAQgJ,EAAShJ,OAAOhB,EAAWF,GAM5CmS,aAAajR,GACT,YAAsBhB,IAAlBiD,KAAKiP,SACEjP,KAAKiP,SAASlR,GAClBA,EAEXuH,IAAIuB,GACiB7G,KAAKjC,MAEtB,IADA8I,EAAW7G,KAAKkP,gBAAgBrI,MACftH,GAAY4P,UAAW,CAEhCX,EAQJxO,KAAKoP,YAAYvI,IAKzBqI,gBAAgBrI,GAEZ,GADAsF,GAAoCnM,MAChCqP,GAAgBrP,MAAO,CACvB,MAAMsP,EAASC,GAAgBvP,KAAM,CACjCxB,OAAQwB,KACRvD,KAAM,SACNoK,aAEJ,IAAKyI,EACD,OAAO/P,GAAY4P,UACvBtI,EAAWyI,EAAOzI,SAItB,OADAA,EAAW7G,KAAK+G,SAASF,EAAU7G,KAAKjC,MAAOiC,KAAKnD,MAC7CmD,KAAK8I,OAAO9I,KAAKjC,MAAO8I,GAAYtH,GAAY4P,UAAYtI,EAEvEuI,YAAYvI,GACR,MAAM0B,EAAWvI,KAAKjC,MACtBiC,KAAKjC,MAAQ8I,EACb7G,KAAKiD,gBACDuM,GAAaxP,OACbyP,GAAgBzP,KAAM,CAClBvD,KAAM,SACN+B,OAAQwB,KACR6G,WACA0B,aAIZ5K,MAEI,OADAqC,KAAKgD,iBACEhD,KAAKgP,aAAahP,KAAKjC,OAElC2R,UAAUC,GACN,OAAOC,GAAoB5P,KAAM2P,GAErCE,QAAQhN,EAAUiN,GAQd,OAPIA,GACAjN,EAAS,CACLrE,OAAQwB,KACRvD,KAAM,SACNoK,SAAU7G,KAAKjC,MACfwK,cAAUxL,IAEXgT,GAAiB/P,KAAM6C,GAElCmN,SACI,OAAOhQ,KAAKrC,MAEhBkE,WACI,MAAQ,GAAE7B,KAAKnD,QAAQmD,KAAKjC,SAEhCkS,UACI,OAAOlO,EAAY/B,KAAKrC,OAE5B,CAACE,OAAOkE,eACJ,OAAO/B,KAAKiQ,WAGMtP,EAA0B,kBAAmBkI,IAqBvE,MAAMmC,GAaF9I,YAAYuG,GACRzI,KAAKqD,kBAAoBZ,EAAiBC,aAC1C1C,KAAK4L,UAAY,GACjB5L,KAAK2M,aAAe,KACpB3M,KAAKoC,iBAAkB,EACvBpC,KAAKmC,wBAAyB,EAC9BnC,KAAKqC,UAAY,IAAInB,IACrBlB,KAAKsC,UAAY,EACjBtC,KAAK6M,MAAQ,EACb7M,KAAKuC,eAAiB,EACtBvC,KAAKwC,oBAAsBC,EAAiBa,WAC5CtD,KAAK4M,iBAAmB,EACxB5M,KAAKkQ,QAAU,IAAM5Q,IACrBU,KAAKjC,MAAQ,IAAIkN,EAAgB,MACjCjL,KAAKmQ,aAAc,EACnBnQ,KAAKoQ,iBAAkB,EACvBpQ,KAAKuD,UAAYC,EAAUC,KAC3B/D,EAAU+I,EAAQ9K,IAAK,oCACvBqC,KAAKqL,WAAa5C,EAAQ9K,IAC1BqC,KAAKnD,KAAO4L,EAAQ5L,MAAQ,iBAAmByC,IAC3CmJ,EAAQnD,MACRtF,KAAKqQ,OAASvC,GAAa9N,KAAKnD,KAAO,UAAW4L,EAAQnD,MAC9DtF,KAAK8I,OACDL,EAAQK,SACHL,EAAQ6H,mBAAqB7H,EAAQ4B,OAChChG,EAASI,WACTJ,EAASM,SACvB3E,KAAKmO,MAAQ1F,EAAQkC,QACrB3K,KAAKuQ,mBAAqB9H,EAAQ8H,iBAClCvQ,KAAKwQ,YAAc/H,EAAQ+H,UAE/B7M,iBA2fJ,SAA+BR,GAE3B,GAAIA,EAAWX,sBAAwBC,EAAiBa,WACpD,OACJH,EAAWX,oBAAsBC,EAAiB6I,eAClDnI,EAAWd,UAAUd,QAAQjE,IACrBA,EAAE+F,oBAAsBZ,EAAiBa,aACzChG,EAAE+F,kBAAoBZ,EAAiB6I,eACnChO,EAAEiG,YAAcC,EAAUC,MAC1BC,GAAapG,EAAG6F,GAEpB7F,EAAEqG,mBArgBN8M,CAAsBzQ,MAE1B2C,mBACQ3C,KAAK4C,2BACL5C,KAAK4C,0BAA0BrB,QAAQsB,GAAYA,KAG3DC,qBACQ9C,KAAK+C,6BACL/C,KAAK+C,4BAA4BxB,QAAQsB,GAAYA,KAO7DlF,MACQqC,KAAKmQ,aACL1Q,EAAM,iCAAgCO,KAAKnD,SAASmD,KAAKqL,cACjC,IAAxB9L,GAAYmR,SAAyC,IAAxB1Q,KAAKqC,UAAUgK,MAAerM,KAAKwQ,WAShExN,GAAehD,MACXoL,GAAcpL,OACVA,KAAK2Q,mBA6czB,SAAkCxN,GAE9B,GAAIA,EAAWX,sBAAwBC,EAAiBW,MACpD,OACJD,EAAWX,oBAAsBC,EAAiBW,MAClDD,EAAWd,UAAUd,QAAQjE,IACrBA,EAAE+F,oBAAsBZ,EAAiB6I,eACzChO,EAAE+F,kBAAoBZ,EAAiBW,MAClC9F,EAAE+F,oBAAsBZ,EAAiBa,aAE9CH,EAAWX,oBAAsBC,EAAiBa,cAtd1CsN,CAAyB5Q,OAX7BoL,GAAcpL,QACdA,KAAK6Q,yBACL3N,KACAlD,KAAKjC,MAAQiC,KAAK8Q,cAAa,GAC/BjN,MASR,MAAMmJ,EAAShN,KAAKjC,MACpB,GAAIoN,EAAkB6B,GAClB,MAAMA,EAAO9B,MACjB,OAAO8B,EAEX+D,OACI,MAAMxJ,EAAMvH,KAAK8Q,cAAa,GAC9B,GAAI3F,EAAkB5D,GAClB,MAAMA,EAAI2D,MACd,OAAO3D,EAEXjC,IAAIvH,GACA,GAAIiC,KAAKqQ,OAAQ,CACb3Q,GAAWM,KAAKoQ,gBAAkB,iCAAgCpQ,KAAKnD,uHACvEmD,KAAKoQ,iBAAkB,EACvB,IACIpQ,KAAKqQ,OAAOlW,KAAK6F,KAAKmO,MAAOpQ,GADjC,QAIIiC,KAAKoQ,iBAAkB,QAI3B1Q,GAAU,GAAO8H,GAGzBmJ,kBAQI,MAAMpI,EAAWvI,KAAKjC,MAChBiT,EACUhR,KAAKqD,oBAAsBZ,EAAiBC,aACtDmE,EAAW7G,KAAK8Q,cAAa,GAC7BG,EAAUD,GACZ7F,EAAkB5C,IAClB4C,EAAkBtE,KACjB7G,KAAK8I,OAAOP,EAAU1B,GAI3B,OAHIoK,IACAjR,KAAKjC,MAAQ8I,GAEVoK,EAEXH,aAAaI,GAGT,IAAI3J,EACJ,GAHAvH,KAAKmQ,aAAc,EACnB5Q,GAAY+M,mBAER4E,EACA3J,EAAMkF,GAAqBzM,KAAMA,KAAKqL,WAAYrL,KAAKmO,YAGvD,IAA2C,IAAvC5O,GAAYwM,uBACZxE,EAAMvH,KAAKqL,WAAWlR,KAAK6F,KAAKmO,YAGhC,IACI5G,EAAMvH,KAAKqL,WAAWlR,KAAK6F,KAAKmO,OAEpC,MAAOpT,GACHwM,EAAM,IAAI0D,EAAgBlQ,GAMtC,OAFAwE,GAAY+M,mBACZtM,KAAKmQ,aAAc,EACZ5I,EAEX4J,UACSnR,KAAKwQ,YACNhD,GAAexN,MACfA,KAAKjC,WAAQhB,GAGrB8S,QAAQhN,EAAUiN,GACd,IAAIsB,GAAY,EACZC,OAAYtU,EAChB,OAAOuU,GAAQ,KACX,IAAIzK,EAAW7G,KAAKrC,MACpB,IAAKyT,GAAatB,EAAiB,CAC/B,MAAMyB,EAAQ7F,KACd7I,EAAS,CACLpG,KAAM,SACN+B,OAAQwB,KACR6G,WACA0B,SAAU8I,IAEdrF,GAAauF,GAEjBH,GAAY,EACZC,EAAYxK,IAGpBgK,0BAaAb,SACI,OAAOhQ,KAAKrC,MAEhBkE,WACI,MAAQ,GAAE7B,KAAKnD,QAAQmD,KAAKqL,WAAWxJ,cAE3CoO,UACI,OAAOlO,EAAY/B,KAAKrC,OAE5B,CAACE,OAAOkE,eACJ,OAAO/B,KAAKiQ,WAGpB,MAAMnE,GAAkBnL,EAA0B,gBAAiBqK,IAiBnE,MAAMwG,GACFtP,cASIlC,KAAKyR,QAAU,EAIfzR,KAAKmP,UAAY,GAIjBnP,KAAK+M,mBAAqB,KAI1B/M,KAAKsM,iBAAmB,EAIxBtM,KAAK6M,MAAQ,EAIb7M,KAAKR,SAAW,EAIhBQ,KAAK0Q,QAAU,EAOf1Q,KAAK0R,sBAAwB,GAI7B1R,KAAK2R,iBAAmB,GAIxB3R,KAAK4R,oBAAqB,EAM1B5R,KAAKuM,mBAAoB,EAKzBvM,KAAK2N,iBAAkB,EAIvB3N,KAAKwM,gBAAiB,EAItBxM,KAAK6R,aAAe,GAIpB7R,KAAK8R,4BAA8B,GAInC9R,KAAK+R,0BAA2B,EAKhC/R,KAAKgS,4BAA6B,EAKlChS,KAAKiS,4BAA6B,EAKlCjS,KAAKkS,sBAAuB,EAK5BlS,KAAK+L,wBAAyB,EAK9B/L,KAAK4O,wBAAyB,GAGtC,MAAMuD,GAAa,GACnB,SAASC,KACL,MAAsB,oBAAXtT,OACAA,YAEW,IAAXuT,EACAA,EAES,oBAATC,KACAA,KAEJH,GAEX,IAAII,IAAsB,EACtBC,IAAgB,EAChBjT,GAAe,WACf,MAAM8S,EAASD,KAKf,OAJIC,EAAOI,oBAAsB,IAAMJ,EAAOK,gBAC1CH,IAAsB,GACtBF,EAAOK,eAAiBL,EAAOK,cAAcjB,WAAY,IAAID,IAAcC,UAC3Ec,IAAsB,GACrBA,GAQIF,EAAOK,eACZL,EAAOI,qBAAuB,EACzBJ,EAAOK,cAAcvD,YACtBkD,EAAOK,cAAcvD,UAAY,IAC9BkD,EAAOK,gBAGdL,EAAOI,oBAAsB,EACrBJ,EAAOK,cAAgB,IAAIlB,KAfnCxU,WAAW,KACFwV,IACD/S,EAAK,+IAEV,GACI,IAAI+R,IAZA,GA2EnB,SAASlE,GAAYnK,EAAYwP,GAI7BxP,EAAWd,UAAUhB,IAAIsR,GACrBxP,EAAWX,oBAAsBmQ,EAAKtP,oBACtCF,EAAWX,oBAAsBmQ,EAAKtP,mBAI9C,SAASgK,GAAelK,EAAYwP,GAIhCxP,EAAWd,UAAUuQ,OAAOD,GACM,IAA9BxP,EAAWd,UAAUgK,MAErBwG,GAAsB1P,GAK9B,SAAS0P,GAAsB1P,IACe,IAAtCA,EAAWhB,yBAEXgB,EAAWhB,wBAAyB,EACpC5C,GAAYmS,sBAAsBrX,KAAK8I,IAQ/C,SAASD,KACL3D,GAAYmR,UAEhB,SAAS7M,KACL,GAA8B,KAAxBtE,GAAYmR,QAAe,CAC7BoC,KAEA,MAAMC,EAAOxT,GAAYmS,sBACzB,IAAK,IAAI7X,EAAI,EAAGA,EAAIkZ,EAAKhZ,OAAQF,IAAK,CAClC,MAAMsJ,EAAa4P,EAAKlZ,GACxBsJ,EAAWhB,wBAAyB,EACF,IAA9BgB,EAAWd,UAAUgK,OACjBlJ,EAAWf,kBAEXe,EAAWf,iBAAkB,EAC7Be,EAAWL,sBAEXK,aAAsB6H,IAGtB7H,EAAWgO,WAIvB5R,GAAYmS,sBAAwB,IAG5C,SAAS1O,GAAeG,GAEpB,MAAMkI,EAAa9L,GAAYwN,mBAC/B,OAAmB,OAAf1B,GAMIA,EAAWwB,QAAU1J,EAAWZ,iBAChCY,EAAWZ,eAAiB8I,EAAWwB,MAEvCxB,EAAWsB,aAAatB,EAAWuB,oBAAsBzJ,EACpDA,EAAWf,kBACZe,EAAWf,iBAAkB,EAC7Be,EAAWR,sBAGZ,IAE4B,IAA9BQ,EAAWd,UAAUgK,MAAc9M,GAAYmR,QAAU,GAC9DmC,GAAsB1P,IAEnB,GAwEX,SAASO,GAAa2H,EAAYlI,GAE9B,GADAvE,QAAQoU,IAAK,iBAAgB3H,EAAWxO,6CAA6CsG,EAAWtG,SAC5FwO,EAAW9H,YAAcC,EAAUyP,MAAO,CAC1C,MAAMC,EAAQ,IAoBtB,SAASC,EAAaC,EAAMF,EAAOG,GAC/B,GAAIH,EAAMnZ,QAAU,IAEhB,YADAmZ,EAAM7Y,KAAK,mBAGf6Y,EAAM7Y,KAAM,GAAE,IAAIqH,MAAM2R,GAAOC,KAAK,QAAQF,EAAKvW,QAC7CuW,EAAKG,cACLH,EAAKG,aAAahS,QAAQiS,GAASL,EAAaK,EAAON,EAAOG,EAAQ,IA1BtEF,EA4nBmBpS,EA5nBYsK,EA6nB5BoI,GAAqBC,GAAQ3S,EAAOtC,KA7nBKyU,EAAO,GAEnD,IAAIS,SAAU,2BAEXtI,EAAWxO,kEAEkCwO,EAAWxO,8BAA8BsG,EAAWtG,8OAI1GwO,aAAsBL,GAAgBK,EAAWA,WAAWxJ,WAAW+R,QAAQ,SAAU,KAAO,sDAIhGV,EAAMI,KAAK,kBAZL,GA0nBR,IAA2BvS,EAAOtC,EA/lBlC,MAAMoV,GACF3R,YAAYrF,EAAO,YAAcyC,IAAawU,EAAcC,EAAcC,GAAqB,GAC3FhU,KAAKnD,KAAOA,EACZmD,KAAK8T,aAAeA,EACpB9T,KAAK+T,aAAeA,EACpB/T,KAAKgU,mBAAqBA,EAC1BhU,KAAK4L,UAAY,GACjB5L,KAAK2M,aAAe,GACpB3M,KAAKqD,kBAAoBZ,EAAiBC,aAC1C1C,KAAKsC,UAAY,EACjBtC,KAAK6M,MAAQ,EACb7M,KAAK4M,iBAAmB,EACxB5M,KAAKkQ,QAAU,IAAM5Q,IACrBU,KAAKiU,YAAa,EAClBjU,KAAKkU,cAAe,EACpBlU,KAAKmU,iBAAkB,EACvBnU,KAAKoU,YAAa,EAClBpU,KAAKuD,UAAYC,EAAUC,KAE/BE,gBACI3D,KAAKqU,WAETA,WACSrU,KAAKkU,eACNlU,KAAKkU,cAAe,EACpB3U,GAAYoS,iBAAiBtX,KAAK2F,MAClC8S,MAGRwB,cACI,OAAOtU,KAAKkU,aAKhBK,cACI,IAAKvU,KAAKiU,WAAY,CAGlB,GAFA/Q,KACAlD,KAAKkU,cAAe,EAChB9I,GAAcpL,MAAO,CACrBA,KAAKmU,iBAAkB,EACvB,IACInU,KAAK8T,eACD9T,KAAKmU,gBAUb,MAAOpZ,GACHiF,KAAKwU,4BAA4BzZ,IAGzC8I,MAGRqN,MAAMlD,GACF,GAAIhO,KAAKiU,WACL,OAGJ/Q,KAUAlD,KAAKoU,YAAa,EAClB,MAAMpH,EAASP,GAAqBzM,KAAMgO,OAAIjR,GAC9CiD,KAAKoU,YAAa,EAClBpU,KAAKmU,iBAAkB,EACnBnU,KAAKiU,YAELzG,GAAexN,MAEfmL,EAAkB6B,IAClBhN,KAAKwU,4BAA4BxH,EAAO9B,OAM5CrH,KAEJ2Q,4BAA4BvY,GACxB,GAAI+D,KAAK+T,aAEL,YADA/T,KAAK+T,aAAa9X,EAAO+D,MAG7B,GAAIT,GAAYwM,uBACZ,MAAM9P,EACV,MAAMW,EAAW,sGAAqGoD,QAClHT,GAAYqP,uBACZhQ,QAAQ6V,KAAM,8BAA6BzU,KAAKnD,wDAGhD+B,QAAQ3C,MAAMW,EAASX,GAW3BsD,GAAYuS,4BAA4BvQ,QAAQmL,GAAKA,EAAEzQ,EAAO+D,OAElE0U,UACS1U,KAAKiU,aACNjU,KAAKiU,YAAa,EACbjU,KAAKoU,aAENlR,KACAsK,GAAexN,MACf6D,OAIZ8Q,cACI,MAAM/W,EAAIoC,KAAK0U,QAAQpW,KAAK0B,MAE5B,OADApC,EAAEoE,GAAShC,KACJpC,EAEXiE,WACI,MAAQ,YAAW7B,KAAKnD,QAE5B+X,MAAMC,GAAkB,IA+5B5B,YAAkBzO,GACd,IAAIyO,GAAkB,EACe,kBAA1BzO,EAAKA,EAAKrM,OAAS,KAC1B8a,EAAkBzO,EAAK0O,OAC3B,MAAMzJ,EAUV,SAAyBjF,GACrB,OAAQA,EAAKrM,QACT,KAAK,EACD,OAAOwF,GAAYwN,mBACvB,KAAK,EACD,OAAO2G,GAAQtN,EAAK,IACxB,KAAK,EACD,OAAOsN,GAAQtN,EAAK,GAAIA,EAAK,KAjBlB2O,CAAgB3O,GACnC,IAAKiF,EACD,OAAO5L,GAAK+H,GAGZ6D,EAAW9H,YAAcC,EAAUC,MACnC7E,QAAQoU,IAAK,iBAAgB3H,EAAWxO,yBAE5CwO,EAAW9H,UAAYsR,EAAkBrR,EAAUyP,MAAQzP,EAAUwR,IA16BjEJ,CAAM5U,KAAM6U,IAgBpB,MAAMI,GAA0B,IAChC,IAAIC,GAAoBxI,GAAKA,IAC7B,SAASoG,KAEDvT,GAAYmR,QAAU,GAAKnR,GAAYqS,oBAE3CsD,GAAkBC,IAEtB,SAASA,KACL5V,GAAYqS,oBAAqB,EACjC,MAAMwD,EAAe7V,GAAYoS,iBACjC,IAAI0D,EAAa,EAIjB,KAAOD,EAAarb,OAAS,GAAG,GACtBsb,IAAeJ,KACjBrW,QAAQ3C,MAAO,qDAAoDgZ,iBAC9D,wDAAuDG,EAAa,MACzEA,EAAaE,OAAO,IAExB,IAAIC,EAAqBH,EAAaE,OAAO,GAC7C,IAAK,IAAIzb,EAAI,EAAGiB,EAAIya,EAAmBxb,OAAQF,EAAIiB,EAAGjB,IAClD0b,EAAmB1b,GAAG0a,cAE9BhV,GAAYqS,oBAAqB,EAErC,MAAM4D,GAAa7U,EAA0B,WAAYkT,IACzD,SAAS4B,GAAqBzH,GAC1B,MAAM0H,EAAgBR,GACtBA,GAAoBxI,GAAKsB,EAAG,IAAM0H,EAAchJ,IA2CpD,SAASiJ,KACLlW,GAAK+H,GAET,SAASoO,GAAqB/Y,GAC1B,OAAO,SAAUF,EAAQwI,EAAMO,GAC3B,GAAIA,EAAY,CAMZ,GAAIA,EAAW3H,MAEX,MAAO,CACHA,MAAO+P,GAAajR,EAAM6I,EAAW3H,OACrCL,YAAY,EACZgD,cAAc,EACdD,UAAU,GAIlB,MAAM,YAAE2G,GAAgB1B,EACxB,MAAO,CACHhI,YAAY,EACZgD,cAAc,EACdD,UAAU,EACV2G,cAEI,OAAO0G,GAAajR,EAAMuK,EAAYjN,KAAK6F,SAKvD,OAAO6V,GAAqBhZ,GAAMkD,MAAMC,KAAMC,YAGtD,SAAS4V,GAAqBhZ,GAE1B,OAAO,SAAUF,EAAQwI,EAAMO,GAC3B1L,OAAOyD,eAAed,EAAQwI,EAAM,CAChCzE,cAAc,EACdhD,YAAY,EACZC,QAGA2H,IAAIvH,GACAwC,EAAcP,KAAMmF,EAAMuI,GAAO7Q,EAAMkB,QAqCvD,MAAM2P,GAAS,SAAgB5C,EAAMR,EAAMnG,EAAM2R,GAE7C,OAAyB,IAArB7V,UAAUlG,QAAgC,mBAAT+Q,EAC1BgD,GAAahD,EAAKjO,MAAQ,mBAAoBiO,GAEhC,IAArB7K,UAAUlG,QAAgC,mBAATuQ,EAC1BwD,GAAahD,EAAMR,GAEL,IAArBrK,UAAUlG,QAAgC,iBAAT+Q,EAC1B8K,GAAqB9K,IAEnB,IAATgL,EAKOF,GAAqBtL,GAAMvK,MAAM,KAAME,gBAH9CM,EAAcuK,EAAMR,EAAMwD,GAAahD,EAAKjO,MAAQyN,EAAMnG,EAAKpG,MAAOiC,QAoB9E,SAAS+V,GAAkBpZ,EAAQqK,EAAcgH,GAC7CzN,EAAc5D,EAAQqK,EAAc8G,GAAa9G,EAAcgH,EAAG1P,KAAK3B,KAS3E,SAAS2U,GAAQ0E,EAAMjL,EAAO1L,GAK1B,MAAMxC,EAAQkO,GAAQA,EAAKlO,MAASmZ,EAAKnZ,MAAQ,WAAayC,IAE9D,IAAI2W,EACJ,IAFiBlL,EAAKmL,YAAcnL,EAAKoL,MAIrCF,EAAW,IAAIpC,GAAShX,GAAM,WAC1BmD,KAAKkR,MAAMkF,KACZrL,EAAKsL,QAAStL,EAAKiJ,wBAErB,CACD,MAAMkC,EAAYI,GAA2BvL,GAE7C,IAAIuJ,GAAc,EAClB2B,EAAW,IAAIpC,GAAShX,EAAM,KACrByX,IACDA,GAAc,EACd4B,EAAU,KACN5B,GAAc,EACT2B,EAAShC,YACVgC,EAAS/E,MAAMkF,OAG5BrL,EAAKsL,QAAStL,EAAKiJ,oBAE1B,SAASoC,IACLJ,EAAKC,GAGT,OADAA,EAAS5B,WACF4B,EAAStB,cAzDpBjH,GAAO6I,MAnDP,SAA8B5Z,EAAQqK,EAActB,EAAY8Q,GAC5D,OAAwB,IAApBA,GACAT,GAAkBpZ,EAAQqK,EAActB,EAAW3H,OAC5C,MAEP2H,EAIO,CACHhF,cAAc,EACdhD,YAAY,EACZC,MAEI,OADAoY,GAAkB/V,KAAMgH,EAActB,EAAW3H,OAAS2H,EAAW0B,YAAYjN,KAAK6F,OAC/EA,KAAKgH,IAEhB1B,IAAKqQ,IAIN,CACHjY,YAAY,EACZgD,cAAc,EACd4E,IAAIgB,GACAyP,GAAkB/V,KAAMgH,EAAcV,IAE1C3I,UAoFR,MAAM8Y,GAAO/J,GAAMA,IACnB,SAAS4J,GAA2BvL,GAChC,OAAOA,EAAKmL,UACNnL,EAAKmL,UACLnL,EAAKoL,MACAzJ,GAAM1P,WAAW0P,EAAG3B,EAAKoL,OAC1BM,GAEd,SAASR,GAASS,EAAYC,EAAQ5L,EAAO1L,GAKzC,MAAMxC,EAAOkO,EAAKlO,MAAQ,YAAcyC,IAClCsX,EAAelJ,GAAO7Q,EAAMkO,EAAKsL,SAsCjBtC,EAtC4ChJ,EAAKsL,QAsCnCQ,EAtC4CF,EAuCzE,WACH,IACI,OAAOE,EAAO9W,MAAMC,KAAMC,WAE9B,MAAOlF,GACHgZ,EAAa5Z,KAAK6F,KAAMjF,MA5C0D4b,GAsC9F,IAA0B5C,EAAc8C,EArCpC,MAAMC,GAAW/L,EAAKmL,YAAcnL,EAAKoL,MACnCD,EAAYI,GAA2BvL,GAC7C,IAEIhN,EAFAqT,GAAY,EACZkD,GAAc,EAElB,MAAMxL,EAASiC,EAAKuF,kBACdjM,EAASI,WACTsG,EAAKjC,QAAUzE,EAASM,QACxB/G,EAAI,IAAIiW,GAAShX,EAAM,KACrBuU,GAAa0F,EACbV,IAEM9B,IACNA,GAAc,EACd4B,EAAUE,KAEfrL,EAAKsL,QAAStL,EAAKiJ,oBACtB,SAASoC,IAEL,GADA9B,GAAc,EACV1W,EAAEqW,WACF,OACJ,IAAIhD,GAAU,EACdrT,EAAEsT,MAAM,KACJ,MAAM6F,EAAYL,EAAW9Y,GAC7BqT,EAAUG,IAActI,EAAO/K,EAAOgZ,GACtChZ,EAAQgZ,IAER3F,GAAarG,EAAK+E,iBAClB8G,EAAa7Y,EAAOH,GACnBwT,IAAyB,IAAZH,GACd2F,EAAa7Y,EAAOH,GACpBwT,IACAA,GAAY,GAGpB,OADAxT,EAAEyW,WACKzW,EAAE+W,cAgBb,SAAS7R,GAAmB/B,EAAOuJ,EAAMnG,GACrC,OAAOC,GAAc,qBAAsBrD,EAAOuJ,EAAMnG,GAE5D,SAASC,GAAc4S,EAAMjW,EAAOuJ,EAAMnG,GACtC,MAAMD,EAAuB,mBAATC,EAAsBuP,GAAQ3S,EAAOuJ,GAAQoJ,GAAQ3S,GACnEkW,EAAqB,mBAAT9S,EAAsBA,EAAOmG,EACzC4M,EAAgB,GAAEF,aAQxB,OAPI9S,EAAKgT,GACLhT,EAAKgT,GAAc7V,IAAI4V,GAGvB/S,EAAKgT,GAAgB,IAAIhW,IAAI,CAAC+V,IAGd,mBADP/S,EAAK8S,GAEPvX,GAAK+H,GACT,WACH,MAAM2P,EAAgBjT,EAAKgT,GACvBC,IACAA,EAAcvE,OAAOqE,GACM,IAAvBE,EAAc9K,aACPnI,EAAKgT,KAM5B,SAASE,GAAU3O,GACf,MAAM,eAAE+D,EAAF,yBAAkBuF,EAAlB,qBAA4CG,EAA5C,uBAAkEnG,EAAlE,kBAA0FmJ,EAA1F,2BAA6GlD,EAA7G,2BAAyIC,GAA+BxJ,EAI9K,IAHmC,IAA/BA,EAAQ4O,sBAhtBR9X,GAAYoS,iBAAiB5X,QAC7BwF,GAAYmR,SACZnR,GAAYqS,qBACZnS,EAAK,4EACT+S,IAAgB,EACZD,KAC0C,KAApCH,KAAYK,sBACdL,KAAYM,mBAAgB3V,GAChCwC,GAAc,IAAIiS,UA2sBCzU,IAAnByP,EAA8B,CAG9B,IAAI8K,EACJ,OAAQ9K,GACJ,KAAK,EACL,IAAK,WACD8K,GAAK,EACL,MACJ,KAAK,EACL,IAAK,QACDA,GAAK,EACL,MACJ,IAAK,SACL,IAAK,SACDA,EAAK,SACL,MACJ,QACI7X,EAAM,wCAAuC+M,gDAErDjN,GAAYiN,eAAiB8K,EAC7B/X,GAAYgN,mBAA2B,IAAP+K,GAAsB,WAAPA,OAElBva,IAA7BgV,IACAxS,GAAYwS,2BAA6BA,QAEVhV,IAA/BiV,IACAzS,GAAYyS,6BAA+BA,QAEZjV,IAA/BkV,IACA1S,GAAY0S,6BAA+BA,EAC3C1S,GAAYoO,iBAAmBpO,GAAY0S,iCAElBlV,IAAzBmV,IACA3S,GAAY2S,uBAAyBA,QAEVnV,IAA3BgP,KAC+B,IAA3BA,GACAnN,QAAQ6V,KAAK,4GACjBlV,GAAYwM,yBAA2BA,GAEvCmJ,GACAO,GAAqBP,GAuB7B,SAASpL,GAAiBnN,EAAQ4a,EAAYhS,EAAYkD,GAOtD,MAAMb,EAAmBmC,GADzBtB,EAAUX,EAA0BW,IAMpC,OAJApD,EAAmB1I,GACnB0K,GAAmB1K,EAAQ8L,EAAQ5L,KAAM+K,EAAiBb,UACtDwQ,GACApN,GAAqCxN,EAAQ4a,EAAYhS,EAAYqC,GAClEjL,EAEX,SAASoN,GAAqCtB,GAC1C,OAAOA,EAAQb,oBAAsC,IAAjBa,EAAQd,KAAiBU,EAAeN,GAEhF,SAASoC,GAAqCxN,EAAQ4a,EAAYhS,EAAYqC,GAW1E1E,KACA,IACI,MAAMsC,EAAOrE,EAAmBoW,GAChC,IAAK,MAAMlZ,KAAOmH,EAAM,CACpB,MAAME,EAAa1L,OAAOyH,yBAAyB8V,EAAYlZ,GAC3DmJ,EAaJ,MAAMgQ,GAPYjS,GAAclH,KAAOkH,EACjCA,EAAWlH,GACXqH,EAAW/H,IACP6M,EACA5C,GAGyBjL,EAAQ0B,EAAKqH,GAAY,GACxD8R,GAEAxd,OAAOyD,eAAed,EAAQ0B,EAAKmZ,IApB/C,QAwBI3T,MAOR,SAAS4P,GAAqBd,GAC1B,MAAM3F,EAAS,CACXnQ,KAAM8V,EAAK9V,MAIf,OAFI8V,EAAK/G,WAAa+G,EAAK/G,UAAU7R,OAAS,IAC1CiT,EAAOuG,aA7oEf,SAAgBR,GACZ,MAAMxL,EAAM,GAKZ,OAJAwL,EAAKxR,QAAQkW,KACkB,IAAvBlQ,EAAImQ,QAAQD,IACZlQ,EAAIlN,KAAKod,KAEVlQ,EAuoEmBoQ,CAAOhF,EAAK/G,WAAWjF,IAAI8M,KAC9CzG,EAeX,SAAS4K,KACL5X,KAAKpD,QAAU,iBA+InB,SAASib,GAAc9Z,EAAOU,GAC1B,OAAIV,eAEahB,IAAb0B,IAIIwJ,GAAmBlK,IACZA,EAAMiE,GAAOmH,OAAO2O,IAAIrZ,GAK/BwJ,GAAmBlK,MACrBA,EAAMiE,IACR8B,EAAO/F,IACPyX,GAAWzX,IACX+N,GAAgB/N,IAExB,SAASyI,GAAazI,GAIlB,OAHyB,IAArBkC,UAAUlG,QACV0F,GAAK+H,GAEFqQ,GAAc9Z,GA+JzB,SAAS8R,GAAQ9O,EAAOgX,EAAUC,EAAUlI,GACxC,MAAwB,mBAAbkI,EAQf,SAAmCjX,EAAOtC,EAAUoE,EAAUiN,GAC1D,OAAOmI,GAAkBlX,EAAOtC,GAAUoR,QAAQhN,EAAUiN,GARjDoI,CAA0BnX,EAAOgX,EAAUC,EAAUlI,GAIpE,SAA2B/O,EAAO8B,EAAUiN,GACxC,OAAOmI,GAAkBlX,GAAO8O,QAAQhN,EAAUiN,GAHvCqI,CAAkBpX,EAAOgX,EAAUC,GAvUlDJ,GAAsB3d,UAAYD,OAAOoE,OAAOlC,MAAMjC,WA6ctD,SAASme,GAAY1K,EAAQ2K,GACzBnV,KACA,IACI,OAAOwK,EAAO3N,MAAMsY,GADxB,QAIIxU,MAkDR,SAASyU,GAAO3b,GACZ,OAAOA,EAAOqF,GAElB,SAASuW,GAAcC,GACnB,MAAsB,iBAARA,GAAmC,iBAARA,GAAmC,iBAARA,EAIxE,MAAMvO,GAAmB,CACrB6N,IAAInb,EAAQE,GACR,GAAIA,IAASmF,GAAkB,gBAATnF,GAA0BA,IAASiI,EACrD,OAAO,EACX,MAAMmE,EAAMqP,GAAO3b,GAInB,OAAI4b,GAAc1b,GACPoM,EAAI6O,IAAIjb,GACZA,KAAQF,GAEnBgB,IAAIhB,EAAQE,GACR,GAAIA,IAASmF,GAAkB,gBAATnF,GAA0BA,IAASiI,EACrD,OAAOnI,EAAOE,GAClB,MAAMoM,EAAMqP,GAAO3b,GACbwG,EAAa8F,EAAIE,OAAOxL,IAAId,GAClC,GAAIsG,aAAsBlB,EAAM,CAC5B,MAAM+K,EAAS7J,EAAWxF,MAO1B,YANeZ,IAAXiQ,GAIA/D,EAAI6O,IAAIjb,GAELmQ,EAMX,OAFIuL,GAAc1b,IACdoM,EAAI6O,IAAIjb,GACLF,EAAOE,IAElByI,IAAG,CAAC3I,EAAQE,EAAMkB,MACTwa,GAAc1b,KAnV3B,SAASyI,EAAIuG,EAAKxN,EAAKN,GACnB,GAAyB,IAArBkC,UAAUlG,QAAiBqO,GAAgByD,GAY/C,GAAI5D,GAAmB4D,GAAM,CACzB,MAAM5C,EAAM4C,EAAI7J,GACWiH,EAAIE,OAAOxL,IAAIU,GAEtC4K,EAAIwP,MAAMpa,EAAKN,GAGfkL,EAAI3B,kBAAkBjJ,EAAKN,EAAOkL,EAAIyP,sBAGzC,GAAIvQ,GAAgB0D,GACrBA,EAAIvG,IAAIjH,EAAKN,QAEZ,GAAIqK,GAAgByD,GACrBA,EAAIxK,IAAIhD,OAEP,KAAI6J,GAAkB2D,GAWvB,OAAOpM,GAAK+H,GAVO,iBAARnJ,IACPA,EAAMsa,SAASta,EAAK,KACxBqB,EAAUrB,GAAO,EAAI,uBAAsBA,MAC3C6E,KACI7E,GAAOwN,EAAI9R,SACX8R,EAAI9R,OAASsE,EAAM,GACvBwN,EAAIxN,GAAON,EACX8F,SApCJ,CACIX,KACA,MAAMiG,EAAS9K,EACf,IACI,IAAK,IAAIA,KAAO8K,EACZ7D,EAAIuG,EAAKxN,EAAK8K,EAAO9K,IAF7B,QAKIwF,OA4UJyB,CAAI3I,EAAQE,EAAMkB,IACX,GAEX6a,eAAejc,EAAQE,GACnB,IAAK0b,GAAc1b,GACf,OAAO,EAGX,OAFYyb,GAAO3b,GACfkc,OAAOhc,IACJ,GAEXic,QAAQnc,IACQ2b,GAAO3b,GACfoc,SAAS/V,iBACNgW,QAAQF,QAAQnc,IAE3Bsc,kBAAkBtc,IACd8C,EAAM,gDACC,IASf,SAAS4P,GAAgB6J,GACrB,YAAsCnc,IAA/Bmc,EAAcC,cAA8BD,EAAcC,aAAapf,OAAS,EAE3F,SAAS6V,GAAoBsJ,EAAevJ,GACxC,MAAMwJ,EAAeD,EAAcC,eAAiBD,EAAcC,aAAe,IAEjF,OADAA,EAAa9e,KAAKsV,GACX/P,EAAK,KACR,MAAMwZ,EAAMD,EAAazB,QAAQ/H,IACpB,IAATyJ,GACAD,EAAa7D,OAAO8D,EAAK,KAGrC,SAAS7J,GAAgB2J,EAAe5J,GACpC,MAAMiC,EAAQ7F,KACd,IAEI,MAAMyN,EAAe,IAAKD,EAAcC,cAAgB,IACxD,IAAK,IAAItf,EAAI,EAAGiB,EAAIqe,EAAapf,OAAQF,EAAIiB,IAEzC4E,IADA4P,EAAS6J,EAAatf,GAAGyV,KACJA,EAAO7S,KAAM,+DAC7B6S,GAHuCzV,KAMhD,OAAOyV,EATX,QAYItD,GAAauF,IAIrB,SAAS/B,GAAa6J,GAClB,YAAsCtc,IAA/Bsc,EAAWC,iBAAiCD,EAAWC,gBAAgBvf,OAAS,EAE3F,SAASgW,GAAiBsJ,EAAY1J,GAClC,MAAM4J,EAAYF,EAAWC,kBAAoBD,EAAWC,gBAAkB,IAE9E,OADAC,EAAUlf,KAAKsV,GACR/P,EAAK,KACR,MAAMwZ,EAAMG,EAAU7B,QAAQ/H,IACjB,IAATyJ,GACAG,EAAUjE,OAAO8D,EAAK,KAGlC,SAAS3J,GAAgB4J,EAAY/J,GACjC,MAAMiC,EAAQ7F,KACd,IAAI6N,EAAYF,EAAWC,gBAC3B,GAAKC,EAAL,CAEAA,EAAYA,EAAUva,QACtB,IAAK,IAAInF,EAAI,EAAGiB,EAAIye,EAAUxf,OAAQF,EAAIiB,EAAGjB,IACzC0f,EAAU1f,GAAGyV,GAEjBtD,GAAauF,IAGjB,MAAMiI,GAAkB,IAClBnQ,GAAa,CACf1L,IAAG,CAAChB,EAAQE,IACJA,IAASmF,EACFrF,EAAOqF,GACL,WAATnF,EACOF,EAAOqF,GAAOyX,iBACL,iBAAT5c,EACA6c,GAAgB/b,IAAIxD,KAAKwC,EAAQE,GAExB,iBAATA,GAAsB8c,MAAM9c,GAGnC6c,GAAgBxf,eAAe2C,GACxB6c,GAAgB7c,GAEpBF,EAAOE,GALH6c,GAAgB/b,IAAIxD,KAAKwC,EAAQgc,SAAS9b,IAOzDyI,IAAG,CAAC3I,EAAQE,EAAMkB,KACD,WAATlB,GACAF,EAAOqF,GAAO4X,eAAe7b,GAEb,iBAATlB,GACP6c,GAAgBpU,IAAInL,KAAKwC,EAAQE,EAAMkB,GAEvB,iBAATlB,GAAqB8c,MAAM9c,GAClCF,EAAOE,GAAQkB,EAIf2b,GAAgBpU,IAAInL,KAAKwC,EAAQgc,SAAS9b,GAAOkB,IAE9C,GAEXkb,kBAAkBtc,IACd8C,EAAM,uCACC,IAef,MAAMyJ,GACFhH,YAAYrF,EAAMkK,EAAUiC,GACxBhJ,KAAKgJ,MAAQA,EACbhJ,KAAKmJ,OAAS,GACdnJ,KAAK6H,WAAQ9K,EACbiD,KAAK6Z,gBAAkB,EACvB7Z,KAAKkE,KAAO,IAAIjC,EAAKpF,GAAQ,mBAAqByC,KAClDU,KAAK+G,SAAW,CAAC+S,EAAMC,IAAShT,EAAS+S,EAAMC,EAAMld,EAAO,QAEhEmS,aAAajR,GACT,YAAsBhB,IAAlBiD,KAAKiP,SACEjP,KAAKiP,SAASlR,GAClBA,EAEXic,cAAc7Q,GACV,YAAsBpM,IAAlBiD,KAAKiP,UAA0B9F,EAAOpP,OAAS,EACxCoP,EAAOxC,IAAI3G,KAAKiP,UACpB9F,EAEXuG,UAAUC,GACN,OAAOC,GAAoB5P,KAAM2P,GAErCE,QAAQhN,EAAUiN,GAAkB,GAYhC,OAXIA,GACAjN,EAAS,CACLrE,OAAQwB,KAAK6H,MACbpL,KAAM,SACNwd,MAAO,EACPC,MAAOla,KAAKmJ,OAAOnK,QACnBmb,WAAYna,KAAKmJ,OAAOpP,OACxBqgB,QAAS,GACTC,aAAc,IAGftK,GAAiB/P,KAAM6C,GAElC4W,iBAEI,OADAzZ,KAAKkE,KAAKlB,iBACHhD,KAAKmJ,OAAOpP,OAEvB6f,eAAeU,GACX,GAAyB,iBAAdA,GAA0BA,EAAY,EAC7C,MAAM,IAAIpe,MAAM,8BAAgCoe,GACpD,IAAIC,EAAgBva,KAAKmJ,OAAOpP,OAChC,GAAIugB,IAAcC,EAEb,GAAID,EAAYC,EAAe,CAChC,MAAMC,EAAW,IAAI9Y,MAAM4Y,EAAYC,GACvC,IAAK,IAAI1gB,EAAI,EAAGA,EAAIygB,EAAYC,EAAe1gB,IAC3C2gB,EAAS3gB,QAAKkD,EAClBiD,KAAKwJ,gBAAgB+Q,EAAe,EAAGC,QAGvCxa,KAAKwJ,gBAAgB8Q,EAAWC,EAAgBD,GAExDG,kBAAkBC,EAAWC,GACzB,GAAID,IAAc1a,KAAK6Z,gBACnB,MAAM,IAAI3d,MAAM,6FACpB8D,KAAK6Z,iBAAmBc,EAE5BnR,gBAAgByQ,EAAOW,EAAaJ,GAChCrO,GAAoCnM,KAAKkE,MACzC,MAAMnK,EAASiG,KAAKmJ,OAAOpP,OAe3B,QAdcgD,IAAVkd,EACAA,EAAQ,EACHA,EAAQlgB,EACbkgB,EAAQlgB,EACHkgB,EAAQ,IACbA,EAAQY,KAAKC,IAAI,EAAG/gB,EAASkgB,IAE7BW,EADqB,IAArB3a,UAAUlG,OACIA,EAASkgB,EAClBW,QACS,EAEAC,KAAKC,IAAI,EAAGD,KAAKE,IAAIH,EAAa7gB,EAASkgB,SAC5Cld,IAAbyd,IACAA,EAAWrb,GACXkQ,GAAgBrP,MAAO,CACvB,MAAMsP,EAASC,GAAgBvP,KAAM,CACjCxB,OAAQwB,KAAK6H,MACbpL,KAAM,SACNwd,QACAI,aAAcO,EACdV,MAAOM,IAEX,IAAKlL,EACD,OAAOnQ,EACXyb,EAActL,EAAO+K,aACrBG,EAAWlL,EAAO4K,MAEtBM,EAA+B,IAApBA,EAASzgB,OAAeygB,EAAWA,EAAS7T,IAAIL,GAAKtG,KAAK+G,SAAST,OAAGvJ,IAKjF,MAAMwK,EAAMvH,KAAKgb,sBAAsBf,EAAOW,EAAaJ,GAG3D,OAFoB,IAAhBI,GAAyC,IAApBJ,EAASzgB,QAC9BiG,KAAKib,kBAAkBhB,EAAOO,EAAUjT,GACrCvH,KAAKga,cAAczS,GAE9ByT,sBAAsBf,EAAOW,EAAaJ,GACtC,GAAIA,EAASzgB,OAASyf,GAClB,OAAOxZ,KAAKmJ,OAAOmM,OAAO2E,EAAOW,KAAgBJ,GAEhD,CACD,MAAMjT,EAAMvH,KAAKmJ,OAAOnK,MAAMib,EAAOA,EAAQW,GAI7C,OAHA5a,KAAKmJ,OAASnJ,KAAKmJ,OACdnK,MAAM,EAAGib,GACTiB,OAAOV,EAAUxa,KAAKmJ,OAAOnK,MAAMib,EAAQW,IACzCrT,GAGf4T,uBAAuBlB,EAAOpT,EAAU0B,GACpC,MAAMiG,GAAaxO,KAAKgJ,QApuCrBxB,EAquCG4T,EAAS5L,GAAaxP,MACtBsP,EAAS8L,GAAU5M,EACnB,CACEhQ,OAAQwB,KAAK6H,MACbpL,KAAM,SACNwd,QACApT,WACA0B,YAEF,KAKNvI,KAAKkE,KAAKjB,gBACNmY,GACA3L,GAAgBzP,KAAMsP,GAI9B2L,kBAAkBhB,EAAOC,EAAOE,GAC5B,MAAM5L,GAAaxO,KAAKgJ,QA1vCrBxB,EA2vCG4T,EAAS5L,GAAaxP,MACtBsP,EAAS8L,GAAU5M,EACnB,CACEhQ,OAAQwB,KAAK6H,MACbpL,KAAM,SACNwd,QACAG,UACAF,QACAG,aAAcD,EAAQrgB,OACtBogB,WAAYD,EAAMngB,QAEpB,KAGNiG,KAAKkE,KAAKjB,gBAENmY,GACA3L,GAAgBzP,KAAMsP,IAKlC,MAAMoK,GAAkB,CACpBhK,UAAUC,GACN,OAAO3P,KAAKgC,GAAO0N,UAAUC,IAEjCE,QAAQhN,EAAUiN,GAAkB,GAEhC,OADY9P,KAAKgC,GACN6N,QAAQhN,EAAUiN,IAEjCuL,QACI,OAAOrb,KAAKsV,OAAO,IAEvB1B,QAAQ4G,GACJ,MAAMvR,EAAMjJ,KAAKgC,GACjB,OAAOiH,EAAIO,gBAAgB,EAAGP,EAAIE,OAAOpP,OAAQygB,IAMrDc,OACI,OAAOtb,KAAKhB,SAEhBgR,SAEI,OAAOhQ,KAAKsb,QAQhBhG,OAAO2E,EAAOW,KAAgBJ,GAC1B,MAAMvR,EAAMjJ,KAAKgC,GACjB,OAAQ/B,UAAUlG,QACd,KAAK,EACD,MAAO,GACX,KAAK,EACD,OAAOkP,EAAIO,gBAAgByQ,GAC/B,KAAK,EACD,OAAOhR,EAAIO,gBAAgByQ,EAAOW,GAE1C,OAAO3R,EAAIO,gBAAgByQ,EAAOW,EAAaJ,IAEnDhR,gBAAgByQ,EAAOW,EAAaJ,GAEhC,OADYxa,KAAKgC,GACNwH,gBAAgByQ,EAAOW,EAAaJ,IAEnDngB,QAAQkhB,GACJ,MAAMtS,EAAMjJ,KAAKgC,GAEjB,OADAiH,EAAIO,gBAAgBP,EAAIE,OAAOpP,OAAQ,EAAGwhB,GACnCtS,EAAIE,OAAOpP,QAEtB+a,MACI,OAAO9U,KAAKsV,OAAOuF,KAAKC,IAAI9a,KAAKgC,GAAOmH,OAAOpP,OAAS,EAAG,GAAI,GAAG,IAEtES,QACI,OAAOwF,KAAKsV,OAAO,EAAG,GAAG,IAE7BkG,WAAWD,GACP,MAAMtS,EAAMjJ,KAAKgC,GAEjB,OADAiH,EAAIO,gBAAgB,EAAG,EAAG+R,GACnBtS,EAAIE,OAAOpP,QAEtB0hB,UAOI,MAAMC,EAAQ1b,KAAKhB,QACnB,OAAO0c,EAAMD,QAAQ1b,MAAM2b,EAAOzb,YAEtC0b,KAAKC,GAMD,MAAMF,EAAQ1b,KAAKhB,QACnB,OAAO0c,EAAMC,KAAK5b,MAAM2b,EAAOzb,YAEnC4Y,OAAO9a,GACH,MAAMkL,EAAMjJ,KAAKgC,GACXoX,EAAMnQ,EAAI+Q,cAAc/Q,EAAIE,QAAQuO,QAAQ3Z,GAClD,OAAIqb,GAAO,IACPpZ,KAAKsV,OAAO8D,EAAK,IACV,IAIfzb,IAAIsc,GACA,MAAMhR,EAAMjJ,KAAKgC,GACjB,GAAIiH,EAAK,CACL,GAAIgR,EAAQhR,EAAIE,OAAOpP,OAEnB,OADAkP,EAAI/E,KAAKlB,iBACFiG,EAAI+F,aAAa/F,EAAIE,OAAO8Q,IAEvCrb,QAAQ6V,KAAM,gDAA+CwF,6BAAiChR,EAAIE,OAAOpP,0FAIjHuL,IAAI2U,EAAOpT,GACP,MAAMoC,EAAMjJ,KAAKgC,GACXmH,EAASF,EAAIE,OACnB,GAAI8Q,EAAQ9Q,EAAOpP,OAAQ,CAEvBoS,GAAoClD,EAAI/E,MACxC,MAAMqE,EAAWY,EAAO8Q,GACxB,GAAI5K,GAAgBpG,GAAM,CACtB,MAAMqG,EAASC,GAAgBtG,EAAK,CAChCxM,KAAM,SACN+B,OAAQyK,EAAIpB,MACZoS,QACApT,aAEJ,IAAKyI,EACD,OACJzI,EAAWyI,EAAOzI,UAEtBA,EAAWoC,EAAIlC,SAASF,EAAU0B,MACLA,IAEzBY,EAAO8Q,GAASpT,EAChBoC,EAAIkS,uBAAuBlB,EAAOpT,EAAU0B,QAG/C,IAAI0R,IAAU9Q,EAAOpP,OAMtB,MAAM,IAAImC,MAAO,qCAAoC+d,oBAAwB9Q,EAAOpP,UAJpFkP,EAAIO,gBAAgByQ,EAAO,EAAG,CAACpT,OAQ3C,CACI,SACA,QACA,SACA,UACA,UACA,OACA,cACA,MACA,SACA,cACA,QACA,OACA,WACA,kBACFtF,QAAQsa,IACNnC,GAAgBmC,GAAY,WACxB,MAAM5S,EAAMjJ,KAAKgC,GACjBiH,EAAI/E,KAAKlB,iBACT,MAAMuE,EAAM0B,EAAI+Q,cAAc/Q,EAAIE,QAClC,OAAO5B,EAAIsU,GAAU9b,MAAMwH,EAAKtH,cAGxC,MAAM6b,GAAkCnb,EAA0B,gCAAiCuI,IACnG,SAAShB,GAAkBnH,GACvB,OAAOZ,EAASY,IAAU+a,GAAgC/a,EAAMiB,IAGpE,IAAI+Z,GACJ,MAAMC,GAAsB,GAG5B,MAAMrS,GACFzH,YAAY+Z,EAAalV,EAAWV,EAAcxJ,EAAO,iBAAmByC,KAMxE,GALAU,KAAK+G,SAAWA,EAChB/G,KAAKnD,KAAOA,EACZmD,KAAK+b,IAAMC,GACXhc,KAAKkc,UAAYnY,EAAY,GAAE/D,KAAKnD,eACpCmD,KAAKnC,OAAOC,aAAe,MACR,mBAARkD,IACP,MAAM,IAAI9E,MAAM,sGAEpB8D,KAAKmc,MAAQ,IAAInb,IACjBhB,KAAKoc,QAAU,IAAIpb,IACnBhB,KAAKqc,MAAMJ,GAEfK,KAAKje,GACD,OAAO2B,KAAKmc,MAAMrE,IAAIzZ,GAE1ByZ,IAAIzZ,GACA,IAAKkB,GAAYwN,mBACb,OAAO/M,KAAKsc,KAAKje,GACrB,IAAIke,EAAQvc,KAAKoc,QAAQze,IAAIU,GAC7B,IAAKke,EAAO,CAER,MAAMC,EAAYD,EAAQ,IAAI1T,GAAgB7I,KAAKsc,KAAKje,GAAMuI,EAAoB,GAAE5G,KAAKnD,QAAQ+E,EAAavD,OAAS,GACvH2B,KAAKoc,QAAQ9W,IAAIjH,EAAKme,GACtB1Z,GAAmB0Z,EAAU,IAAMxc,KAAKoc,QAAQxJ,OAAOvU,IAE3D,OAAOke,EAAM5e,MAEjB2H,IAAIjH,EAAKN,GACL,MAAM0e,EAASzc,KAAKsc,KAAKje,GACzB,GAAIgR,GAAgBrP,MAAO,CACvB,MAAMsP,EAASC,GAAgBvP,KAAM,CACjCvD,KAAMggB,EAAS,SAAW,MAC1Bje,OAAQwB,KACR6G,SAAU9I,EACVlB,KAAMwB,IAEV,IAAKiR,EACD,OAAOtP,KACXjC,EAAQuR,EAAOzI,SAQnB,OANI4V,EACAzc,KAAK0c,aAAare,EAAKN,GAGvBiC,KAAK2c,UAAUte,EAAKN,GAEjBiC,KAEX4S,OAAOvU,GACH,GAAIgR,GAAgBrP,MAAO,CAMvB,IALeuP,GAAgBvP,KAAM,CACjCvD,KAAM,SACN+B,OAAQwB,KACRnD,KAAMwB,IAGN,OAAO,EAEf,GAAI2B,KAAKsc,KAAKje,GAAM,CAChB,MAAMmQ,GAx/CPhH,EAy/CO4T,EAAS5L,GAAaxP,MACtBsP,EAAS8L,GAAU5M,EACnB,CACE/R,KAAM,SACN+B,OAAQwB,KACRuI,SAAUvI,KAAKmc,MAAMxe,IAAIU,GAAKN,MAC9BlB,KAAMwB,GAER,KAcN,OAXA+Z,GAAY,KACRpY,KAAKkc,UAAUjZ,gBACfjD,KAAK4c,mBAAmBve,GAAK,GACV2B,KAAKmc,MAAMxe,IAAIU,GACvB+Q,iBAAYrS,GACvBiD,KAAKmc,MAAMvJ,OAAOvU,KAElB+c,GACA3L,GAAgBzP,KAAMsP,IAGnB,EAEX,OAAO,EAEXsN,mBAAmBve,EAAKN,GACpB,IAAIwe,EAAQvc,KAAKoc,QAAQze,IAAIU,GACzBke,GACAA,EAAMnN,YAAYrR,GAG1B2e,aAAare,EAAKwI,GACd,MAAM1D,EAAanD,KAAKmc,MAAMxe,IAAIU,GAElC,IADAwI,EAAW1D,EAAW+L,gBAAgBrI,MACrBtH,GAAY4P,UAAW,CACpC,MAAMX,GA7hDPhH,EA8hDO4T,EAAS5L,GAAaxP,MACtBsP,EAAS8L,GAAU5M,EACnB,CACE/R,KAAM,SACN+B,OAAQwB,KACRuI,SAAUpF,EAAWpF,MACrBlB,KAAMwB,EACNwI,YAEF,KACF2H,EAEJrL,EAAWiM,YAAYvI,GACnBuU,GACA3L,GAAgBzP,KAAMsP,IAKlCqN,UAAUte,EAAKwI,GACXsF,GAAoCnM,KAAKkc,WACzC9D,GAAY,KACR,MAAMjV,EAAa,IAAI0F,GAAgBhC,EAAU7G,KAAK+G,SAAW,GAAE/G,KAAKnD,QAAQ+E,EAAavD,MAAQ,GACrG2B,KAAKmc,MAAM7W,IAAIjH,EAAK8E,GACpB0D,EAAW1D,EAAWpF,MACtBiC,KAAK4c,mBAAmBve,GAAK,GAC7B2B,KAAKkc,UAAUjZ,kBAEnB,MACMmY,EAAS5L,GAAaxP,MACtBsP,EAAS8L,EACT,CACE3e,KAAM,MACN+B,OAAQwB,KACRnD,KAAMwB,EACNwI,YAEF,KAGFuU,GACA3L,GAAgBzP,KAAMsP,GAI9B3R,IAAIU,GACA,OAAI2B,KAAK8X,IAAIzZ,GACF2B,KAAKgP,aAAahP,KAAKmc,MAAMxe,IAAIU,GAAKV,OAC1CqC,KAAKgP,kBAAajS,GAE7BiS,aAAajR,GACT,YAAsBhB,IAAlBiD,KAAKiP,SACEjP,KAAKiP,SAASlR,GAElBA,EAEXyH,OAEI,OADAxF,KAAKkc,UAAUlZ,iBACRhD,KAAKmc,MAAM3W,OAEtB2D,SACI,MAAMmJ,EAAOtS,KACb,IAAI6c,EAAY,EAChB,MAAMrX,EAAO9D,MAAMC,KAAK3B,KAAKwF,QAC7B,OAAOsX,GAAa,CAChBC,KAAI,IACOF,EAAYrX,EAAKzL,OAClB,CAAEgE,MAAOuU,EAAK3U,IAAI6H,EAAKqX,MAAeG,MAAM,GAC5C,CAAEA,MAAM,KAI1BC,UACI,MAAM3K,EAAOtS,KACb,IAAI6c,EAAY,EAChB,MAAMrX,EAAO9D,MAAMC,KAAK3B,KAAKwF,QAC7B,OAAOsX,GAAa,CAChBC,KAAM,WACF,GAAIF,EAAYrX,EAAKzL,OAAQ,CACzB,MAAMsE,EAAMmH,EAAKqX,KACjB,MAAO,CACH9e,MAAO,CAACM,EAAKiU,EAAK3U,IAAIU,IACtB2e,MAAM,GAGd,MAAO,CAAEA,MAAM,MAI3B,EAAEjB,GAAK/Z,EAAOnE,OAAOqf,aACjB,OAAOld,KAAKid,UAEhB1b,QAAQ4b,EAAU9E,GACd,IAAK,MAAOha,EAAKN,KAAUiC,KACvBmd,EAAShjB,KAAKke,EAASta,EAAOM,EAAK2B,MAG3Cqc,MAAMe,GAiBF,OAhBIjV,GAAgBiV,KAChBA,EAAQA,EAAM9B,QAElBlD,GAAY,KACJhY,EAAcgd,GACdjc,EAAmBic,GAAO7b,QAAQlD,GAAO2B,KAAKsF,IAAIjH,EAAK+e,EAAM/e,KACxDqD,MAAM+E,QAAQ2W,GACnBA,EAAM7b,QAAQ,EAAElD,EAAKN,KAAWiC,KAAKsF,IAAIjH,EAAKN,IACzC+C,EAASsc,IACVA,EAAMlb,cAAgBlB,KACtBvB,EAAK,yDAA2D2d,EAAMlb,YAAYrF,MACtFugB,EAAM7b,QAAQ,CAACxD,EAAOM,IAAQ2B,KAAKsF,IAAIjH,EAAKN,KAEvCqf,SACL3d,EAAK,8BAAgC2d,KAEtCpd,KAEXqb,QACIjD,GAAY,KACR3K,GAAU,KACN,IAAK,MAAMpP,KAAO2B,KAAKwF,OACnBxF,KAAK4S,OAAOvU,OAI5BuV,QAAQzK,GAWJ,OAVAiP,GAAY,KAIR,MAAMiF,EA/yGlB,SAAwB1W,GACpB,OAAIvG,EAAcuG,GACP3M,OAAOwL,KAAKmB,GACnBjF,MAAM+E,QAAQE,GACPA,EAAIA,IAAI,EAAEtI,KAASA,GAC1ByC,EAAS6F,IAAQwB,GAAgBxB,GAC1BjF,MAAMC,KAAKgF,EAAInB,QACnB/F,EAAM,yBAAwBkH,MAwyGb2W,CAAenU,GACfzH,MAAMC,KAAK3B,KAAKwF,QACJ+X,OAAO/b,IAA6B,IAAxB6b,EAAQ3F,QAAQlW,IAC5CD,QAAQC,GAAKxB,KAAK4S,OAAOpR,IACrCxB,KAAKqc,MAAMlT,KAERnJ,KAEX,WAEI,OADAA,KAAKkc,UAAUlZ,iBACRhD,KAAKmc,MAAM9P,KAOtBmR,SACI,MAAMjW,EAAM,GACZ,IAAK,MAAOlJ,EAAKN,KAAUiC,KAEvBuH,EAAmB,iBAARlJ,EAAmBA,EAAMuD,EAAavD,IAAQN,EAE7D,OAAOwJ,EAMX+T,OACI,OAAO,IAAIta,IAAIhB,MAEnBgQ,SAEI,OAAOhQ,KAAKwd,SAEhB3b,WACI,OAAQ7B,KAAKnD,KACT,MACA6E,MAAMC,KAAK3B,KAAKwF,QACXmB,IAAItI,GAAQ,GAAEuD,EAAavD,OAAS,GAAK2B,KAAKrC,IAAIU,MAClDiV,KAAK,MACV,MAORzD,QAAQhN,EAAUiN,GAGd,OAAOC,GAAiB/P,KAAM6C,GAElC6M,UAAUC,GACN,OAAOC,GAAoB5P,KAAM2P,IAIzC,MAAMxH,GAAkBxH,EAA0B,gBAAiBgJ,IAEnE,IAAI8T,GACJ,MAAMC,GAAsB,GAC5B,MAAM9T,GACF1H,YAAY+Z,EAAalV,EAAWV,EAAcxJ,EAAO,iBAAmByC,KAMxE,GALAU,KAAKnD,KAAOA,EACZmD,KAAKyd,IAAQC,GACb1d,KAAKmc,MAAQ,IAAIjb,IACjBlB,KAAK2d,MAAQ5Z,EAAW/D,KAAKnD,MAC7BmD,KAAKnC,OAAOC,aAAe,MACR,mBAARoD,IACP,MAAM,IAAIhF,MAAM,sGAEpB8D,KAAK+G,SAAW,CAAC+S,EAAMC,IAAShT,EAAS+S,EAAMC,EAAMld,GACjDof,GACAjc,KAAK4T,QAAQqI,GAGrBjN,aAAajR,GACT,YAAsBhB,IAAlBiD,KAAKiP,SACEjP,KAAKiP,SAASlR,GAElBA,EAEXsd,QACIjD,GAAY,KACR3K,GAAU,KACN,IAAK,MAAM1P,KAASiC,KAAKmc,MAAMhT,SAC3BnJ,KAAK4S,OAAO7U,OAI5BwD,QAAQqc,EAAYvF,GAChB,IAAK,MAAMta,KAASiC,KAChB4d,EAAWzjB,KAAKke,EAASta,EAAOA,EAAOiC,MAG/C,WAEI,OADAA,KAAK2d,MAAM3a,iBACJhD,KAAKmc,MAAM9P,KAEtBhL,IAAItD,GAEA,GADAoO,GAAoCnM,KAAK2d,OACrCtO,GAAgBrP,MAAO,CAMvB,IALeuP,GAAgBvP,KAAM,CACjCvD,KAAM,MACN+B,OAAQwB,KACR6G,SAAU9I,IAGV,OAAOiC,KAIf,IAAKA,KAAK8X,IAAI/Z,GAAQ,CAClBqa,GAAY,KACRpY,KAAKmc,MAAM9a,IAAIrB,KAAK+G,SAAShJ,OAAOhB,IACpCiD,KAAK2d,MAAM1a,kBAEf,MAAMuL,GAtxDPhH,EAuxDO4T,EAAS5L,GAAaxP,MACtBsP,EAAS8L,GAAU5M,EACnB,CACE/R,KAAM,MACN+B,OAAQwB,KACR6G,SAAU9I,GAEZ,KACFyQ,EAEA4M,GACA3L,GAAgBzP,KAAMsP,GAI9B,OAAOtP,KAEX4S,OAAO7U,GACH,GAAIsR,GAAgBrP,MAAO,CAMvB,IALeuP,GAAgBvP,KAAM,CACjCvD,KAAM,SACN+B,OAAQwB,KACRuI,SAAUxK,IAGV,OAAO,EAEf,GAAIiC,KAAK8X,IAAI/Z,GAAQ,CACjB,MAAMyQ,GAnzDPhH,EAozDO4T,EAAS5L,GAAaxP,MACtBsP,EAAS8L,GAAU5M,EACnB,CACE/R,KAAM,SACN+B,OAAQwB,KACRuI,SAAUxK,GAEZ,KAWN,OARAqa,GAAY,KACRpY,KAAK2d,MAAM1a,gBACXjD,KAAKmc,MAAMvJ,OAAO7U,KAElBqd,GACA3L,GAAgBzP,KAAMsP,IAGnB,EAEX,OAAO,EAEXwI,IAAI/Z,GAEA,OADAiC,KAAK2d,MAAM3a,iBACJhD,KAAKmc,MAAMrE,IAAI9X,KAAKgP,aAAajR,IAE5Ckf,UACI,IAAIJ,EAAY,EAChB,MAAMrX,EAAO9D,MAAMC,KAAK3B,KAAKwF,QACvB2D,EAASzH,MAAMC,KAAK3B,KAAKmJ,UAC/B,OAAO2T,GAAa,CAChBC,OACI,MAAM9C,EAAQ4C,EAEd,OADAA,GAAa,EACN5C,EAAQ9Q,EAAOpP,OAChB,CAAEgE,MAAO,CAACyH,EAAKyU,GAAQ9Q,EAAO8Q,IAAS+C,MAAM,GAC7C,CAAEA,MAAM,MAI1BxX,OACI,OAAOxF,KAAKmJ,SAEhBA,SACInJ,KAAK2d,MAAM3a,iBACX,MAAMsP,EAAOtS,KACb,IAAI6c,EAAY,EAChB,MAAMgB,EAAmBnc,MAAMC,KAAK3B,KAAKmc,MAAMhT,UAC/C,OAAO2T,GAAa,CAChBC,KAAI,IACOF,EAAYgB,EAAiB9jB,OAC9B,CAAEgE,MAAOuU,EAAKtD,aAAa6O,EAAiBhB,MAAeG,MAAM,GACjE,CAAEA,MAAM,KAI1BpJ,QAAQwJ,GAiBJ,OAhBIhV,GAAgBgV,KAChBA,EAAQA,EAAM9B,QAElBlD,GAAY,KACJ1W,MAAM+E,QAAQ2W,IACdpd,KAAKqb,QACL+B,EAAM7b,QAAQxD,GAASiC,KAAKqB,IAAItD,KAE3BkD,EAASmc,IACdpd,KAAKqb,QACL+B,EAAM7b,QAAQxD,GAASiC,KAAKqB,IAAItD,KAE3Bqf,SACL3d,EAAK,8BAAgC2d,KAGtCpd,KAEX6P,QAAQhN,EAAUiN,GAId,OAAOC,GAAiB/P,KAAM6C,GAElC6M,UAAUC,GACN,OAAOC,GAAoB5P,KAAM2P,GAErC2L,OACI,OAAO,IAAIpa,IAAIlB,MAEnB6B,WACI,OAAO7B,KAAKnD,KAAO,KAAO6E,MAAMC,KAAK3B,MAAMsT,KAAK,MAAQ,KAE5D,EAAEmK,GAAOzb,EAAOnE,OAAOqf,aACnB,OAAOld,KAAKmJ,UAGpB,MAAMf,GAAkBzH,EAA0B,gBAAiBiJ,IAEnE,MAAMkU,GACF5b,YAAYvF,EAAQwM,EAAS,IAAInI,IAAOnE,EAAM6b,GAC1C1Y,KAAKrD,OAASA,EACdqD,KAAKmJ,OAASA,EACdnJ,KAAKnD,KAAOA,EACZmD,KAAK0Y,gBAAkBA,EACvB1Y,KAAK+Y,SAAW,IAAI9W,EAAKpF,EAAO,SAEpCkhB,KAAK1f,GACD,OAAO2B,KAAKmJ,OAAOxL,IAAIU,GAAKV,MAEhC8a,MAAMpa,EAAKwI,GACP,MAAM4D,EAAWzK,KAAKrD,OAChBwG,EAAanD,KAAKmJ,OAAOxL,IAAIU,GACnC,GAAI8E,aAAsB6H,GACtB7H,EAAWmC,IAAIuB,OADnB,CAKA,GAAIwI,GAAgBrP,MAAO,CACvB,MAAMsP,EAASC,GAAgBvP,KAAM,CACjCvD,KAAM,SACN+B,OAAQwB,KAAK6H,OAAS4C,EACtB5N,KAAMwB,EACNwI,aAEJ,IAAKyI,EACD,OACJzI,EAAWyI,EAAOzI,SAItB,IAFAA,EAAW1D,EAAW+L,gBAAgBrI,MAErBtH,GAAY4P,UAAW,CACpC,MAAMiM,EAAS5L,GAAaxP,MACtBwO,GAt7DPhH,EAu7DO8H,EAAS8L,GAAU5M,EACnB,CACE/R,KAAM,SACN+B,OAAQwB,KAAK6H,OAAS4C,EACtBlC,SAAUpF,EAAWpF,MACrBlB,KAAMwB,EACNwI,YAEF,KACF2H,EAEJrL,EAAWiM,YAAYvI,GACnBuU,GACA3L,GAAgBzP,KAAMsP,KAKlCwI,IAAIzZ,GACA,MAAMsI,EAAM3G,KAAKge,cAAgBhe,KAAKge,YAAc,IAAIhd,KACxD,IAAIub,EAAQ5V,EAAIhJ,IAAIU,GACpB,GAAIke,EACA,OAAOA,EAAM5e,MACZ,CACD,MAAMsgB,IAAWje,KAAKmJ,OAAOxL,IAAIU,GAKjC,OAFAke,EAAQ,IAAI1T,GAAgBoV,EAAQrX,EAAoB,GAAE5G,KAAKnD,QAAQ+E,EAAavD,OAAS,GAC7FsI,EAAIrB,IAAIjH,EAAKke,GACNA,EAAM5e,OAGrB2J,kBAAkB9G,EAAUqG,EAAUE,EAAW/G,KAAK0Y,iBAClD,MAAM,OAAE/b,GAAWqD,KAEnB,GAAIqP,GAAgBrP,MAAO,CACvB,MAAMsP,EAASC,GAAgBvP,KAAM,CACjCxB,OAAQwB,KAAK6H,OAASlL,EACtBE,KAAM2D,EACN/D,KAAM,MACNoK,aAEJ,IAAKyI,EACD,OACJzI,EAAWyI,EAAOzI,SAEtB,MAAM1D,EAAa,IAAI0F,GAAgBhC,EAAUE,EAAW,GAAE/G,KAAKnD,QAAQ+E,EAAapB,MAAa,GACrGR,KAAKmJ,OAAO7D,IAAI9E,EAAU2C,GAC1B0D,EAAW1D,EAAWpF,MACtB/D,OAAOyD,eAAed,EAAQ6D,EAgJtC,SAAsCA,GAClC,OAAQ0d,GAA0B1d,KAC7B0d,GAA0B1d,GAAY,CACnCE,cAAc,EACdhD,YAAY,EACZC,MACI,OAAOqC,KAAKgC,GAAO+b,KAAKvd,IAE5B8E,IAAIgB,GACAtG,KAAKgC,GAAOyW,MAAMjY,EAAU8F,MAzJI6X,CAA6B3d,IACrER,KAAKoe,uBAAuB5d,EAAUqG,GAE1C6D,gBAAgB2T,EAChB7d,EAAUiI,GACN,MAAM,OAAE9L,GAAWqD,KACnByI,EAAQ5L,KAAO4L,EAAQ5L,MAAS,GAAEmD,KAAKnD,QAAQ+E,EAAapB,KAC5DR,KAAKmJ,OAAO7D,IAAI9E,EAAU,IAAIwK,GAAcvC,KACxC4V,IAAkB1hB,GAhrH9B,SAAgC6B,EAAQ2G,GACpC,MAAMO,EAAa1L,OAAOyH,yBAAyBjD,EAAQ2G,GAC3D,OAAQO,IAA2C,IAA5BA,EAAWhF,eAAkD,IAAxBgF,EAAWjF,SA8qHnC6d,CAAuBD,EAAe7d,KAClExG,OAAOyD,eAAe4gB,EAAe7d,EA8JjD,SAAoCA,GAChC,OAAQ+d,GAAwB/d,KAC3B+d,GAAwB/d,GAAY,CACjCE,aAAcnB,GAAY2S,qBAC1BxU,YAAY,EACZC,MACI,OAAO6gB,GAAsCxe,MAAM+d,KAAKvd,IAE5D8E,IAAIgB,GACAkY,GAAsCxe,MAAMyY,MAAMjY,EAAU8F,MAvKjBmY,CAA2Bje,IAElFqY,OAAOxa,GACH,IAAK2B,KAAKmJ,OAAO2O,IAAIzZ,GACjB,OACJ,MAAM,OAAE1B,GAAWqD,KACnB,GAAIqP,GAAgBrP,MAAO,CAMvB,IALeuP,GAAgBvP,KAAM,CACjCxB,OAAQwB,KAAK6H,OAASlL,EACtBE,KAAMwB,EACN5B,KAAM,WAGN,OAER,IACIyG,KACA,MAAMkY,EAAS5L,GAAaxP,MACtBwO,GAngEPhH,EAogEOkX,EAAgB1e,KAAKmJ,OAAOxL,IAAIU,GAChCkK,EAAWmW,GAAiBA,EAAc/gB,MAKhD,GAJA+gB,GAAiBA,EAAcpZ,SAAIvI,GAEnCiD,KAAK+Y,SAAS9V,gBACdjD,KAAKmJ,OAAOyJ,OAAOvU,GACf2B,KAAKge,YAAa,CAClB,MAAMzB,EAAQvc,KAAKge,YAAYrgB,IAAIU,GAC/Bke,GACAA,EAAMjX,KAAI,UAGXtF,KAAKrD,OAAO0B,GACnB,MAAMiR,EAAS8L,GAAU5M,EACnB,CACE/R,KAAM,SACN+B,OAAQwB,KAAK6H,OAASlL,EACtB4L,SAAUA,EACV1L,KAAMwB,GAER,KACFmQ,EAEA4M,GACA3L,GAAgBzP,KAAMsP,GA5B9B,QAiCIzL,MAGR8a,cAAcC,EAAOpe,GAoBjB5B,QAAQ6V,KAAM,aAAYjU,UAAiBoe,sIAO/C/O,QAAQsN,EAAUrN,GAGd,OAAOC,GAAiB/P,KAAMmd,GAElCzN,UAAUC,GACN,OAAOC,GAAoB5P,KAAM2P,GAErCyO,uBAAuB/f,EAAKwI,GACxB,MAAMuU,EAAS5L,GAAaxP,MAEtBsP,EAAS8L,EACT,CACE3e,KAAM,MACN+B,OAAQwB,KAAK6H,OAAS7H,KAAKrD,OAC3BE,KAAMwB,EACNwI,YAEF,KAON,GAJIuU,GACA3L,GAAgBzP,KAAMsP,GAGtBtP,KAAKge,YAAa,CAClB,MAAMzB,EAAQvc,KAAKge,YAAYrgB,IAAIU,GAC/Bke,GACAA,EAAMjX,KAAI,GAElBtF,KAAK+Y,SAAS9V,gBAElB4b,UACI7e,KAAK+Y,SAAS/V,iBAEd,MAAMuE,EAAM,GACZ,IAAK,MAAOlJ,EAAKN,KAAUiC,KAAKmJ,OACxBpL,aAAiB8K,IACjBtB,EAAIlN,KAAKgE,GACjB,OAAOkJ,GAGf,SAASF,GAAmB1K,EAAQE,EAAO,GAAI6b,EAAkBrS,GAC7D,GAAIrM,OAAOC,UAAUC,eAAeC,KAAKwC,EAAQqF,GAC7C,OAAOrF,EAAOqF,GAGb5B,EAAczD,KACfE,GAAQF,EAAOuF,YAAYrF,MAAQ,oBAAsB,IAAMyC,KAC9DzC,IACDA,EAAO,oBAAsByC,KACjC,MAAM2J,EAAM,IAAI6U,GAA+BnhB,EAAQ,IAAIqE,IAAOY,EAAa/E,GAAO6b,GAEtF,OADAnY,EAAc5D,EAAQqF,EAAOiH,GACtBA,EAEX,MAAMiV,GAA4BlkB,OAAOoE,OAAO,MAC1CmgB,GAA0BvkB,OAAOoE,OAAO,MAc9C,SAASogB,GAAsCI,GAC3C,MAAM3V,EAAM2V,EAAM5c,GAClB,OAAKiH,IAGD5D,EAAmBuZ,GACZA,EAAM5c,IAiBrB,MAAM8c,GAAmCne,EAA0B,iCAAkCmd,IACrG,SAAS7V,GAAmBlH,GACxB,QAAIZ,EAASY,KAETsE,EAAmBtE,GACZ+d,GAAiC/d,EAAMiB,KAKtD,SAAS0R,GAAQ3S,EAAOtC,GACpB,GAAqB,iBAAVsC,GAAgC,OAAVA,EAAgB,CAC7C,GAAImH,GAAkBnH,GAIlB,YAHiBhE,IAAb0B,GACAgB,GAAK+H,GAEFzG,EAAMiB,GAAOkC,KAExB,GAAIkE,GAAgBrH,GAChB,OAAOA,EAAMiB,GAEjB,GAAImG,GAAgBpH,GAAQ,CACxB,MAAMge,EAAWhe,EACjB,QAAiBhE,IAAb0B,EACA,OAAOsgB,EAAS7C,UACpB,MAAM/Y,EAAa4b,EAAS5C,MAAMxe,IAAIc,IAAasgB,EAAS3C,QAAQze,IAAIc,GAIxE,OAHK0E,GACD1D,GAAK+H,GAEFrE,EAMX,GAHAkC,EAAmBtE,GACftC,IAAasC,EAAMiB,IACnBjB,EAAMtC,GACNwJ,GAAmBlH,GAAQ,CAC3B,IAAKtC,EACD,OAAOgB,GAAK+H,GAChB,MAAMrE,EAAapC,EAAMiB,GAAOmH,OAAOxL,IAAIc,GAI3C,OAHK0E,GACD1D,GAAK+H,GAEFrE,EAEX,GAAIW,EAAO/C,IAAU+K,GAAgB/K,IAAUyU,GAAWzU,GACtD,OAAOA,OAGV,GAAqB,mBAAVA,GACRyU,GAAWzU,EAAMiB,IAEjB,OAAOjB,EAAMiB,GAGrB,OAAOvC,GAAK+H,GAEhB,SAASyQ,GAAkBlX,EAAOtC,GAG9B,OAFKsC,GACDtB,EAAK,8BACQ1C,IAAb0B,EACOwZ,GAAkBvE,GAAQ3S,EAAOtC,IACxCqF,EAAO/C,IAAU+K,GAAgB/K,IAAUyU,GAAWzU,GAC/CA,EACPoH,GAAgBpH,IAAUqH,GAAgBrH,GACnCA,GAEXsE,EAAmBtE,GACfA,EAAMiB,GACCjB,EAAMiB,QACjBvC,GAAK+H,IAaT,MAAM3F,GAAW7H,OAAOC,UAAU4H,SAClC,SAAS6C,GAAUH,EAAGC,EAAG6O,GAAQ,GAC7B,OAIJ,SAAS2L,EAAGza,EAAGC,EAAG6O,EAAO4L,EAAQC,GAG7B,GAAI3a,IAAMC,EACN,OAAa,IAAND,GAAW,EAAIA,GAAM,EAAIC,EAEpC,GAAS,MAALD,GAAkB,MAALC,EACb,OAAO,EAEX,GAAID,GAAMA,EACN,OAAOC,GAAMA,EAEjB,MAAM/H,SAAc8H,EACpB,GAAa,aAAT9H,GAAgC,WAATA,GAAiC,iBAAL+H,EACnD,OAAO,EAEX,MAAM2a,EAAYtd,GAAS1H,KAAKoK,GAChC,GAAI4a,IAActd,GAAS1H,KAAKqK,GAC5B,OAAO,EACX,OAAQ2a,GAEJ,IAAK,kBAEL,IAAK,kBAGD,MAAO,GAAK5a,GAAM,GAAKC,EAC3B,IAAK,kBAGD,OAAKD,IAAOA,GACAC,IAAOA,EAEL,IAAND,EAAU,GAAKA,GAAM,EAAIC,GAAKD,IAAOC,EACjD,IAAK,gBACL,IAAK,mBAID,OAAQD,IAAOC,EACnB,IAAK,kBACD,MAA0B,oBAAX3G,QAA0BA,OAAOoS,QAAQ9V,KAAKoK,KAAO1G,OAAOoS,QAAQ9V,KAAKqK,GAC5F,IAAK,eACL,IAAK,eAGG6O,GAAS,GACTA,IAKZ9O,EAAI6a,GAAO7a,GACXC,EAAI4a,GAAO5a,GACX,MAAM6a,EAA0B,mBAAdF,EAClB,IAAKE,EAAW,CACZ,GAAgB,iBAAL9a,GAA6B,iBAALC,EAC/B,OAAO,EAGX,MAAM8a,EAAQ/a,EAAErC,YAAaqd,EAAQ/a,EAAEtC,YACvC,GAAIod,IAAUC,KACS,mBAAVD,GACLA,aAAiBA,GACA,mBAAVC,GACPA,aAAiBA,IACpB,gBAAiBhb,GAAK,gBAAiBC,EACxC,OAAO,EAGf,GAAc,IAAV6O,EACA,OAAO,EAEFA,EAAQ,IACbA,GAAS,GAOb6L,EAASA,GAAU,GACnB,IAAInlB,GAFJklB,EAASA,GAAU,IAECllB,OACpB,KAAOA,KAGH,GAAIklB,EAAOllB,KAAYwK,EACnB,OAAO2a,EAAOnlB,KAAYyK,EAMlC,GAHAya,EAAO5kB,KAAKkK,GACZ2a,EAAO7kB,KAAKmK,GAER6a,EAAW,CAGX,GADAtlB,EAASwK,EAAExK,OACPA,IAAWyK,EAAEzK,OACb,OAAO,EAEX,KAAOA,KACH,IAAKilB,EAAGza,EAAExK,GAASyK,EAAEzK,GAASsZ,EAAQ,EAAG4L,EAAQC,GAC7C,OAAO,MAGd,CAED,MAAM1Z,EAAOxL,OAAOwL,KAAKjB,GACzB,IAAIlG,EAGJ,GAFAtE,EAASyL,EAAKzL,OAEVC,OAAOwL,KAAKhB,GAAGzK,SAAWA,EAC1B,OAAO,EACX,KAAOA,KAGH,GADAsE,EAAMmH,EAAKzL,IACLylB,GAAMhb,EAAGnG,KAAQ2gB,EAAGza,EAAElG,GAAMmG,EAAEnG,GAAMgV,EAAQ,EAAG4L,EAAQC,GACzD,OAAO,EAMnB,OAFAD,EAAOnK,MACPoK,EAAOpK,OACA,EA9HAkK,CAAGza,EAAGC,EAAG6O,GAgIpB,SAAS+L,GAAO7a,GACZ,OAAI2D,GAAkB3D,GACXA,EAAEvF,QACT8B,EAASyD,IAAM4D,GAAgB5D,GACxB7C,MAAMC,KAAK4C,EAAE0Y,WACpBhc,EAASsD,IAAM6D,GAAgB7D,GACxB7C,MAAMC,KAAK4C,EAAE0Y,WACjB1Y,EAEX,SAASib,GAAMjb,EAAGlG,GACd,OAAOrE,OAAOC,UAAUC,eAAeC,KAAKoK,EAAGlG,GAGnD,SAASye,GAAaI,GAElB,OADAA,EAASrf,OAAOqf,UAAYuC,GACrBvC,EAEX,SAASuC,KACL,OAAOzf,KA4BX,GAAqB,oBAAVoJ,OAA2C,oBAAXvL,OACvC,MAAM,IAAI3B,MAAM,mMAwByB,iBAAlCwjB,+BAEPA,8BAA8BC,WAAW,CACrCC,IAh6ER,SAAa/c,GAGL,OADAjE,QAAQ6V,KAAM,8CACP,cA85EPoL,OAAQ,CACJC,aAzNZ,SAAsB/e,EAAOtC,GACzB,IAAIshB,EAOJ,OALIA,OADahjB,IAAb0B,EACQiV,GAAQ3S,EAAOtC,GAClBwJ,GAAmBlH,IAAUoH,GAAgBpH,IAAUqH,GAAgBrH,GACpEkX,GAAkBlX,GAElB2S,GAAQ3S,GACbgf,EAAMljB,OAmNTmF,Y;;;;;;;;;;;;;;AC1rIR,MAAMge,EAAmB,IAkBnB,SAAUC,EACZC,EAAoBC,GACtB,MAAOC,SAAS,QAACC,GAAX,MAAqBC,GAASJ,EAC9BK,EACF/kB,SAASglB,iBAAiBH,EAASL,EAAkB,MAAM,GAC/D,IAAIS,EAAYC,EAA+BJ,GAC3CK,EAAOL,EAAMG,GACbG,GAAa,EACbC,EAAc,EAClB,MAAMC,EAA0B,GAChC,IAAIC,EAAiC,KACrC,KAAOR,EAAOS,YAAY,CACxBJ,IACA,MAAMjO,EAAO4N,EAAOU,YAiBpB,IAfItO,EAAKuO,kBAAoBH,IAC3BA,EAAsB,MAGpBZ,EAAcrI,IAAInF,KACpBmO,EAAwBzmB,KAAKsY,GAED,OAAxBoO,IACFA,EAAsBpO,IAIE,OAAxBoO,GACFF,SAEc9jB,IAAT4jB,GAAsBA,EAAK1G,QAAU2G,GAG1CD,EAAK1G,MAAgC,OAAxB8G,GAAgC,EAAIJ,EAAK1G,MAAQ4G,EAE9DJ,EAAYC,EAA+BJ,EAAOG,GAClDE,EAAOL,EAAMG,GAGjBK,EAAwBvf,QAAShD,GAAMA,EAAE4iB,WAAYC,YAAY7iB,IAGnE,MAAM8iB,EAAc1O,IAClB,IAAI2O,EAA2B,KAAlB3O,EAAK4O,SAAqD,EAAI,EAC3E,MAAMhB,EAAS/kB,SAASglB,iBAAiB7N,EAAMqN,EAAkB,MAAM,GACvE,KAAOO,EAAOS,YACZM,IAEF,OAAOA,GAGHZ,EACF,CAACJ,EAAuBkB,GAAqB,KAC3C,IAAK,IAAI3nB,EAAI2nB,EAAa,EAAG3nB,EAAIymB,EAAMvmB,OAAQF,IAAK,CAClD,MAAM8mB,EAAOL,EAAMzmB,GACnB,GAAI,YAAqB8mB,GACvB,OAAO9mB,EAGX,OAAQ,G;;;;;;;;;;;;;;AC3Dd,MAAM4nB,EAAsB,CAAChlB,EAAcilB,IACvC,GAAGjlB,MAASilB,IAEhB,IAAIC,GAA4B,OAED,IAApB7iB,OAAO8iB,SAChBD,GAA4B,OAC2B,IAAvC7iB,OAAO8iB,SAASC,qBAChCjjB,QAAQ6V,KACJ,6IAGJkN,GAA4B,GAO9B,MAAMG,EAAwBJ,GACzB1U,IACC,MAAM+U,EAAWN,EAAoBzU,EAAOvQ,KAAMilB,GAClD,IAAIM,EAAgB,IAAerkB,IAAIokB,QACjBhlB,IAAlBilB,IACFA,EAAgB,CACdC,aAAc,IAAIC,QAClBC,UAAW,IAAInhB,KAEjB,IAAesE,IAAIyc,EAAUC,IAG/B,IAAI9B,EAAW8B,EAAcC,aAAatkB,IAAIqP,EAAOoV,SACrD,QAAiBrlB,IAAbmjB,EACF,OAAOA,EAGT,MAAM7hB,EAAM2O,EAAOoV,QAAQ9O,KAAK,KAEhC,GADA4M,EAAW8B,EAAcG,UAAUxkB,IAAIU,QACtBtB,IAAbmjB,EAAwB,CAC1B,MAAME,EAAUpT,EAAOqV,qBACnBV,GACF7iB,OAAO8iB,SAAUC,mBAAmBzB,EAASsB,GAE/CxB,EAAW,IAAI,IAASlT,EAAQoT,GAChC4B,EAAcG,UAAU7c,IAAIjH,EAAK6hB,GAGnC,OADA8B,EAAcC,aAAa3c,IAAI0H,EAAOoV,QAASlC,GACxCA,GAGPoC,EAAiB,CAAC,OAAQ,OAsB1BC,EAAiB,IAAIrhB,IAgBrBshB,EACF,CAACd,EAAmBe,EAA+BvC,KACjDqC,EAAelhB,IAAIqgB,GAInB,MAAMgB,EACAxC,EAAWA,EAASE,QAAU5kB,SAASC,cAAc,YAErDknB,EAASF,EAAYG,iBAAiB,UACtC,OAAC7oB,GAAU4oB,EAEjB,GAAe,IAAX5oB,EAYF,YADA+E,OAAO8iB,SAAUY,sBAAsBE,EAAiBhB,GAG1D,MAAMmB,EAAiBrnB,SAASC,cAAc,SAM9C,IAAK,IAAI5B,EAAI,EAAGA,EAAIE,EAAQF,IAAK,CAC/B,MAAMipB,EAAQH,EAAO9oB,GACrBipB,EAAM3B,WAAYC,YAAY0B,GAC9BD,EAAeE,aAAgBD,EAAMC,YApEPrB,KACpCY,EAAe/gB,QAAS9E,IACtB,MAAMumB,EAAY,IAAerlB,IAAI8jB,EAAoBhlB,EAAMilB,SAC7C3kB,IAAdimB,GACFA,EAAUb,UAAU5gB,QAAS2e,IAC3B,MAAOE,SAAS,QAACC,IAAYH,EAEvByC,EAAS,IAAIzhB,IACnBQ,MAAMC,KAAK0e,EAAQuC,iBAAiB,UAAUrhB,QAAStC,IACrD0jB,EAAOthB,IAAIpC,KAEbghB,EAAwBC,EAAUyC,QA4DpCM,CAA6BvB,GAG7B,MAAMrB,EAAUqC,EAAgBrC,QAC1BH,ED/DN,SACFA,EAAoBvN,EAAYuQ,EAAqB,MACvD,MAAO9C,SAAS,QAACC,GAAX,MAAqBC,GAASJ,EAGpC,GAAIgD,QAEF,YADA7C,EAAQnjB,YAAYyV,GAGtB,MAAM4N,EACF/kB,SAASglB,iBAAiBH,EAASL,EAAkB,MAAM,GAC/D,IAAIS,EAAYC,EAA+BJ,GAC3C6C,EAAc,EACdC,GAAe,EACnB,KAAO7C,EAAOS,YAAY,CAOxB,IANAoC,IACmB7C,EAAOU,cACPiC,IACjBC,EAAc9B,EAAW1O,GACzBuQ,EAAQ/B,WAAYkC,aAAa1Q,EAAMuQ,KAEnB,IAAfzC,GAAoBH,EAAMG,GAAWxG,QAAUmJ,GAAa,CAEjE,GAAID,EAAc,EAAG,CACnB,MAAsB,IAAf1C,GACLH,EAAMG,GAAWxG,OAASkJ,EAC1B1C,EAAYC,EAA+BJ,EAAOG,GAEpD,OAEFA,EAAYC,EAA+BJ,EAAOG,KCkChD6C,CAAuBpD,EAAU2C,EAAgBxC,EAAQkD,YAEzDlD,EAAQgD,aAAaR,EAAgBxC,EAAQkD,YAK/CzkB,OAAO8iB,SAAUY,sBAAsBE,EAAiBhB,GACxD,MAAMoB,EAAQzC,EAAQmD,cAAc,SACpC,GAAI1kB,OAAO8iB,SAAU6B,cAA0B,OAAVX,EAGnCL,EAAYY,aAAaP,EAAMY,WAAU,GAAOjB,EAAYc,iBACvD,GAAMrD,EAAU,CASrBG,EAAQgD,aAAaR,EAAgBxC,EAAQkD,YAC7C,MAAMI,EAAU,IAAIziB,IACpByiB,EAAQtiB,IAAIwhB,GACZ5C,EAAwBC,EAAUyD,KC9K1C7kB,OAAO8kB,0BACH,CAAwBze,EAAS0e,IAAqB1e,EA8GnD,MAAM2e,EAA8C,CAEzD,YAAY/lB,EAAgBtB,GAC1B,OAAQA,GACN,KAAKsnB,QACH,OAAOhmB,EAAQ,GAAK,KACtB,KAAK/D,OACL,KAAK0H,MAGH,OAAgB,MAAT3D,EAAgBA,EAAQimB,KAAKC,UAAUlmB,GAElD,OAAOA,GAGT,cAAcA,EAAoBtB,GAChC,OAAQA,GACN,KAAKsnB,QACH,OAAiB,OAAVhmB,EACT,KAAKmmB,OACH,OAAiB,OAAVnmB,EAAiB,KAAOmmB,OAAOnmB,GACxC,KAAK/D,OACL,KAAK0H,MACH,OAAOsiB,KAAKG,MAAMpmB,GAEtB,OAAOA,IAaEqmB,EAAuB,CAACrmB,EAAgBsmB,IAE5CA,IAAQtmB,IAAUsmB,GAAQA,GAAOtmB,GAAUA,GAG9CumB,EAAkD,CACtDC,WAAW,EACX9nB,KAAMqF,OACN0iB,UAAWV,EACXW,SAAS,EACTC,WAAYN,GAGRO,EAAmBxpB,QAAQC,SAAQ,GAEnCwpB,EAAoB,EACpBC,EAAyB,EACzBC,EAAmC,EACnCC,EAAkC,GAClCC,EAAsB,GAWtBC,EAAY,YAOZ,MAAgBC,UAAwBC,YAqO5C,cACErW,QAlBM,KAAAsW,aAA4B,EAC5B,KAAAC,yBAAgDtoB,EAChD,KAAAuoB,eAAmCX,EACnC,KAAAY,2BAAgDxoB,EAMhD,KAAAyoB,mBAAqC,IAAIxkB,IAKzC,KAAAykB,2BACQ1oB,EAIdiD,KAAK0lB,aApMP,gCAEE1lB,KAAK2lB,WACL,MAAMC,EAAuB,GAU7B,OAPA5lB,KAAK6lB,iBAAkBtkB,QAAQ,CAAC+E,EAAGvK,KACjC,MAAM+pB,EAAO9lB,KAAK+lB,0BAA0BhqB,EAAGuK,QAClCvJ,IAAT+oB,IACF9lB,KAAKgmB,wBAAwB1gB,IAAIwgB,EAAM/pB,GACvC6pB,EAAWvrB,KAAKyrB,MAGbF,EASD,gCAEN,IAAK5lB,KAAK9F,eACF0pB,0BAA0B,mBAAoB5jB,OAAQ,CAC5DA,KAAK6lB,iBAAmB,IAAI7kB,IAE5B,MAAMilB,EACFjsB,OAAOsG,eAAeN,MAAM6lB,sBACR9oB,IAApBkpB,GACFA,EAAgB1kB,QACZ,CAAC+E,EAAwB9E,IACrBxB,KAAK6lB,iBAAkBvgB,IAAI9D,EAAG8E,KAY5C,sBACIzJ,EACA4L,EAA+B6b,GAWjC,GAPAtkB,KAAKkmB,yBACLlmB,KAAK6lB,iBAAkBvgB,IAAIzI,EAAM4L,GAM7BA,EAAQ0d,YAAcnmB,KAAK/F,UAAUC,eAAe2C,GACtD,OAEF,MAAMwB,EAAsB,iBAATxB,EAAoBgB,SAAW,KAAKhB,IACvD7C,OAAOyD,eAAeuC,KAAK/F,UAAW4C,EAAM,CAE1C,MACE,OAAQmD,KAAkC3B,IAE5C,IAA2BN,GACzB,MAAMwK,EACDvI,KAAwCnD,GAC5CmD,KAAwC3B,GAAiBN,EACzDiC,KAAoComB,eAAevpB,EAAM0L,IAE5D7H,cAAc,EACdhD,YAAY,IASN,kBAER,MAAM2oB,EAAYrsB,OAAOsG,eAAeN,MAYxC,GAXKqmB,EAAUnsB,eAAe+qB,IAC5BoB,EAAUV,WAEZ3lB,KAAKilB,IAAa,EAClBjlB,KAAKkmB,yBAELlmB,KAAKgmB,wBAA0B,IAAIhlB,IAK/BhB,KAAK9F,eAAe0pB,0BAA0B,aAAc5jB,OAAQ,CACtE,MAAM6J,EAAQ7J,KAAKuX,WAEb+O,EAAW,IACZtsB,OAAOusB,oBAAoB1c,MACc,mBAAjC7P,OAAOsH,sBACdtH,OAAOsH,sBAAsBuI,GAC7B,IAGN,IAAK,MAAM9N,KAAKuqB,EAIdtmB,KAAKwmB,eAAezqB,EAAI8N,EAAc9N,KASpC,iCACJc,EAAmB4L,GACrB,MAAM8b,EAAY9b,EAAQ8b,UAC1B,OAAqB,IAAdA,OACHxnB,EACsB,iBAAdwnB,EACHA,EACiB,iBAAT1nB,EAAoBA,EAAK4pB,mBAAgB1pB,EASpD,wBACJgB,EAAgBsmB,EAAcK,EAAyBN,GACzD,OAAOM,EAAW3mB,EAAOsmB,GASnB,mCACJtmB,EAAoB0K,GACtB,MAAMhM,EAAOgM,EAAQhM,KACf+nB,EAAY/b,EAAQ+b,WAAaV,EACjC4C,EACoB,mBAAdlC,EAA2BA,EAAYA,EAAUkC,cAC7D,OAAOA,EAAgBA,EAAc3oB,EAAOtB,GAAQsB,EAW9C,iCACJA,EAAgB0K,GAClB,QAAwB1L,IAApB0L,EAAQgc,QACV,OAEF,MAAMhoB,EAAOgM,EAAQhM,KACf+nB,EAAY/b,EAAQ+b,UAI1B,OAFIA,GAAcA,EAAwCmC,aACtD7C,EAAiB6C,aACD5oB,EAAOtB,GA6BnB,aACRuD,KAAK4mB,0BAGL5mB,KAAKomB,iBAeC,0BAGLpmB,KAAKkC,YACD2jB,iBAAkBtkB,QAAQ,CAACslB,EAAI9qB,KAC9B,GAAIiE,KAAK9F,eAAe6B,GAAI,CAC1B,MAAMgC,EAAQiC,KAAKjE,UACZiE,KAAKjE,GACPiE,KAAKqlB,sBACRrlB,KAAKqlB,oBAAsB,IAAIrkB,KAEjChB,KAAKqlB,oBAAoB/f,IAAIvJ,EAAGgC,MAQlC,2BAINiC,KAAKqlB,oBAAqB9jB,QAAQ,CAAC+E,EAAGvK,IAAOiE,KAAajE,GAAKuK,GAC/DtG,KAAKqlB,yBAAsBtoB,EAG7B,oBACEiD,KAAKolB,aAAeplB,KAAKolB,aAAeJ,EAKpChlB,KAAKulB,wBACPvlB,KAAKulB,wBACLvlB,KAAKulB,2BAAwBxoB,GASjC,wBAMA,yBAAyBF,EAAcwnB,EAAkBtmB,GACnDsmB,IAAQtmB,GACViC,KAAK8mB,qBAAqBjqB,EAAMkB,GAI5B,qBACJlB,EAAmBkB,EACnB0K,EAA+B6b,GACjC,MAAMyC,EAAQ/mB,KAAKkC,YACb4jB,EAAOiB,EAAKhB,0BAA0BlpB,EAAM4L,GAClD,QAAa1L,IAAT+oB,EAAoB,CACtB,MAAMkB,EAAYD,EAAKE,0BAA0BlpB,EAAO0K,GAExD,QAAkB1L,IAAdiqB,EACF,OAUFhnB,KAAKolB,aAAeplB,KAAKolB,aAAeN,EACvB,MAAbkC,EACFhnB,KAAKknB,gBAAgBpB,GAErB9lB,KAAKnE,aAAaiqB,EAAMkB,GAG1BhnB,KAAKolB,aAAeplB,KAAKolB,cAAgBN,GAIrC,qBAAqBjoB,EAAckB,GAGzC,GAAIiC,KAAKolB,aAAeN,EACtB,OAEF,MAAMiC,EAAQ/mB,KAAKkC,YACb1B,EAAWumB,EAAKf,wBAAwBroB,IAAId,GAClD,QAAiBE,IAAbyD,EAAwB,CAC1B,MAAMiI,EACFse,EAAKlB,iBAAkBloB,IAAI6C,IAAa8jB,EAE5CtkB,KAAKolB,aAAeplB,KAAKolB,aAAeL,EACxC/kB,KAAKQ,GAEDumB,EAAKI,4BAA4BppB,EAAO0K,GAE5CzI,KAAKolB,aAAeplB,KAAKolB,cAAgBL,GASrC,eAAeloB,EAAoB0L,GACzC,IAAI6e,GAAsB,EAE1B,QAAarqB,IAATF,EAAoB,CACtB,MAAMkqB,EAAO/mB,KAAKkC,YACZuG,EACFse,EAAKlB,iBAAkBloB,IAAId,IAASynB,EACpCyC,EAAKM,iBACDrnB,KAAKnD,GAAqB0L,EAAUE,EAAQic,aAC7C1kB,KAAKwlB,mBAAmB1N,IAAIjb,IAC/BmD,KAAKwlB,mBAAmBlgB,IAAIzI,EAAM0L,IAMZ,IAApBE,EAAQgc,SACNzkB,KAAKolB,aAAeL,SACWhoB,IAA/BiD,KAAKylB,wBACPzlB,KAAKylB,sBAAwB,IAAIzkB,KAEnChB,KAAKylB,sBAAsBngB,IAAIzI,EAAM4L,KAIvC2e,GAAsB,GAGrBpnB,KAAKsnB,qBAAuBF,GAC/BpnB,KAAKunB,iBAiBT,cAAc1qB,EAAoB0L,GAEhC,OADAvI,KAAKomB,eAAevpB,EAAM0L,GACnBvI,KAAKwnB,eAMN,uBAGN,IAAIpsB,EACAC,EAFJ2E,KAAKolB,aAAeplB,KAAKolB,aAAeP,EAGxC,MAAM4C,EAAwBznB,KAAKslB,eACnCtlB,KAAKslB,eAAiB,IAAInqB,QAAQ,CAACoM,EAAKmgB,KACtCtsB,EAAUmM,EACVlM,EAASqsB,IAEX,UAGQD,EACN,MAAO1sB,IAKJiF,KAAK2nB,qBACF,IAAIxsB,QAASoM,GAAQvH,KAAKulB,sBAAwBhe,GAE1D,IACE,MAAMyF,EAAShN,KAAK4nB,gBAIN,MAAV5a,SACIA,EAER,MAAOjS,GACPM,EAAON,GAETK,GAAS4E,KAAKsnB,qBAGhB,oBACE,OAAQtnB,KAAKolB,aAAeJ,EAG9B,0BACE,OAAQhlB,KAAKolB,aAAeP,EAG9B,iBACE,OAAQ7kB,KAAKolB,aAAeR,EAmBpB,gBAEJ5kB,KAAKqlB,qBACPrlB,KAAK6nB,2BAEP,IAAIC,GAAe,EACnB,MAAMC,EAAoB/nB,KAAKwlB,mBAC/B,IACEsC,EAAe9nB,KAAK8nB,aAAaC,GAC7BD,GACF9nB,KAAKgoB,OAAOD,GAEd,MAAOhtB,GAIP,MADA+sB,GAAe,EACT/sB,EATR,QAYEiF,KAAKioB,eAEHH,IACI9nB,KAAKolB,aAAeR,IACxB5kB,KAAKolB,aAAeplB,KAAKolB,aAAeR,EACxC5kB,KAAKkoB,aAAaH,IAEpB/nB,KAAKmoB,QAAQJ,IAIT,eACN/nB,KAAKwlB,mBAAqB,IAAIxkB,IAC9BhB,KAAKolB,aAAeplB,KAAKolB,cAAgBP,EAkB3C,qBACE,OAAO7kB,KAAKooB,qBAmBJ,qBACR,OAAOpoB,KAAKslB,eAUJ,aAAaE,GACrB,OAAO,EAWC,OAAOA,QACoBzoB,IAA/BiD,KAAKylB,uBACLzlB,KAAKylB,sBAAsBpZ,KAAO,IAGpCrM,KAAKylB,sBAAsBlkB,QACvB,CAAC+E,EAAG9E,IAAMxB,KAAKqoB,qBAAqB7mB,EAAGxB,KAAKwB,GAAkB8E,IAClEtG,KAAKylB,2BAAwB1oB,GAavB,QAAQyoB,IAYR,aAAaA,KAnlBP,EAACP,IAAa,ECrChC,MC/KaqD,EACR,uBAAwBC,SAAStuB,WACjC,YAAauuB,cAAcvuB,UAEN4D;;;;;;;;;;;;;;CCkBzBiB,OAAM,qBAA2BA,OAAM,mBAAyB,KAC5DzE,KAAK,SAuBV,MAAMouB,EAAiB9F,GACnBA,EAAO+F,KAAO/F,EAAO+F,KAAKC,KAf9B,SAASC,EACLjG,EAAwB3V,EAAsB,IAChD,IAAK,IAAInT,EAAI,EAAGE,EAAS4oB,EAAO5oB,OAAQF,EAAIE,EAAQF,IAAK,CACvD,MAAMkE,EAAQ4kB,EAAO9oB,GACjB6H,MAAM+E,QAAQ1I,GAChB6qB,EAAU7qB,EAAOiP,GAEjBA,EAAO3S,KAAK0D,GAGhB,OAAOiP,EAKiC4b,CAAUjG,GAE9C,MAAO,UAAmBuC,EA6BpB,kBAGRpW,MAAM6W,SAASxrB,KAAK6F,MAGpBA,KAAK6oB,QACD7oB,KAAK9F,eAAe0pB,0BAA0B,SAAU5jB,OACxDA,KAAK8oB,mBACL9oB,KAAK6oB,SAAW,GAId,0BAON,MAAME,EAAa/oB,KAAK2iB,OAClBA,EAAsB,GAC5B,GAAIjhB,MAAM+E,QAAQsiB,GAAa,CACVN,EAAcM,GAMLC,YAAY,CAAC1jB,EAAKrG,KAC5CqG,EAAIjE,IAAIpC,GAEDqG,GACN,IAAIpE,KAEEK,QAAS+E,GAAMqc,EAAOnH,QAAQlV,SAC9ByiB,GACTpG,EAAOtoB,KAAK0uB,GAEd,OAAOpG,EAgBC,aACR7T,MAAM4W,aACL1lB,KAAkDipB,WAC/CjpB,KAAKkpB,mBAILpqB,OAAOqqB,YAAcnpB,KAAKipB,sBAAsBnqB,OAAOqqB,YACzDnpB,KAAKopB,cAWC,mBACR,OAAOppB,KAAKqpB,aAAa,CAACprB,KAAM,SAYxB,cACR,MAAM0kB,EAAU3iB,KAAKkC,YAAkC2mB,QACjC,IAAlBlG,EAAO5oB,cAQagD,IAApB+B,OAAO8iB,UAA2B9iB,OAAO8iB,SAAS6B,aAG3C6E,EACRtoB,KAAKipB,WAA0BK,mBAC5B3G,EAAOhc,IAAK1H,GAAMA,EAAEsqB,YAIxBvpB,KAAKwpB,8BAA+B,EARpC1qB,OAAO8iB,SAAS6H,YAAaC,sBACzB/G,EAAOhc,IAAK1H,GAAMA,EAAE0qB,SAAU3pB,KAAK4pB,YAW3C,oBACE9a,MAAM+a,oBAGF7pB,KAAK8pB,iBAAkC/sB,IAApB+B,OAAO8iB,UAC5B9iB,OAAO8iB,SAASmI,aAAa/pB,MAUvB,OAAO+nB,GACfjZ,MAAMkZ,OAAOD,GACb,MAAMiC,EAAiBhqB,KAAKiqB,SACxBD,aAA0B,KAC3BhqB,KAAKkC,YACD+nB,OACGD,EACAhqB,KAAKipB,WACL,CAACvH,UAAW1hB,KAAK4pB,UAAWM,aAAclqB,OAKhDA,KAAKwpB,+BACPxpB,KAAKwpB,8BAA+B,EACnCxpB,KAAKkC,YAAkC2mB,QAAStnB,QAAStC,IACxD,MAAM6jB,EAAQtnB,SAASC,cAAc,SACrCqnB,EAAMC,YAAc9jB,EAAE0qB,QACtB3pB,KAAKipB,WAAW/rB,YAAY4lB,MAUxB,WA7KM,aAAgB,EASzB,EAAAmH,OJqLL,CAACjd,EACAmd,EACA1hB,KACC,IAAKA,GAA8B,iBAAZA,IAAyBA,EAAQiZ,UACtD,MAAM,IAAIxlB,MAAM,uCAElB,MAAMwlB,EAAYjZ,EAAQiZ,UACpB0I,EAAc,IAAMtS,IAAIqS,GACxBE,EAAe1I,GACM,KAAvBwI,EAAU5I,YACP4I,EAAyBG,KAE1BC,EAAmBF,IAAiB9H,EAAezK,IAAI4J,GAGvD8I,EACFD,EAAmB/uB,SAASivB,yBAA2BN,EAe3D,GAdA,YACInd,EACAwd,EACA,eAACE,gBAAiB5I,EAAqBJ,IAAejZ,IAWtD8hB,EAAkB,CACpB,MAAM5J,EAAO,IAAMhjB,IAAI6sB,GACvB,IAAM5X,OAAO4X,GAMb,MAAMtK,EAAWS,EAAK5iB,iBAAiB,IACnC4iB,EAAK5iB,MAAMmiB,cACXnjB,EACJylB,EACId,EAAW8I,EAAqCtK,GACpD,YAAYiK,EAAWA,EAAU5G,YACjC4G,EAAUjtB,YAAYstB,GACtB,IAAMllB,IAAI6kB,EAAWxJ,IAQlByJ,GAAeC,GAClBvrB,OAAO8iB,SAAUmI,aAAcI,EAAyBG;;;;;;;;;;;;;;AKjShE,MAAMK,EAAgB,IAAIzI,QCDpB0I,GDakB,YAAWC,GAA0BlK,IAC3D,KAAMA,aAAgB,MAAmBA,aAAgB,KAC7B,UAAxBA,EAAKmK,UAAUjuB,MAAoB8jB,EAAKmK,UAAUxK,MAAMvmB,OAAS,EACnE,MAAM,IAAImC,MACN,8GAIN,MAAM,UAAC4uB,GAAanK,GACd,QAACP,GAAW0K,EAGbH,EAAc7S,IAAI6I,KACrBP,EAAQjB,UAAY2L,EAAU1I,QAAQ9O,KAAK,MAG7C,MAAM,UAACyX,GAAa3K,EAGd4K,EAAUL,EAAchtB,IAAIgjB,GAClC,IAAK,MAAM9jB,KAAQmuB,EACXnuB,KAAQguB,GACZE,EAAUlS,OAAOhc,GAKrB,IAAK,MAAMA,KAAQguB,EAAW,CAC5B,MAAM9sB,EAAQ8sB,EAAUhuB,GACxB,IAAKmuB,GAAWjtB,IAAUitB,EAAQnuB,GAAO,CAIvCkuB,EADehtB,EAAQ,MAAQ,UACblB,IAGtB8tB,EAAcrlB,IAAIqb,EAAMkK,KCjDJ,IAAI3I,SAmBb+I,EAAW,YAAWC,GAA0BvK,IAC3D,KAAMA,aAAgB,MAAmBA,aAAgB,KAC7B,UAAxBA,EAAKmK,UAAUjuB,MAAoB8jB,EAAKmK,UAAUxK,MAAMvmB,OAAS,EACnE,MAAM,IAAImC,MACN,4GAIN,MAAM,UAAC4uB,GAAanK,GACd,MAACmC,GAASgI,EAAU1K,QAGrBwK,EAAc9S,IAAI6I,KACrBmC,EAAM6G,QAAUmB,EAAU1I,QAAQ9O,KAAK,MAIzC,MAAM0X,EAAUJ,EAAcjtB,IAAIgjB,GAClC,IAAK,MAAM9jB,KAAQmuB,EACXnuB,KAAQquB,KACe,IAAvBruB,EAAK6a,QAAQ,KAEdoL,EAAcjmB,GAAQ,KAEvBimB,EAAMqI,eAAetuB,IAM3B,IAAK,MAAMA,KAAQquB,GACU,IAAvBruB,EAAK6a,QAAQ,KAEdoL,EAAcjmB,GAAQquB,EAAUruB,GAEjCimB,EAAMsI,YAAYvuB,EAAMquB,EAAUruB,IAGtC+tB,EAActlB,IAAIqb,EAAMuK,KC3DpBG,EACF,CAACC,EAAyBC,KACxB,MAAMpB,EAAYmB,EAAcE,UAAUrK,WACpCsK,OAA4B1uB,IAAfwuB,EAA2BD,EAAcI,QACdH,EAAWC,UACnDA,EAAYrB,EAAU9G,aAAa,cAAgBoI,GACzDtB,EAAU9G,aAAa,cAAgBoI,GACvC,MAAME,EAAU,IAAI,IAASL,EAAc7iB,SAE3C,OADAkjB,EAAQC,gBAAgBJ,GACjBG,GAGPE,EAAa,CAAClL,EAAgB5iB,KAClC4iB,EAAKmL,SAAS/tB,GACd4iB,EAAKoL,SACEpL,GAGHqL,EACF,CAACV,EAAyB3K,EAAgBvW,KACxC,MAAM+f,EAAYmB,EAAcE,UAAUrK,WACpCsK,EAAarhB,EAAMA,EAAIohB,UAAYF,EAAcI,QACjDA,EAAU/K,EAAK+K,QAAQO,YACzBP,IAAYD,GACd,YAActB,EAAWxJ,EAAK6K,UAAWE,EAASD,IAIpDS,EAAcvL,IAClB,YACIA,EAAK6K,UAAUrK,WAAaR,EAAK6K,UAAW7K,EAAK+K,QAAQO,cAMzDE,EAAc,CAACpZ,EAAiBqZ,EAAeC,KACnD,MAAM1lB,EAAM,IAAI3F,IAChB,IAAK,IAAInH,EAAIuyB,EAAOvyB,GAAKwyB,EAAKxyB,IAC5B8M,EAAIrB,IAAIyN,EAAKlZ,GAAIA,GAEnB,OAAO8M,GAIH2lB,EAAgB,IAAIpK,QACpBqK,EAAe,IAAIrK,QAqBZsK,EACT,YACI,CAAIjR,EACAkR,EACAvM,KAEE,IAAIwM,EAOJ,YANiB3vB,IAAbmjB,EACFA,EAAWuM,OACkB1vB,IAApB0vB,IACTC,EAAQD,GAGFnB,IACN,KAAMA,aAAyB,KAC7B,MAAM,IAAIpvB,MAAM,4CAIlB,MAAMywB,EAAWL,EAAc3uB,IAAI2tB,IAAkB,GAC/CsB,EAAUL,EAAa5uB,IAAI2tB,IAAkB,GAK7CuB,EAAuB,GAIvBC,EAAuB,GACvBzP,EAAqB,GAC3B,IAWI0P,EACAC,EAZA/S,EAAQ,EACZ,IAAK,MAAMxC,KAAQ8D,EACjB8B,EAAQpD,GAASyS,EAAQA,EAAMjV,EAAMwC,GAASA,EAC9C6S,EAAU7S,GAASiG,EAAWzI,EAAMwC,GACpCA,IAWF,IAAIgT,EAAU,EACVC,EAAUP,EAAS5yB,OAAS,EAC5BozB,EAAU,EACVC,EAAUN,EAAU/yB,OAAS,EAsMjC,KAAOkzB,GAAWC,GAAWC,GAAWC,GACtC,GAA0B,OAAtBT,EAASM,GAGXA,SACK,GAA0B,OAAtBN,EAASO,GAGlBA,SACK,GAAIN,EAAQK,KAAa5P,EAAQ8P,GAEtCN,EAASM,GACLtB,EAAWc,EAASM,GAAWH,EAAUK,IAC7CF,IACAE,SACK,GAAIP,EAAQM,KAAa7P,EAAQ+P,GAEtCP,EAASO,GACLvB,EAAWc,EAASO,GAAWJ,EAAUM,IAC7CF,IACAE,SACK,GAAIR,EAAQK,KAAa5P,EAAQ+P,GAEtCP,EAASO,GACLvB,EAAWc,EAASM,GAAWH,EAAUM,IAC7CpB,EACIV,EACAqB,EAASM,GACTJ,EAASO,EAAU,IACvBH,IACAG,SACK,GAAIR,EAAQM,KAAa7P,EAAQ8P,GAEtCN,EAASM,GACLtB,EAAWc,EAASO,GAAWJ,EAAUK,IAC7CnB,EACIV,EAAeqB,EAASO,GAAWP,EAASM,IAChDC,IACAC,SAQA,QANyBpwB,IAArBgwB,IAGFA,EAAmBZ,EAAY9O,EAAS8P,EAASC,GACjDJ,EAAmBb,EAAYS,EAASK,EAASC,IAE9CH,EAAiBjV,IAAI8U,EAAQK,IAI3B,GAAKF,EAAiBjV,IAAI8U,EAAQM,IAIlC,CAIL,MAAMG,EAAWL,EAAiBrvB,IAAI0f,EAAQ8P,IACxCG,OACWvwB,IAAbswB,EAAyBV,EAASU,GAAY,KAClD,GAAgB,OAAZC,EAAkB,CAGpB,MAAM3B,EAAUN,EACZC,EAAeqB,EAASM,IAC5BpB,EAAWF,EAASmB,EAAUK,IAC9BN,EAASM,GAAWxB,OAGpBkB,EAASM,GACLtB,EAAWyB,EAASR,EAAUK,IAClCnB,EACIV,EAAegC,EAASX,EAASM,IAGrCN,EAASU,GAAsB,KAEjCF,SA1BAjB,EAAWS,EAASO,IACpBA,SALAhB,EAAWS,EAASM,IACpBA,IAkCN,KAAOE,GAAWC,GAAS,CAGzB,MAAMzB,EACFN,EAAoBC,EAAeuB,EAASO,EAAU,IAC1DvB,EAAWF,EAASmB,EAAUK,IAC9BN,EAASM,KAAaxB,EAGxB,KAAOsB,GAAWC,GAAS,CACzB,MAAMI,EAAUX,EAASM,KACT,OAAZK,GACFpB,EAAWoB,GAIfhB,EAAchnB,IAAIgmB,EAAeuB,GACjCN,EAAajnB,IAAIgmB,EAAejO,M;;;;;;;;;;;;;GCzZhD,MAAMkQ,EAAiB,IAAIrL,QASdsL,EAAa,YAAWzvB,GAAoB4iB,IACvD,KAAMA,aAAgB,KACpB,MAAM,IAAIzkB,MAAM,gDAGlB,MAAMuxB,EAAgBF,EAAe5vB,IAAIgjB,GAEzC,QAAsB5jB,IAAlB0wB,GAA+B,YAAY1vB,IAC3CA,IAAU0vB,EAAc1vB,OAAS4iB,EAAK5iB,QAAU0vB,EAAcC,SAChE,OAGF,MAAMxN,EAAW1kB,SAASC,cAAc,YACxCykB,EAASyN,UAAY5vB,EACrB,MAAM2vB,EAAWlyB,SAASoyB,WAAW1N,EAASG,SAAS,GACvDM,EAAKmL,SAAS4B,GACdH,EAAejoB,IAAIqb,EAAM,CAAC5iB,QAAO2vB,eC9BtBG,EAAY,YAAW9vB,GAAoB4iB,IACtD,QAAc5jB,IAAVgB,GAAuB4iB,aAAgB,KACzC,GAAI5iB,IAAU4iB,EAAK5iB,MAAO,CACxB,MAAMlB,EAAO8jB,EAAKmK,UAAUjuB,KAC5B8jB,EAAKmK,UAAU1K,QAAQ8G,gBAAgBrqB,SAGzC8jB,EAAKmL,SAAS/tB,K,WCdlB,MAAMkY,EAAWpY,OAAO,yBAClBiwB,EAAsBjwB,OAAO,wBAC7BkwB,EAAsBlwB,OAAO,wBAc7B,SAAUmwB,EACZ9rB,G,UAEA,SAAO,cAAkCA,EAAlC,c,oBAIK,QAAwB,IAAMlC,KAAKiuB,gBACnC,QAAwB,IAAMnf,MAAM8Y,gBAErC,oBACH9Y,MAAM+a,oBAEN,MAAMhtB,EAAOmD,KAAKkC,YAAYrF,MAAQmD,KAAKkuB,SAC3CluB,KAAKiW,GAAY,IAAI,IACjB,GAAGpZ,aACHmD,KAAK8tB,IAEL9tB,KAAK8pB,YAAY9pB,KAAKiuB,gBAGvB,uBACHnf,MAAMqf,uBAEFnuB,KAAKiW,KACLjW,KAAKiW,GAAWvB,UAChB1U,KAAKiW,QAAYlZ,GAIf,gBACFiD,KAAKiW,GACLjW,KAAKiW,GAAW/E,MAAMlR,KAAK+tB,IAE3Bjf,MAAM8Y,kB,EA3BLkG,E,EACAC,EA6BX,EC5C8BC,EAAmB,GCxBvD,MAAMI,EAAY,GAEZC,GAAWlzB,QAAQC,UAEnBkzB,GAAqB,CACzBC,SAAU,IAAIrtB,IACdstB,SAAS,EACTntB,IAAKsJ,GACH3K,KAAKuuB,SAASltB,IAAIsJ,GACb3K,KAAKwuB,UACRxuB,KAAKwuB,SAAU,EACfH,GAASI,KAAK,KACZzuB,KAAKuuB,SAAShtB,QAAQoJ,IACpB,MAAM+jB,EAAUN,EAAUzjB,GAC1B+jB,EAAQntB,QAAQotB,IACAC,GAAiBD,EAAQhkB,GAC7BkkB,OAAOC,SACfJ,EAAQ9b,OAAO+b,OAIrB3uB,KAAKuuB,SAASlT,QACdrb,KAAKwuB,SAAU,OAkBvB,SAASI,GAAkBG,EAAIlyB,GAC7B,MAAMV,EAAQ,IAAI6yB,YAAa,mBAAkBnyB,IAAQ,CACvDgyB,OAAQ,GACRI,SAAS,EACTC,YAAY,EACZC,UAAU,IAGZ,OADAJ,EAAGK,cAAcjzB,GACVA,EA2BT,SAASkzB,GAAgBN,EAAIlyB,GACb+xB,GAAiBG,EAAIlyB,GACxBgyB,OAAOC,SAjDpB,SAAoBC,EAAIlyB,IACNuxB,EAAUvxB,KAAUuxB,EAAUvxB,GAAQ,IAAIqE,MAClDG,IAAI0tB,GAgDVO,CAAUP,EAAIlyB,GAIlB,SAAS0yB,GAAkBR,EAAIlyB,IAjD/B,SAAuBkyB,EAAIlyB,GACzB,MAAM6xB,EAAUN,EAAUvxB,GACtB6xB,GACFA,EAAQ9b,OAAOmc,GA+CjBS,CAAaT,EAAIlyB,GChFnB,MAAM4yB,GAAsB,IAAIC,QAE1BC,GAAeC,IACZ,cAAcA,EAEnB,cACE,OAAO5vB,KAAK6vB,cAAgB7vB,KAAK6vB,YAAc,IAGjDhG,oBACE/a,MAAM+a,oBACN,MAAMiG,EAAmB9vB,KAAKkC,YAAY4tB,iBAK1C,GAJIA,GACFA,EAAiBvuB,QAAQoJ,GAAW0kB,GAAervB,KAAM2K,KAGtD8kB,GAAoB3X,IAAI9X,MAAO,CAClC,MAAM+vB,EAAyB/vB,KAAKkC,YAAY8tB,iBAChD,GAAID,EAAwB,CAC1B,MAAMC,EAAmBhwB,KAAKiwB,uBAAyBjwB,KAAKiwB,qBAAuB,IAC7EC,EAAclwB,KAAKmwB,kBAAoBnwB,KAAKmwB,gBAAkB,IACpEn2B,OAAOwL,KAAKuqB,GAAwBxuB,QAAQ1E,IAC1C,MAAMuzB,EAASL,EAAuBlzB,GAChC4B,EAA6B,iBAAX2xB,EAAsBA,EAASA,EAAO3xB,SAC9DuxB,EAAiBnzB,GAAQ4B,EAAWuB,KAAKvB,GAAY2xB,EAAOryB,MACxDU,IACFyxB,EAAYrzB,GAAQ4B,GDsBlC,SAAkCswB,EAAIlyB,EAAMmzB,GAC1C,MAAMK,EAActB,EAAGuB,yBAA2BvB,EAAGuB,uBAAyB,IACxEjuB,EAAYguB,EAAYxzB,KAAUwzB,EAAYxzB,GAAQ,IACtD6xB,EAAUN,EAAUvxB,GAC1BkyB,EAAGwB,iBAAkB,mBAAkB1zB,IAASV,IAC9CA,EAAMq0B,kBACN,MAAMC,EAAWt0B,EAAMQ,OACjBoB,EAAQiyB,EAAiBnzB,GACzB8N,EAAU8lB,EAAS9lB,QACnBpC,EAAWoC,EAAQ9N,GACrB0L,IAAaxK,IACf4M,EAAQ9N,GAAQkB,EACZ0yB,EAASC,wBACXD,EAASC,uBAAuB7zB,EAAM0L,EAAUxK,IAGpDsE,EAAUhI,KAAKo2B,GACft0B,EAAM0yB,OAAOC,SAAU,IAErBJ,GAAWA,EAAQriB,MACrBiiB,GAAmBjtB,IAAIxE,GCxCf8zB,CAAwB3wB,KAAMnD,EAAMmzB,KAGxCP,GAAoBpuB,IAAIrB,OAI5BmuB,uBACErf,MAAMqf,uBACN,MAAM2B,EAAmB9vB,KAAKkC,YAAY4tB,iBACtCA,GACFA,EAAiBvuB,QAAQoJ,GAAW4kB,GAAiBvvB,KAAM2K,IAI/Dmd,aAAaC,GACX,MAAM6I,EAAe9hB,MAAMgZ,aAAaC,GAClCmI,EAAclwB,KAAKmwB,gBACzB,GAAID,EAAa,CACf,MAAMF,EAAmBhwB,KAAKiwB,uBAAyBjwB,KAAKiwB,qBAAuB,IACnFj2B,OAAOwL,KAAK0qB,GAAa3uB,QAAQsvB,IAC/B,MAAMpyB,EAAWyxB,EAAYW,GAC7B,GAAI9I,EAAkBjQ,IAAIrZ,GAAW,CACnC,MAAMV,EAAQiC,KAAKvB,GACnBuxB,EAAiBa,GAAe9yB,ED+B5C,SAA8BgxB,EAAIlyB,EAAMkB,GACtC,MAAMsyB,EAActB,EAAGuB,uBACjBjuB,EAAYguB,GAAeA,EAAYxzB,GACzCwF,GACFA,EAAUd,QAAQuvB,IAChB,MAAMnmB,EAAUmmB,EAASnmB,QACnBpC,EAAWoC,EAAQ9N,GACrB0L,IAAaxK,IACf4M,EAAQ9N,GAAQkB,EACZ+yB,EAASJ,wBACXI,EAASJ,uBAAuB7zB,EAAM0L,EAAUxK,MCxC9CgzB,CAAoB/wB,KAAM6wB,EAAa9yB,MAI7C,OAAO6yB,KC5Db,+MASA,MAAMI,WAAkBrB,GAAY3B,EAAmBiD,KACrD/H,mBACE,OAAOlpB,Q;;;;;;;;;;;;;GCmDJ,MAAMkxB,EAA2B,IApClC,MAUJ,2BACI9Q,EAAkBvjB,EAAculB,EAChC3Z,GACF,MAAM0oB,EAASt0B,EAAK,GACpB,GAAe,MAAXs0B,EAAgB,CAElB,OADkB,IAAI,IAAkB/Q,EAASvjB,EAAKmC,MAAM,GAAIojB,GAC/C9B,MAEnB,MAAe,MAAX6Q,EACK,CAAC,IAAI,IAAU/Q,EAASvjB,EAAKmC,MAAM,GAAIyJ,EAAQyhB,eAEzC,MAAXiH,EACK,CAAC,IAAI,IAAqB/Q,EAASvjB,EAAKmC,MAAM,GAAIojB,IAEzC,IAAI,IAAmBhC,EAASvjB,EAAMulB,GACvC9B,MAMnB,qBAAqB7X,GACnB,OAAO,IAAI,IAASA,K,4DC1DxB;;;;;;;;;;;;;;CA0DC3J,OAAM,kBAAwBA,OAAM,gBAAsB,KAAKzE,KAAK,SAM9D,MAAM+2B,EAAO,CAAChP,KAAkCjZ,IACnD,IAAI,IAAeiZ,EAASjZ,EAAQ,OAAQ+nB,I,6BCjEhD;;;;;;;;;;;;;;AAwBO,MAAMG,EAAS,SAASvvB,OAAO+Y,KAAKyW,UAAUtyB,MAAM,OAM9CuyB,EAAa,UAAOF,UAEpBG,EAAc,IAAIC,OAAO,GAAGJ,KAAUE,KAKtCG,EAAuB,QAK9B,MAAOC,EAIX,YAAY3kB,EAAwBoT,GAH3B,KAAAE,MAAwB,GAI/BtgB,KAAKogB,QAAUA,EAEf,MAAMD,EAAwB,GACxByR,EAAgB,GAEhBrR,EAAS/kB,SAASglB,iBACpBJ,EAAQC,QACR,IACA,MACA,GAIJ,IAAIwR,EAAgB,EAChB5X,GAAS,EACTwG,EAAY,EAChB,MAAM,QAAC2B,EAASjZ,QAAQ,OAACpP,IAAWiT,EACpC,KAAOyT,EAAY1mB,GAAQ,CACzB,MAAM4Y,EAAO4N,EAAOS,WACpB,GAAa,OAATrO,GAUJ,GAFAsH,IAEsB,IAAlBtH,EAAK4O,SAAwC,CAC/C,GAAK5O,EAAiBmf,gBAAiB,CACrC,MAAMlM,EAAcjT,EAAiBiT,YAC/B,OAAC7rB,GAAU6rB,EAMjB,IAAItE,EAAQ,EACZ,IAAK,IAAIznB,EAAI,EAAGA,EAAIE,EAAQF,IACtBk4B,EAASnM,EAAW/rB,GAAGgD,KAAM60B,IAC/BpQ,IAGJ,KAAOA,KAAU,GAAG,CAGlB,MAAM0Q,EAAgB5P,EAAQ3B,GAExB5jB,EAAOo1B,EAAuBC,KAAKF,GAAgB,GAMnDG,EACFt1B,EAAK4pB,cAAgBiL,EACnBU,EACDzf,EAAiB0f,aAAaF,GAClCxf,EAAiBuU,gBAAgBiL,GAClC,MAAMG,EAAUF,EAAeG,MAAMf,GACrCxxB,KAAKsgB,MAAMjmB,KAAK,CAACoC,KAAM,YAAawd,QAAOpd,OAAMulB,QAASkQ,IAC1D7R,GAAa6R,EAAQv4B,OAAS,GAGA,aAA7B4Y,EAAiB6f,UACpBZ,EAAMv3B,KAAKsY,GACX4N,EAAOU,YAAetO,EAA6B0N,cAEhD,GAAsB,IAAlB1N,EAAK4O,SAAqC,CACnD,MAAM/nB,EAAQmZ,EAAcnZ,KAC5B,GAAIA,EAAKke,QAAQ2Z,IAAW,EAAG,CAC7B,MAAMoB,EAAS9f,EAAKwO,WACdiB,EAAU5oB,EAAK+4B,MAAMf,GACrBkB,EAAYtQ,EAAQroB,OAAS,EAGnC,IAAK,IAAIF,EAAI,EAAGA,EAAI64B,EAAW74B,IAAK,CAClC,IAAI84B,EACA1zB,EAAImjB,EAAQvoB,GAChB,GAAU,KAANoF,EACF0zB,EAASC,QACJ,CACL,MAAMC,EAAQZ,EAAuBC,KAAKjzB,GAC5B,OAAV4zB,GAAkBd,EAASc,EAAM,GAAInB,KACvCzyB,EAAIA,EAAED,MAAM,EAAG6zB,EAAM5Y,OAAS4Y,EAAM,GAChCA,EAAM,GAAG7zB,MAAM,GAAI0yB,EAAqB33B,QAAU84B,EAAM,IAE9DF,EAASn3B,SAASs3B,eAAe7zB,GAEnCwzB,EAAOpP,aAAasP,EAAQhgB,GAC5B3S,KAAKsgB,MAAMjmB,KAAK,CAACoC,KAAM,OAAQwd,QAASA,IAIf,KAAvBmI,EAAQsQ,IACVD,EAAOpP,aAAauP,IAAgBjgB,GACpCwN,EAAc9lB,KAAKsY,IAElBA,EAAcnZ,KAAO4oB,EAAQsQ,GAGhCjS,GAAaiS,QAEV,GAAsB,IAAlB/f,EAAK4O,SACd,GAAK5O,EAAiBnZ,OAAS63B,EAAQ,CACrC,MAAMoB,EAAS9f,EAAKwO,WAKS,OAAzBxO,EAAKuO,iBAA4BjH,IAAU4X,IAC7C5X,IACAwY,EAAOpP,aAAauP,IAAgBjgB,IAEtCkf,EAAgB5X,EAChBja,KAAKsgB,MAAMjmB,KAAK,CAACoC,KAAM,OAAQwd,UAGN,OAArBtH,EAAKsZ,YACNtZ,EAAiBnZ,KAAO,IAEzB2mB,EAAc9lB,KAAKsY,GACnBsH,KAEFwG,QACK,CACL,IAAI5mB,GAAK,EACT,MAAgE,KAAxDA,EAAK8Y,EAAiBnZ,KAAKke,QAAQ2Z,EAAQx3B,EAAI,KAKrDmG,KAAKsgB,MAAMjmB,KAAK,CAACoC,KAAM,OAAQwd,OAAQ,IACvCwG,UA9GJF,EAAOU,YAAc2Q,EAAM9c,MAqH/B,IAAK,MAAMvW,KAAK4hB,EACd5hB,EAAE4iB,WAAYC,YAAY7iB,IAKhC,MAAMwzB,EAAW,CAACgB,EAAaC,KAC7B,MAAM/Y,EAAQ8Y,EAAIh5B,OAASi5B,EAAOj5B,OAClC,OAAOkgB,GAAS,GAAK8Y,EAAI/zB,MAAMib,KAAW+Y,GAwB/BC,EAAwBtS,IAAuC,IAAhBA,EAAK1G,MAIpD2Y,EAAe,IAAMp3B,SAAS03B,cAAc,IA4B5CjB,EACT,8I,6BC7PJ;;;;;;;;;;;;;;AA4BO,MAAMkB,EAAep1B,GAEZ,OAAVA,KACmB,iBAAVA,GAAuC,mBAAVA,GAE/Bq1B,EAAcr1B,GAClB2D,MAAM+E,QAAQ1I,OAEdA,IAAUA,EAAcF,OAAOqf,WAQlC,MAAOmW,EAOX,YAAYjT,EAAkBvjB,EAAculB,GAF5C,KAAAkR,OAAQ,EAGNtzB,KAAKogB,QAAUA,EACfpgB,KAAKnD,KAAOA,EACZmD,KAAKoiB,QAAUA,EACfpiB,KAAKsgB,MAAQ,GACb,IAAK,IAAIzmB,EAAI,EAAGA,EAAIuoB,EAAQroB,OAAS,EAAGF,IACrCmG,KAAKsgB,MAA0BzmB,GAAKmG,KAAKuzB,cAOpC,cACR,OAAO,IAAIC,EAAcxzB,MAGjB,YACR,MAAMoiB,EAAUpiB,KAAKoiB,QACftnB,EAAIsnB,EAAQroB,OAAS,EAC3B,IAAI05B,EAAO,GAEX,IAAK,IAAI55B,EAAI,EAAGA,EAAIiB,EAAGjB,IAAK,CAC1B45B,GAAQrR,EAAQvoB,GAChB,MAAM8mB,EAAO3gB,KAAKsgB,MAAMzmB,GACxB,QAAakD,IAAT4jB,EAAoB,CACtB,MAAMra,EAAIqa,EAAK5iB,MACf,GAAIo1B,EAAY7sB,KAAO8sB,EAAW9sB,GAChCmtB,GAAqB,iBAANntB,EAAiBA,EAAIxE,OAAOwE,QAE3C,IAAK,MAAMtI,KAAKsI,EACdmtB,GAAqB,iBAANz1B,EAAiBA,EAAI8D,OAAO9D,IAOnD,OADAy1B,GAAQrR,EAAQtnB,GACT24B,EAGT,SACMzzB,KAAKszB,QACPtzB,KAAKszB,OAAQ,EACbtzB,KAAKogB,QAAQvkB,aAAamE,KAAKnD,KAAMmD,KAAK0zB,eAQ1C,MAAOF,EAIX,YAAY1I,GAFZ,KAAA/sB,WAAiBhB,EAGfiD,KAAK8qB,UAAYA,EAGnB,SAAS/sB,GACHA,IAAU,KAAco1B,EAAYp1B,IAAUA,IAAUiC,KAAKjC,QAC/DiC,KAAKjC,MAAQA,EAIR,YAAYA,KACfiC,KAAK8qB,UAAUwI,OAAQ,IAK7B,SACE,KAAO,YAAYtzB,KAAKjC,QAAQ,CAC9B,MAAM41B,EAAY3zB,KAAKjC,MACvBiC,KAAKjC,MAAQ,IACb41B,EAAU3zB,MAERA,KAAKjC,QAAU,KAGnBiC,KAAK8qB,UAAUiB,UAYb,MAAO6H,EAOX,YAAYnrB,GAHZ,KAAA1K,WAAiBhB,EACT,KAAA82B,oBAA0B92B,EAGhCiD,KAAKyI,QAAUA,EAQjB,WAAW0hB,GACTnqB,KAAKwrB,UAAYrB,EAAUjtB,YAAY,eACvC8C,KAAK0rB,QAAUvB,EAAUjtB,YAAY,eAUvC,gBAAgBkN,GACdpK,KAAKwrB,UAAYphB,EACjBpK,KAAK0rB,QAAUthB,EAAI6hB,YAQrB,eAAetL,GACbA,EAAKmT,SAAS9zB,KAAKwrB,UAAY,eAC/B7K,EAAKmT,SAAS9zB,KAAK0rB,QAAU,eAQ/B,gBAAgBthB,GACdA,EAAI0pB,SAAS9zB,KAAKwrB,UAAY,eAC9BxrB,KAAK0rB,QAAUthB,EAAIshB,QACnBthB,EAAIshB,QAAU1rB,KAAKwrB,UAGrB,SAASztB,GACPiC,KAAK6zB,eAAiB91B,EAGxB,SACE,KAAO,YAAYiC,KAAK6zB,iBAAiB,CACvC,MAAMF,EAAY3zB,KAAK6zB,eACvB7zB,KAAK6zB,eAAiB,IACtBF,EAAU3zB,MAEZ,MAAMjC,EAAQiC,KAAK6zB,eACf91B,IAAU,MAGVo1B,EAAYp1B,GACVA,IAAUiC,KAAKjC,OACjBiC,KAAK+zB,aAAah2B,GAEXA,aAAiB,IAC1BiC,KAAKg0B,uBAAuBj2B,GACnBA,aAAiBk2B,KAC1Bj0B,KAAKk0B,aAAan2B,GACTq1B,EAAWr1B,GACpBiC,KAAKm0B,iBAAiBp2B,GACbA,IAAU,KACnBiC,KAAKjC,MAAQ,IACbiC,KAAKqb,SAGLrb,KAAK+zB,aAAah2B,IAId,SAAS4U,GACf3S,KAAK0rB,QAAQvK,WAAYkC,aAAa1Q,EAAM3S,KAAK0rB,SAG3C,aAAa3tB,GACfiC,KAAKjC,QAAUA,IAGnBiC,KAAKqb,QACLrb,KAAK8zB,SAAS/1B,GACdiC,KAAKjC,MAAQA,GAGP,aAAaA,GACnB,MAAM4U,EAAO3S,KAAKwrB,UAAUS,YAItBmI,EACe,iBAJrBr2B,EAAiB,MAATA,EAAgB,GAAKA,GAIGA,EAAQ+D,OAAO/D,GAC3C4U,IAAS3S,KAAK0rB,QAAQxK,iBACJ,IAAlBvO,EAAK4O,SAIN5O,EAAcnZ,KAAO46B,EAEtBp0B,KAAKk0B,aAAa14B,SAASs3B,eAAesB,IAE5Cp0B,KAAKjC,MAAQA,EAGP,uBAAuBA,GAC7B,MAAMmiB,EAAWlgB,KAAKyI,QAAQiiB,gBAAgB3sB,GAC9C,GAAIiC,KAAKjC,iBAAiB,KACtBiC,KAAKjC,MAAMmiB,WAAaA,EAC1BlgB,KAAKjC,MAAMiqB,OAAOjqB,EAAMoL,YACnB,CAKL,MAAMsB,EACF,IAAI,IAAiByV,EAAUniB,EAAMs2B,UAAWr0B,KAAKyI,SACnDilB,EAAWjjB,EAAS6pB,SAC1B7pB,EAASud,OAAOjqB,EAAMoL,QACtBnJ,KAAKk0B,aAAaxG,GAClB1tB,KAAKjC,MAAQ0M,GAIT,iBAAiB1M,GAWlB2D,MAAM+E,QAAQzG,KAAKjC,SACtBiC,KAAKjC,MAAQ,GACbiC,KAAKqb,SAKP,MAAMkZ,EAAYv0B,KAAKjC,MACvB,IACIy2B,EADA/T,EAAY,EAGhB,IAAK,MAAMhJ,KAAQ1Z,EAEjBy2B,EAAWD,EAAU9T,QAGJ1jB,IAAby3B,IACFA,EAAW,IAAIZ,EAAS5zB,KAAKyI,SAC7B8rB,EAAUl6B,KAAKm6B,GACG,IAAd/T,EACF+T,EAASC,eAAez0B,MAExBw0B,EAASE,gBAAgBH,EAAU9T,EAAY,KAGnD+T,EAAS1I,SAASrU,GAClB+c,EAASzI,SACTtL,IAGEA,EAAY8T,EAAUx6B,SAExBw6B,EAAUx6B,OAAS0mB,EACnBzgB,KAAKqb,MAAMmZ,GAAYA,EAAS9I,UAIpC,MAAMF,EAAkBxrB,KAAKwrB,WAC3B,YACIxrB,KAAKwrB,UAAUrK,WAAaqK,EAAUS,YAAcjsB,KAAK0rB,UAW3D,MAAOiJ,EAOX,YAAYvU,EAAkBvjB,EAAculB,GAC1C,GAJF,KAAArkB,WAAiBhB,EACT,KAAA82B,oBAA0B92B,EAGT,IAAnBqlB,EAAQroB,QAA+B,KAAfqoB,EAAQ,IAA4B,KAAfA,EAAQ,GACvD,MAAM,IAAIlmB,MACN,2DAEN8D,KAAKogB,QAAUA,EACfpgB,KAAKnD,KAAOA,EACZmD,KAAKoiB,QAAUA,EAGjB,SAASrkB,GACPiC,KAAK6zB,eAAiB91B,EAGxB,SACE,KAAO,YAAYiC,KAAK6zB,iBAAiB,CACvC,MAAMF,EAAY3zB,KAAK6zB,eACvB7zB,KAAK6zB,eAAiB,IACtBF,EAAU3zB,MAEZ,GAAIA,KAAK6zB,iBAAmB,IAC1B,OAEF,MAAM91B,IAAUiC,KAAK6zB,eACjB7zB,KAAKjC,QAAUA,IACbA,EACFiC,KAAKogB,QAAQvkB,aAAamE,KAAKnD,KAAM,IAErCmD,KAAKogB,QAAQ8G,gBAAgBlnB,KAAKnD,MAEpCmD,KAAKjC,MAAQA,GAEfiC,KAAK6zB,eAAiB,KAapB,MAAOe,UAA0BvB,EAGrC,YAAYjT,EAAkBvjB,EAAculB,GAC1CtT,MAAMsR,EAASvjB,EAAMulB,GACrBpiB,KAAK60B,OACmB,IAAnBzS,EAAQroB,QAA+B,KAAfqoB,EAAQ,IAA4B,KAAfA,EAAQ,GAGlD,cACR,OAAO,IAAI0S,EAAa90B,MAGhB,YACR,OAAIA,KAAK60B,OACA70B,KAAKsgB,MAAM,GAAGviB,MAEhB+Q,MAAM4kB,YAGf,SACM1zB,KAAKszB,QACPtzB,KAAKszB,OAAQ,EAEZtzB,KAAKogB,QAAgBpgB,KAAKnD,MAAQmD,KAAK0zB,cAKxC,MAAOoB,UAAqBtB,GAMlC,IAAIuB,GAAwB,EAE5B,IACE,MAAMtsB,EAAU,CACd,cAEE,OADAssB,GAAwB,GACjB,IAIXj2B,OAAOyxB,iBAAiB,OAAQ9nB,EAAgBA,GAEhD3J,OAAOk2B,oBAAoB,OAAQvsB,EAAgBA,GACnD,MAAOwsB,IAMH,MAAOC,EASX,YAAY9U,EAAkB+U,EAAmBjL,GALjD,KAAAnsB,WAA2ChB,EAEnC,KAAA82B,oBAAoD92B,EAI1DiD,KAAKogB,QAAUA,EACfpgB,KAAKm1B,UAAYA,EACjBn1B,KAAKkqB,aAAeA,EACpBlqB,KAAKo1B,mBAAsBr6B,GAAMiF,KAAKq1B,YAAYt6B,GAGpD,SAASgD,GACPiC,KAAK6zB,eAAiB91B,EAGxB,SACE,KAAO,YAAYiC,KAAK6zB,iBAAiB,CACvC,MAAMF,EAAY3zB,KAAK6zB,eACvB7zB,KAAK6zB,eAAiB,IACtBF,EAAU3zB,MAEZ,GAAIA,KAAK6zB,iBAAmB,IAC1B,OAGF,MAAMyB,EAAct1B,KAAK6zB,eACnB0B,EAAcv1B,KAAKjC,MACnBy3B,EAAsC,MAAfF,GACV,MAAfC,IACKD,EAAYG,UAAYF,EAAYE,SACpCH,EAAY11B,OAAS21B,EAAY31B,MACjC01B,EAAYI,UAAYH,EAAYG,SACvCC,EACa,MAAfL,IAAuC,MAAfC,GAAuBC,GAE/CA,GACFx1B,KAAKogB,QAAQ4U,oBACTh1B,KAAKm1B,UAAWn1B,KAAKo1B,mBAAoBp1B,KAAK41B,WAEhDD,IACF31B,KAAK41B,UAAYC,EAAWP,GAC5Bt1B,KAAKogB,QAAQmQ,iBACTvwB,KAAKm1B,UAAWn1B,KAAKo1B,mBAAoBp1B,KAAK41B,YAEpD51B,KAAKjC,MAAQu3B,EACbt1B,KAAK6zB,eAAiB,IAGxB,YAAY13B,GACgB,mBAAf6D,KAAKjC,MACdiC,KAAKjC,MAAM5D,KAAK6F,KAAKkqB,cAAgBlqB,KAAKogB,QAASjkB,GAElD6D,KAAKjC,MAA8Bs3B,YAAYl5B,IAQtD,MAAM05B,EAAcr4B,GAAyCA,IACxDu3B,EACI,CAACU,QAASj4B,EAAEi4B,QAASC,QAASl4B,EAAEk4B,QAAS91B,KAAMpC,EAAEoC,MACjDpC,EAAEi4B,U,6BCrgBX;;;;;;;;;;;;;;AAgDO,MAAMK,EAAW,GAKXC,EAAU,I,6BCrDvB;;;;;;;;;;;;;;AAyBO,MAAMC,OAAyCj5B,IAA1B+B,OAAOm3B,qBAE3Bl5B,IADH+B,OAAOm3B,eAAqCC,0BAQpCC,EACT,CAAChM,EACAiC,EACAC,EAAiB,KACjB+J,EAAoB,QACnB,KAAOhK,IAAUC,GAAK,CACpB,MAAM9tB,EAAI6tB,EAAOH,YACjB9B,EAAU9G,aAAa+I,EAAQgK,GAC/BhK,EAAQ7tB,IAQH83B,EACT,CAAClM,EAAiBiC,EAAkBC,EAAiB,QACnD,KAAOD,IAAUC,GAAK,CACpB,MAAM9tB,EAAI6tB,EAAOH,YACjB9B,EAAU/I,YAAYgL,GACtBA,EAAQ7tB,K,6BCvDhB;;;;;;;;;;;;;GA+CM,SAAUmsB,EAAgB1d,GAC9B,IAAIgV,EAAgBsU,EAAe34B,IAAIqP,EAAOvQ,WACxBM,IAAlBilB,IACFA,EAAgB,CACdC,aAAc,IAAIC,QAClBC,UAAW,IAAInhB,KAEjBs1B,EAAehxB,IAAI0H,EAAOvQ,KAAMulB,IAGlC,IAAI9B,EAAW8B,EAAcC,aAAatkB,IAAIqP,EAAOoV,SACrD,QAAiBrlB,IAAbmjB,EACF,OAAOA,EAKT,MAAM7hB,EAAM2O,EAAOoV,QAAQ9O,KAAK,KAahC,OAVA4M,EAAW8B,EAAcG,UAAUxkB,IAAIU,QACtBtB,IAAbmjB,IAEFA,EAAW,IAAI,IAASlT,EAAQA,EAAOqV,sBAEvCL,EAAcG,UAAU7c,IAAIjH,EAAK6hB,IAInC8B,EAAcC,aAAa3c,IAAI0H,EAAOoV,QAASlC,GACxCA,EAkBF,MAAMoW,EAAiB,IAAIt1B,K,6BC/FlC;;;;;;;;;;;;;;AAoBA,MAAMu1B,EAAa,IAAIrU,QA+CVyR,EAAyCjnB,GACjD,IAAItG,KACH,MAAM9I,EAAIoP,KAAKtG,GAEf,OADAmwB,EAAWjxB,IAAIhI,GAAG,GACXA,GAGAk5B,EAAeh5B,GACN,mBAANA,GAAoB+4B,EAAWze,IAAIta,I,6BC3EnD;;;;;;;;;;;;;;AAuBO,MAAM8iB,EAAQ,IAAI4B,QAiBZ+H,EACT,CAACjd,EACAmd,EACA1hB,KACC,IAAIkY,EAAOL,EAAM3iB,IAAIwsB,QACRptB,IAAT4jB,IACF,YAAYwJ,EAAWA,EAAU5G,YACjCjD,EAAMhb,IAAI6kB,EAAWxJ,EAAO,IAAI,IAAQ,eACjB+J,gBAAA,KACGjiB,KAE1BkY,EAAK8V,WAAWtM,IAElBxJ,EAAKmL,SAAS9e,GACd2T,EAAKoL,W,6BCtDX;;;;;;;;;;;;;;AAsBA,MAAM2K,EAAgB,IAAI,OAMpB,MAAOC,EAMX,YACIvU,EAA+BjZ,EAC/B1M,EAAc43B,GAChBr0B,KAAKoiB,QAAUA,EACfpiB,KAAKmJ,OAASA,EACdnJ,KAAKvD,KAAOA,EACZuD,KAAKq0B,UAAYA,EAMnB,UACE,MAAMv5B,EAAIkF,KAAKoiB,QAAQroB,OAAS,EAChC,IAAIq3B,EAAO,GACPwF,GAAmB,EAEvB,IAAK,IAAI/8B,EAAI,EAAGA,EAAIiB,EAAGjB,IAAK,CAC1B,MAAMoF,EAAIe,KAAKoiB,QAAQvoB,GAkBjBg9B,EAAc53B,EAAE63B,YAAY,WAIlCF,GAAoBC,GAAe,GAAKD,KACG,IAAvC33B,EAAEyY,QAAQ,SAAOmf,EAAc,GAInC,MAAME,EAAiB,IAAuB7E,KAAKjzB,GAOjDmyB,GANqB,OAAnB2F,EAMM93B,GAAK23B,EAAmBF,EAAgB,KAKxCz3B,EAAE+3B,OAAO,EAAGD,EAAe9c,OAAS8c,EAAe,GACvDA,EAAe,GAAK,IAAuBA,EAAe,GAC1D,IAIR,OADA3F,GAAQpxB,KAAKoiB,QAAQtnB,GACds2B,EAGT,qBACE,MAAMlR,EAAW1kB,SAASC,cAAc,YAExC,OADAykB,EAASyN,UAAY3tB,KAAKi3B,UACnB/W,GAWL,MAAOgX,UAA0BP,EACrC,UACE,MAAO,QAAQ7nB,MAAMmoB,kBAGvB,qBACE,MAAM/W,EAAWpR,MAAMuT,qBACjBhC,EAAUH,EAASG,QACnB8W,EAAa9W,EAAQkD,WAG3B,OAFAlD,EAAQe,YAAY+V,GACpB,YAAc9W,EAAS8W,EAAW5T,YAC3BrD,K,6BC7HX;;;;;;;;;;;;;;AA4BM,MAAOkX,EAMX,YACIlX,EAAoBmU,EACpB5rB,GAPa,KAAA4uB,QAAiC,GAQhDr3B,KAAKkgB,SAAWA,EAChBlgB,KAAKq0B,UAAYA,EACjBr0B,KAAKyI,QAAUA,EAGjB,OAAOU,GACL,IAAItP,EAAI,EACR,IAAK,MAAM8mB,KAAQ3gB,KAAKq3B,aACTt6B,IAAT4jB,GACFA,EAAKmL,SAAS3iB,EAAOtP,IAEvBA,IAEF,IAAK,MAAM8mB,KAAQ3gB,KAAKq3B,aACTt6B,IAAT4jB,GACFA,EAAKoL,SAKX,SAuCE,MAAM2B,EAAW,IACb1tB,KAAKkgB,SAASE,QAAQC,QAAQqD,WAAU,GACxCloB,SAASoyB,WAAW5tB,KAAKkgB,SAASE,QAAQC,SAAS,GAEjDuR,EAAgB,GAChBtR,EAAQtgB,KAAKkgB,SAASI,MAEtBC,EAAS/kB,SAASglB,iBACpBkN,EACA,IACA,MACA,GACJ,IAEI/M,EAFAF,EAAY,EACZG,EAAY,EAEZjO,EAAO4N,EAAOS,WAElB,KAAOP,EAAYH,EAAMvmB,QAEvB,GADA4mB,EAAOL,EAAMG,GACR,YAAqBE,GAA1B,CASA,KAAOC,EAAYD,EAAK1G,OACtB2G,IACuB,aAAnBjO,EAAMub,WACR0D,EAAMv3B,KAAKsY,GACX4N,EAAOU,YAAetO,EAA6B0N,SAElB,QAA9B1N,EAAO4N,EAAOS,cAKjBT,EAAOU,YAAc2Q,EAAM9c,MAC3BnC,EAAO4N,EAAOS,YAKlB,GAAkB,SAAdL,EAAKlkB,KAAiB,CACxB,MAAMkkB,EAAO3gB,KAAKq0B,UAAUiD,qBAAqBt3B,KAAKyI,SACtDkY,EAAKiL,gBAAgBjZ,EAAMuO,iBAC3BlhB,KAAKq3B,QAAQh9B,KAAKsmB,QAElB3gB,KAAKq3B,QAAQh9B,QAAQ2F,KAAKq0B,UAAUkD,2BAChC5kB,EAAiBgO,EAAK9jB,KAAM8jB,EAAKyB,QAASpiB,KAAKyI,UAErDgY,SAjCEzgB,KAAKq3B,QAAQh9B,UAAK0C,GAClB0jB,IAuCJ,OAJI,MACFjlB,SAASg8B,UAAU9J,GACnBuI,eAAewB,QAAQ/J,IAElBA,K,kQCxJX,MACA,oBAAW5uB,OAET44B,SACK,oBAAWplB,MAEhB1T,oFAGA84B,OAAO,GAGPA,OAGF,IAAMC,EAAUC,EAAhB,IACMC,EAAgBD,EAAtB,IACME,EAAcF,EAApB,IACMz3B,EAAWy3B,EAAjB,IACMG,EAAeH,EAArB,IACMI,EAAQJ,EAAd,IAMA,SAAS13B,KAMTrF,UAAiB,cAEf,yBAAWo9B,EACF,IAAIr9B,EAAJ,qBAAP,GAIF,IAAIqF,iBACK,IAAIrF,EAAJ,cAAP,GAGK,IAAIA,EAAJ,UAAP,IAKF,IAAMkC,EAFNlC,EAAUC,EAAVD,QAIAA,YAMAkC,SAAiB,WACf,GACE46B,oBACEA,EAAD,oBACCA,sBACCA,EAJL,eAME,OAAO,IAAP,eAGF,IACE,OAAO,IAAIQ,cAAX,qBACA,UAEF,IACE,OAAO,IAAIA,cAAX,sBACA,UAEF,IACE,OAAO,IAAIA,cAAX,sBACA,UAEF,IACE,OAAO,IAAIA,cAAX,kBACA,UAEF,MAAM,IAAIh8B,MAAV,0DAWF,IAAMi8B,EAAO,GAAGA,KAAO,SAAAl5B,GAAC,OAAIA,EAAJ,QAAe,SAAAA,GAAC,OAAIA,yBAAJ,KAUxC,SAASm5B,EAAUvsB,GACjB,IAAK1L,EAAL,GAAoB,OAAO0L,EAC3B,IAAMwsB,EAAN,GACA,IAAK,IAAL,OACMr+B,uCAAJ,IACEs+B,EAAwBD,EAAOh6B,EAAKwN,EAApCysB,IAGJ,OAAOD,OAAP,KAYF,SAASC,EAAwBD,EAAOh6B,EAAKma,GAC3C,YAAIA,EACJ,UAAIA,EAKJ,GAAI9W,cAAJ,GACE8W,WAAY,SAAAlS,GACVgyB,EAAwBD,EAAOh6B,EAA/Bi6B,WAEG,GAAIn4B,EAAJ,GACL,IAAK,IAAL,OACMnG,uCAAJ,IACEs+B,EAAwBD,EAAO,GAAR,4BAA6B7f,EAApD8f,SAGJD,OAAWE,0BAAgCA,mBAA3CF,SAdAA,OAAWE,mBAAXF,IAgCJ,SAASG,EAAYzF,GAMnB,IALA,IAEA,EACA,EAHMlnB,EAAN,GACMwsB,EAAQtF,QAAd,KAISl5B,EAAJ,EAAW4+B,EAAMJ,EAAtB,OAAoCx+B,EAApC,OAGE,KADA6+B,GADAC,EAAON,EAAPM,IACMA,QAAND,MAEE7sB,EAAI+sB,mBAAJ/sB,OAEAA,EAAI+sB,mBAAmBD,UAAvB9sB,KAA8C+sB,mBAC5CD,QAAWD,EADb7sB,IAMJ,SA8FF,SAASgtB,EAAOC,GAGd,MAAO,qBAAqBC,KAA5B,GAiDF,SAASC,EAASC,GAChBj5B,KAAA,MACAA,KAAA,IAAWA,KAAKi5B,IAFK,IAIrBj5B,KAAA,KACuB,SAApBA,KAAKi5B,IAAIC,SACmB,KAA1Bl5B,KAAKm5B,IAAIC,cADZ,SACmCp5B,KAAKm5B,IAAIC,oBAD5C,IAEOp5B,KAAKm5B,IAAZ,aACIn5B,KAAKm5B,IAHT,aADF,KAMAn5B,KAAA,WAAkBA,KAAKi5B,IAAIE,IAA3B,WAVqB,IAWfE,EAAWr5B,KAXI,WAarB,OAAIq5B,IACFA,OAGFr5B,KAAA,wBACAA,KAAA,QAtGF,SAAqB+yB,GAQnB,IAPA,IAEA,EACA,EACA,EACA,EALM7f,EAAQ6f,QAAd,SACMuG,EAAN,GAMSz/B,EAAJ,EAAW4+B,EAAMvlB,EAAtB,OAAoCrZ,EAApC,OAGE,KADAogB,GADAsf,EAAOrmB,EAAPqmB,IACQA,QAARtf,QAMAuf,EAAQD,aAARC,cACAhhB,EAAM2f,EAAKoB,QAAWtf,EAAtBzB,IACA8gB,QAGF,SAiFeG,CAAYz5B,KAAKm5B,IAAhC,yBACAn5B,KAAA,OAAcA,KAnBO,QAuBrBA,KAAA,uBAA8BA,KAAKm5B,IAAIO,kBAAvC,gBACA15B,KAAA,qBAA0BA,KAA1B,QAEkB,OAAdA,KAAKyzB,MAAiBwF,EAA1B,cACEj5B,KAAA,KAAYA,KAAKm5B,IAAjB,SAEAn5B,KAAA,KACsB,SAApBA,KAAKi5B,IAAIC,OAAT,KAEIl5B,KAAK25B,WAAW35B,KAAKyzB,KAAOzzB,KAAZ,KAAwBA,KAAKm5B,IAHnD,UAuEJ,SAASS,EAAQV,EAAQjB,GACvB,IAAM3lB,EAAN,KACAtS,KAAA,OAAcA,KAAK65B,QAAnB,GACA75B,KAAA,SACAA,KAAA,MACAA,KAAA,OAL4B,GAM5BA,KAAA,QAN4B,GAO5BA,KAAA,UAAe,WACb,IA6BA,EA7BIrB,EAAJ,KACI4I,EAAJ,KAEA,IACEA,EAAM,IAAIyxB,EAAVzxB,GACA,MAAOuyB,GAmBP,OAlBAn7B,EAAM,IAAIzC,MAAVyC,2CACAA,SACAA,WAHa,EAKT2T,EAAJ,KAEE3T,mBACE,IAAO2T,MAAP,aACIA,MADJ,aAEIA,MALM,SAOZ3T,SAAa2T,aAAkBA,MAAlBA,OAAb3T,KACAA,aAAiBA,EARL,SAUZA,mBACAA,eAGK2T,WAAP,GAGFA,qBAGA,IACOA,gBAAL,KACEynB,EAAU,IAAI79B,MACZqL,cAAkBA,EAAlBA,MADFwyB,+BAIF,MAAOD,GACPC,EADa,EAKf,GACEA,aACAA,aACAA,SAAiBxyB,EAAjBwyB,OACAznB,iBAEAA,sBAufN,SAAS0nB,EAAI/B,EAAKz+B,EAAMwU,GACtB,IAAMirB,EAAMn8B,EAAQ,SAApB,GAQA,MAPA,mBAAWtD,IACTwU,IACAxU,QAGF,GAAUy/B,UACV,GAAQA,SACR,EAz0BFn8B,oBAmCAA,gBASAA,QAAgB,CACds0B,KADc,YAEd6I,KAFc,mBAGdC,IAHc,WAIdC,WAJc,oCAKdC,KALc,oCAMd,YAAa,qCAYft9B,YAAoB,CAClB,oCADkB,EAElB,mBAAoB+6B,GAYtB/6B,QAAgB,CACd,oCADc,EAEd,mBAAoBknB,KAAKG,OAqI3B4T,EAAaiB,EAAbjB,WAaAiB,uBAAgC,YAC9B,IAAI7U,EAAQrnB,QAAckD,KAA1B,MACA,OAAIA,KAAKi5B,IAAT,QACSj5B,KAAKi5B,IAAIoB,QAAQr6B,KAAxB,KAGGmkB,GAAS0U,EAAO74B,KAArB,QACEmkB,EAAQrnB,QAARqnB,qBAGKA,OAAiB4O,YAAkBA,aAAnC5O,QACHA,EADGA,GAAP,OAYF6U,oBAA6B,WAAW,IAC9BC,EAD8B,SAE9BC,EAAWD,EAFmB,OAG9BhB,EAAQgB,EAHsB,IAKhCqB,EAAM,UAAH,oCAA+Bt6B,KAA/B,OAAT,KACMrB,EAAM,IAAIzC,MAAhB,GAKA,OAJAyC,SAAaqB,KAAbrB,OACAA,WACAA,QAEA,GAOF7B,aA2EA66B,EAAQiC,EAARjC,WAEAG,EAAY8B,EAAZ9B,WAwBA8B,iBAAyB,YAEvB,OADA55B,KAAA,mBAAyBlD,YAAzB,GACA,MAuBF88B,mBAA2B,YAEzB,OADA55B,KAAA,aAAmBlD,YAAnB,GACA,MAaF88B,iBAAyB,gBACvB,IAAI35B,mBAAwBs6B,MACxB,iBAAJ,OAAgCA,IAE9B9xB,IACA8xB,MAGF,IACE9xB,EAAU,CACRhM,KAAsB,mBAAT+9B,KAAsB,QAAU,SAIjD,IAAMC,EAAU,SAAAC,GACd,sBAAWF,KACT,OAAOA,KAAP,GAGF,MAAM,IAAIt+B,MAAV,kDAGF,OAAO8D,KAAK26B,MAAMC,EAAML,EAAM9xB,EAA9B,IAiBFmxB,kBAA0B,YAGxB,MAFA,iBAAWphB,IAAkBA,EAAM4f,EAAN5f,IAC7B,GAASxY,KAAK65B,OAAOx/B,KAAKme,GAC1B,MAoBFohB,mBAA2B,gBACzB,KAAU,CACR,GAAI55B,KAAJ,MACE,MAAM,IAAI9D,MAAV,8CAGF8D,KAAA,0BAAwCyI,GAAWoyB,EAAnD,MAGF,aAGFjB,yBAAiC,WAK/B,OAJK55B,KAAL,YACEA,KAAA,UAAiB,IAAI03B,EAArB,UAGK13B,KAAP,WAYF45B,qBAA6B,cAC3B,GAAI55B,KAAK86B,aAAan8B,EAAtB,GACE,OAAOqB,KAAP,SAGF,IAAMgO,EAAKhO,KAAX,UACAA,KAAA,eAEA,IACMA,KAAJ,cAAsBrB,UAAcqB,KAAK+6B,SAAnBp8B,GACtBqB,KAAA,iBAGFgO,EAAGrP,EAAHqP,IASF4rB,6BAAqC,WACnC,IAAMj7B,EAAM,IAAIzC,MAAhB,gKAGAyC,iBAEAA,SAAaqB,KAAbrB,OACAA,SAAaqB,KAAbrB,OACAA,MAAUqB,KAAVrB,IAEAqB,KAAA,aAIF45B,kBAA0B,WAExB,OADAh7B,uEACA,MAGFg7B,eAAuBA,YAAvBA,MACAA,mBAA2BA,YAA3BA,GAGAA,kBAA0B,WACxB,MAAM,IAAI19B,MAAV,gEAKF09B,iBAAyBA,YAAzBA,MAUAA,oBAA4B,YAE1B,OACE/tB,cACA,OACCnK,cAFDmK,IADF,oBAIE7R,mCAaJ4/B,gBAAwB,YAClB55B,KAAJ,YACEpB,sFAKFoB,KAAA,YAPmC,EAUnCA,KAAA,UAAiBgO,GAVkB,EAanChO,KAAA,uBAEAA,KAAA,QAGF45B,8BAAsC,WACpC,IAAMtnB,EADyC,KAI3CtS,KAAKg7B,iBAAmBh7B,KAA5B,sBACEA,KAAA,oBAA2BhD,YAAW,WACpCsV,qCAEEA,EAFFA,8BAKCtS,KANH,kBAWJ45B,iBAAyB,WACvB,GAAI55B,KAAJ,SACE,OAAOA,KAAKmd,SACV,IAAIjhB,MADN,+DAIF,IAAMoW,EAAN,KACAtS,KAAA,IAAWlD,EAAX,SAPkC,IAQ1Bq8B,EAR0B,SAS9B3/B,EAAOwG,KAAKi7B,WAAaj7B,KAA7B,MAEAA,KAXkC,eAclCm5B,qBAAyB,WAAM,IACrB+B,EAAe/B,EADM,WAM7B,GAJI+B,MAAmB5oB,EAAvB,uBACEhW,aAAagW,EAAbhW,uBAGF,IAAI4+B,EAAJ,CAMA,MACA,IACE7B,EAASF,EAATE,OACA,SACAA,IAGF,MAAa,CACX,GAAI/mB,YAAiBA,EAArB,SAAoC,OACpC,OAAOA,EAAP,mBAGFA,gBAIF,IAAM6oB,EAAiB,SAACC,EAAWrgC,GAC7BA,QAAJ,IACEA,UAAaA,SAAWA,EAAZ,MAAZA,IAEA,MAAIA,WACFuB,aAAagW,EAAbhW,sBAIJvB,cACAuX,sBAGF,GAAItS,KAAKwP,aAAT,YACE,IACE2pB,8BAAiCgC,YAAjChC,aACIA,EAAJ,QACEA,qCAEEgC,YAFFhC,WAKF,UAOAA,EAAJ,QACEn5B,KAAA,oBAIF,IACMA,KAAKq7B,UAAYr7B,KAArB,SACEm5B,OAASn5B,KAATm5B,OAAsBn5B,KAAtBm5B,OAAsCn5B,KAAtCm5B,SAAqDn5B,KAArDm5B,UAEAA,OAASn5B,KAATm5B,OAAsBn5B,KAAtBm5B,QAEF,MAAOx6B,GAEP,OAAOqB,KAAKmd,SAAZ,GAOF,GAHInd,KAAJ,mBAA2Bm5B,mBAxFO,IA4F/Bn5B,KAAD,mBACAA,KAAKk5B,QADL,SAEAl5B,KAAKk5B,QAFL,iBAGO1/B,IACNwG,KAAKs7B,QALR,GAME,CAEA,IAAMC,EAAcv7B,KAAKw7B,QAAzB,gBACIpD,EACFp4B,KAAKy7B,aACL3+B,YAAkBy+B,EAAcA,aAAH,GAF/B,KAGK,GAAa1C,EAAlB,KACET,EAAYt7B,YAAZs7B,qBAGF,IAAe5+B,EAAO4+B,EAAP5+B,IAIjB,IAAK,IAAL,KAAoBwG,KAApB,OACE,OAAIA,KAAK07B,OAAOlC,IAEZx/B,qCAAqCgG,KAArChG,OAAJ,IACEm/B,qBAA4Bn5B,KAAK07B,OAAjCvC,IAGAn5B,KAAJ,gBACEm5B,eAAmBn5B,KAAnBm5B,eAIFn5B,KAAA,eA3HkC,MA+HlCm5B,YAAyB,IAAT3/B,EAAuB,KAAvC2/B,IAGFr8B,QAAgB,kBAAM,IAAN,GAEhB,CAAC,MAAO,OAAQ,UAAW,QAAS,MAAO,UAAUyE,SAAQ,SAAA23B,GAC3DlB,YAAgBkB,EAAhBlB,eAAwC,cACtC,IAAMiB,EAAM,IAAIn8B,EAAJ,UAAZ,GAMA,OALAkD,KAAA,gBACA,GACEi5B,SAGF,MAIJjB,gBAAsBA,YAAtBA,OAYAl7B,MAAc,gBACZ,IAAMm8B,EAAMn8B,EAAQ,MAApB,GAQA,MAPA,mBAAWtD,IACTwU,IACAxU,QAGF,GAAUy/B,WACV,GAAQA,SACR,GAaFn8B,OAAe,gBACb,IAAMm8B,EAAMn8B,EAAQ,OAApB,GAQA,MAPA,mBAAWtD,IACTwU,IACAxU,QAGF,GAAUy/B,WACV,GAAQA,SACR,GAaFn8B,UAAkB,gBAChB,IAAMm8B,EAAMn8B,EAAQ,UAApB,GAQA,MAPA,mBAAWtD,IACTwU,IACAxU,QAGF,GAAUy/B,UACV,GAAQA,SACR,GAyBFn8B,QACAA,WAYAA,QAAgB,gBACd,IAAMm8B,EAAMn8B,EAAQ,QAApB,GAQA,MAPA,mBAAWtD,IACTwU,IACAxU,QAGF,GAAUy/B,UACV,GAAQA,SACR,GAaFn8B,OAAe,gBACb,IAAMm8B,EAAMn8B,EAAQ,OAApB,GAQA,MAPA,mBAAWtD,IACTwU,IACAxU,QAGF,GAAUy/B,UACV,GAAQA,SACR,GAaFn8B,MAAc,gBACZ,IAAMm8B,EAAMn8B,EAAQ,MAApB,GAQA,MAPA,mBAAWtD,IACTwU,IACAxU,QAGF,GAAUy/B,UACV,GAAQA,SACR,I,6BCtiCF,WAEA,MAAM0C,UAAmB3K,IAIvB/G,SACE,MAAM2R,EAAS57B,KAAK47B,OACpB,OAAIA,EACKxK,GAAK;;YAENp3B,OAAOwL,KAAKo2B,GAAQj1B,IAAItI,GACjB+yB,GAAK;oBACJ/yB,KAAOu9B,EAAOv9B;;;QAMrB,MAjBPs9B,EACGpkB,WAAa,CAClBqkB,OAAQ,IAoBZ3F,eAAe4F,OAAO,cAAeF,I,kQCZrC9gC,UAJA,SAAkBgR,GAChB,OAAOA,UAAP,WAAuB,O,6BCTzB,WAEA,MAAMiwB,EAAe,CACnBC,QAAS,OACTC,eAAgB,UAGZC,EAAa,CACjBF,QAAS,eACTG,OAAQ,YACRC,aAAc,MACdC,QAAS,WACTC,MAAO,mBACPC,WAAY,OACZC,gBAAiB,0BAGJ,MAAMC,UAAiBxL,IAKpC/G,SACE,OAAOmH,GAAK;mBACGnG,YAAS6Q;sBACN7Q,YAASgR,OAAgBj8B,KAAKpD;;OAR/B4/B,EACZjlB,WAAa,CAClB3a,QAAS,CAAEH,KAAMqF,SAYrBm0B,eAAe4F,OAAO,YAAaW,I,+CC9BQ,mBAA9BrhC,QAAQlB,UAAUwiC,UAG7BthC,QAAQlB,UAAUwiC,QAAU,SAAUzuB,GACpC,OAAOhO,KACJyuB,KAAK1wB,GAASiC,KAAKkC,YAAY9G,QAAQ4S,KAAMygB,KAAK,IAAM1wB,IACxD2+B,MAAMC,GAAU38B,KAAKkC,YAAY9G,QAAQ4S,KAAMygB,KAAK,KAAQ,MAAMkO,Q,cCNzE,IAOIC,EACAC,EARAr1B,EAAU3M,EAAOD,QAAU,GAU/B,SAASkiC,IACL,MAAM,IAAI5gC,MAAM,mCAEpB,SAAS6gC,IACL,MAAM,IAAI7gC,MAAM,qCAsBpB,SAAS8gC,EAAWC,GAChB,GAAIL,IAAqB5/B,WAErB,OAAOA,WAAWigC,EAAK,GAG3B,IAAKL,IAAqBE,IAAqBF,IAAqB5/B,WAEhE,OADA4/B,EAAmB5/B,WACZA,WAAWigC,EAAK,GAE3B,IAEI,OAAOL,EAAiBK,EAAK,GAC/B,MAAMliC,GACJ,IAEI,OAAO6hC,EAAiBziC,KAAK,KAAM8iC,EAAK,GAC1C,MAAMliC,GAEJ,OAAO6hC,EAAiBziC,KAAK6F,KAAMi9B,EAAK,MAvCnD,WACG,IAEQL,EADsB,mBAAf5/B,WACYA,WAEA8/B,EAEzB,MAAO/hC,GACL6hC,EAAmBE,EAEvB,IAEQD,EADwB,mBAAjBvgC,aACcA,aAEAygC,EAE3B,MAAOhiC,GACL8hC,EAAqBE,GAjB5B,GAwED,IAEIG,EAFAC,EAAQ,GACRC,GAAW,EAEXC,GAAc,EAElB,SAASC,IACAF,GAAaF,IAGlBE,GAAW,EACPF,EAAanjC,OACbojC,EAAQD,EAAahiB,OAAOiiB,GAE5BE,GAAc,EAEdF,EAAMpjC,QACNwjC,KAIR,SAASA,IACL,IAAIH,EAAJ,CAGA,IAAIzhC,EAAUqhC,EAAWM,GACzBF,GAAW,EAGX,IADA,IAAI3E,EAAM0E,EAAMpjC,OACV0+B,GAAK,CAGP,IAFAyE,EAAeC,EACfA,EAAQ,KACCE,EAAa5E,GACdyE,GACAA,EAAaG,GAAY5mB,MAGjC4mB,GAAc,EACd5E,EAAM0E,EAAMpjC,OAEhBmjC,EAAe,KACfE,GAAW,EAnEf,SAAyB/L,GACrB,GAAIwL,IAAuBvgC,aAEvB,OAAOA,aAAa+0B,GAGxB,IAAKwL,IAAuBE,IAAwBF,IAAuBvgC,aAEvE,OADAugC,EAAqBvgC,aACdA,aAAa+0B,GAExB,IAEWwL,EAAmBxL,GAC5B,MAAOt2B,GACL,IAEI,OAAO8hC,EAAmB1iC,KAAK,KAAMk3B,GACvC,MAAOt2B,GAGL,OAAO8hC,EAAmB1iC,KAAK6F,KAAMqxB,KAgD7CmM,CAAgB7hC,IAiBpB,SAAS8hC,EAAKR,EAAKv2B,GACf1G,KAAKi9B,IAAMA,EACXj9B,KAAK0G,MAAQA,EAYjB,SAASxG,KA5BTsH,EAAQk2B,SAAW,SAAUT,GACzB,IAAI72B,EAAO,IAAI1E,MAAMzB,UAAUlG,OAAS,GACxC,GAAIkG,UAAUlG,OAAS,EACnB,IAAK,IAAIF,EAAI,EAAGA,EAAIoG,UAAUlG,OAAQF,IAClCuM,EAAKvM,EAAI,GAAKoG,UAAUpG,GAGhCsjC,EAAM9iC,KAAK,IAAIojC,EAAKR,EAAK72B,IACJ,IAAjB+2B,EAAMpjC,QAAiBqjC,GACvBJ,EAAWO,IASnBE,EAAKxjC,UAAUwc,IAAM,WACjBzW,KAAKi9B,IAAIl9B,MAAM,KAAMC,KAAK0G,QAE9Bc,EAAQm2B,MAAQ,UAChBn2B,EAAQo2B,SAAU,EAClBp2B,EAAQC,IAAM,GACdD,EAAQq2B,KAAO,GACfr2B,EAAQiK,QAAU,GAClBjK,EAAQs2B,SAAW,GAInBt2B,EAAQu2B,GAAK79B,EACbsH,EAAQw2B,YAAc99B,EACtBsH,EAAQ5H,KAAOM,EACfsH,EAAQy2B,IAAM/9B,EACdsH,EAAQ02B,eAAiBh+B,EACzBsH,EAAQ22B,mBAAqBj+B,EAC7BsH,EAAQ42B,KAAOl+B,EACfsH,EAAQ62B,gBAAkBn+B,EAC1BsH,EAAQ82B,oBAAsBp+B,EAE9BsH,EAAQ+R,UAAY,SAAU1c,GAAQ,MAAO,IAE7C2K,EAAQ+2B,QAAU,SAAU1hC,GACxB,MAAM,IAAIX,MAAM,qCAGpBsL,EAAQg3B,IAAM,WAAc,MAAO,KACnCh3B,EAAQi3B,MAAQ,SAAUC,GACtB,MAAM,IAAIxiC,MAAM,mCAEpBsL,EAAQm3B,MAAQ,WAAa,OAAO,I,cCvLpC,IAAIC,EAGJA,EAAK,WACJ,OAAO5+B,KADH,GAIL,IAEC4+B,EAAIA,GAAK,IAAIjrB,SAAS,cAAb,GACR,MAAO5Y,GAEc,iBAAX+D,SAAqB8/B,EAAI9/B,QAOrCjE,EAAOD,QAAUgkC,G,gBCJjB,SAASjH,EAAQ9rB,GACf,GAAIA,EAAK,OAWX,SAAeA,GACb,IAAK,IAAIxN,KAAOs5B,EAAQ19B,UACtB4R,EAAIxN,GAAOs5B,EAAQ19B,UAAUoE,GAE/B,OAAOwN,EAfSgzB,CAAMhzB,GAVtBhR,EAAOD,QAAU+8B,EAqCnBA,EAAQ19B,UAAU8jC,GAClBpG,EAAQ19B,UAAUs2B,iBAAmB,SAASp0B,EAAO6R,GAInD,OAHAhO,KAAK8+B,WAAa9+B,KAAK8+B,YAAc,IACpC9+B,KAAK8+B,WAAW,IAAM3iC,GAAS6D,KAAK8+B,WAAW,IAAM3iC,IAAU,IAC7D9B,KAAK2T,GACDhO,MAaT23B,EAAQ19B,UAAU2F,KAAO,SAASzD,EAAO6R,GACvC,SAAS+vB,IACP/9B,KAAKi+B,IAAI9hC,EAAO4hC,GAChB/vB,EAAGjO,MAAMC,KAAMC,WAKjB,OAFA89B,EAAG/vB,GAAKA,EACRhO,KAAK+9B,GAAG5hC,EAAO4hC,GACR/9B,MAaT23B,EAAQ19B,UAAUgkC,IAClBtG,EAAQ19B,UAAUikC,eAClBvG,EAAQ19B,UAAUkkC,mBAClBxG,EAAQ19B,UAAU+6B,oBAAsB,SAAS74B,EAAO6R,GAItD,GAHAhO,KAAK8+B,WAAa9+B,KAAK8+B,YAAc,GAGjC,GAAK7+B,UAAUlG,OAEjB,OADAiG,KAAK8+B,WAAa,GACX9+B,KAIT,IAUIiX,EAVA8nB,EAAY/+B,KAAK8+B,WAAW,IAAM3iC,GACtC,IAAK4iC,EAAW,OAAO/+B,KAGvB,GAAI,GAAKC,UAAUlG,OAEjB,cADOiG,KAAK8+B,WAAW,IAAM3iC,GACtB6D,KAKT,IAAK,IAAInG,EAAI,EAAGA,EAAIklC,EAAUhlC,OAAQF,IAEpC,IADAod,EAAK8nB,EAAUllC,MACJmU,GAAMiJ,EAAGjJ,KAAOA,EAAI,CAC7B+wB,EAAUzpB,OAAOzb,EAAG,GACpB,MAUJ,OAJyB,IAArBklC,EAAUhlC,eACLiG,KAAK8+B,WAAW,IAAM3iC,GAGxB6D,MAWT23B,EAAQ19B,UAAUmkC,KAAO,SAASjiC,GAChC6D,KAAK8+B,WAAa9+B,KAAK8+B,YAAc,GAKrC,IAHA,IAAI14B,EAAO,IAAI1E,MAAMzB,UAAUlG,OAAS,GACpCglC,EAAY/+B,KAAK8+B,WAAW,IAAM3iC,GAE7BtC,EAAI,EAAGA,EAAIoG,UAAUlG,OAAQF,IACpCuM,EAAKvM,EAAI,GAAKoG,UAAUpG,GAG1B,GAAIklC,EAEG,CAAIllC,EAAI,EAAb,IAAK,IAAW4+B,GADhBsG,EAAYA,EAAU//B,MAAM,IACIjF,OAAQF,EAAI4+B,IAAO5+B,EACjDklC,EAAUllC,GAAGkG,MAAMC,KAAMoG,GAI7B,OAAOpG,MAWT23B,EAAQ19B,UAAUsf,UAAY,SAASpd,GAErC,OADA6D,KAAK8+B,WAAa9+B,KAAK8+B,YAAc,GAC9B9+B,KAAK8+B,WAAW,IAAM3iC,IAAU,IAWzCw7B,EAAQ19B,UAAUuV,aAAe,SAASrT,GACxC,QAAU6D,KAAKuZ,UAAUpd,GAAOpC,S,cC7KlCc,EAAOD,QAAUqpB,EACjBA,EAAUtf,QAAUsf,EACpBA,EAAU+a,OAASC,EACnBhb,EAAUib,gBAAkBD,EAE5B,IAAIE,EAAM,GACNC,EAAgB,GAGpB,SAASnb,EAAWpY,EAAKwzB,EAAUC,GAEjC,IAAI/3B,EAMJ,KAUF,SAASg4B,EAAQ/mB,EAAKhX,EAAGowB,EAAOa,GAC9B,IAAI54B,EACJ,GAAmB,iBAAR2e,GAA4B,OAARA,EAAc,CAC3C,IAAK3e,EAAI,EAAGA,EAAI+3B,EAAM73B,OAAQF,IAC5B,GAAI+3B,EAAM/3B,KAAO2e,EAAK,CACpB,IAAIgnB,EAAqBxlC,OAAOyH,yBAAyBgxB,EAAQjxB,GAYjE,iBAX+BzE,IAA3ByiC,EAAmB7hC,IACjB6hC,EAAmB9+B,cACrB1G,OAAOyD,eAAeg1B,EAAQjxB,EAAG,CAAEzD,MAAO,eAC1CohC,EAAI9kC,KAAK,CAACo4B,EAAQjxB,EAAGgX,EAAKgnB,KAE1BJ,EAAc/kC,KAAK,CAACme,EAAKhX,KAG3BixB,EAAOjxB,GAAK,aACZ29B,EAAI9kC,KAAK,CAACo4B,EAAQjxB,EAAGgX,MAO3B,GAFAoZ,EAAMv3B,KAAKme,GAEP9W,MAAM+E,QAAQ+R,GAChB,IAAK3e,EAAI,EAAGA,EAAI2e,EAAIze,OAAQF,IAC1B0lC,EAAO/mB,EAAI3e,GAAIA,EAAG+3B,EAAOpZ,OAEtB,CACL,IAAIhT,EAAOxL,OAAOwL,KAAKgT,GACvB,IAAK3e,EAAI,EAAGA,EAAI2L,EAAKzL,OAAQF,IAAK,CAChC,IAAIwE,EAAMmH,EAAK3L,GACf0lC,EAAO/mB,EAAIna,GAAMA,EAAKuzB,EAAOpZ,IAGjCoZ,EAAM9c,OAlDRyqB,CAAO1zB,EAAK,GAAI,QAAI9O,GAGlBwK,EAD2B,IAAzB63B,EAAcrlC,OACViqB,KAAKC,UAAUpY,EAAKwzB,EAAUC,GAE9Btb,KAAKC,UAAUpY,EAAK4zB,EAAoBJ,GAAWC,GAErC,IAAfH,EAAIplC,QAAc,CACvB,IAAI4mB,EAAOwe,EAAIrqB,MACK,IAAhB6L,EAAK5mB,OACPC,OAAOyD,eAAekjB,EAAK,GAAIA,EAAK,GAAIA,EAAK,IAE7CA,EAAK,GAAGA,EAAK,IAAMA,EAAK,GAG5B,OAAOpZ,EAwCT,SAASm4B,EAAiBn7B,EAAGC,GAC3B,OAAID,EAAIC,GACE,EAEND,EAAIC,EACC,EAEF,EAGT,SAASy6B,EAAwBpzB,EAAKwzB,EAAUC,GAC9C,IACI/3B,EADAo4B,EAkBN,SAASC,EAAqBpnB,EAAKhX,EAAGowB,EAAOa,GAC3C,IAAI54B,EACJ,GAAmB,iBAAR2e,GAA4B,OAARA,EAAc,CAC3C,IAAK3e,EAAI,EAAGA,EAAI+3B,EAAM73B,OAAQF,IAC5B,GAAI+3B,EAAM/3B,KAAO2e,EAAK,CACpB,IAAIgnB,EAAqBxlC,OAAOyH,yBAAyBgxB,EAAQjxB,GAYjE,iBAX+BzE,IAA3ByiC,EAAmB7hC,IACjB6hC,EAAmB9+B,cACrB1G,OAAOyD,eAAeg1B,EAAQjxB,EAAG,CAAEzD,MAAO,eAC1CohC,EAAI9kC,KAAK,CAACo4B,EAAQjxB,EAAGgX,EAAKgnB,KAE1BJ,EAAc/kC,KAAK,CAACme,EAAKhX,KAG3BixB,EAAOjxB,GAAK,aACZ29B,EAAI9kC,KAAK,CAACo4B,EAAQjxB,EAAGgX,MAK3B,GAA0B,mBAAfA,EAAIxI,OACb,OAIF,GAFA4hB,EAAMv3B,KAAKme,GAEP9W,MAAM+E,QAAQ+R,GAChB,IAAK3e,EAAI,EAAGA,EAAI2e,EAAIze,OAAQF,IAC1B+lC,EAAoBpnB,EAAI3e,GAAIA,EAAG+3B,EAAOpZ,OAEnC,CAEL,IAAImnB,EAAM,GACNn6B,EAAOxL,OAAOwL,KAAKgT,GAAKmD,KAAK+jB,GACjC,IAAK7lC,EAAI,EAAGA,EAAI2L,EAAKzL,OAAQF,IAAK,CAChC,IAAIwE,EAAMmH,EAAK3L,GACf+lC,EAAoBpnB,EAAIna,GAAMA,EAAKuzB,EAAOpZ,GAC1CmnB,EAAIthC,GAAOma,EAAIna,GAEjB,QAAetB,IAAX01B,EAIF,OAAOkN,EAHPR,EAAI9kC,KAAK,CAACo4B,EAAQjxB,EAAGgX,IACrBia,EAAOjxB,GAAKm+B,EAKhB/N,EAAM9c,OA/DE8qB,CAAoB/zB,EAAK,GAAI,QAAI9O,IAAc8O,EAOzD,IAJEtE,EAD2B,IAAzB63B,EAAcrlC,OACViqB,KAAKC,UAAU0b,EAAKN,EAAUC,GAE9Btb,KAAKC,UAAU0b,EAAKF,EAAoBJ,GAAWC,GAErC,IAAfH,EAAIplC,QAAc,CACvB,IAAI4mB,EAAOwe,EAAIrqB,MACK,IAAhB6L,EAAK5mB,OACPC,OAAOyD,eAAekjB,EAAK,GAAIA,EAAK,GAAIA,EAAK,IAE7CA,EAAK,GAAGA,EAAK,IAAMA,EAAK,GAG5B,OAAOpZ,EAsDT,SAASk4B,EAAqBJ,GAE5B,OADAA,OAAwBtiC,IAAbsiC,EAAyBA,EAAW,SAAU79B,EAAG8E,GAAK,OAAOA,GACjE,SAAUjI,EAAKma,GACpB,GAAI4mB,EAAcrlC,OAAS,EACzB,IAAK,IAAIF,EAAI,EAAGA,EAAIulC,EAAcrlC,OAAQF,IAAK,CAC7C,IAAI8mB,EAAOye,EAAcvlC,GACzB,GAAI8mB,EAAK,KAAOtiB,GAAOsiB,EAAK,KAAOnI,EAAK,CACtCA,EAAM,aACN4mB,EAAc9pB,OAAOzb,EAAG,GACxB,OAIN,OAAOwlC,EAASllC,KAAK6F,KAAM3B,EAAKma,M,kQC3JpC,IAAMrY,EAAWy3B,EAAjB,IAcA,SAASE,EAAYjsB,GACnB,KAAS,OAWX,SAAeA,GACb,IAAK,IAAL,KAAkBisB,EAAlB,UACM99B,qCAAqC89B,EAArC99B,UAAJ,KACE6R,KAAWisB,YAAXjsB,IAGJ,SAjBgBgzB,CAAP,GATXhkC,YAoCAi9B,yBAAqC,WAOnC,OANAx7B,aAAa0D,KAAb1D,QACAA,aAAa0D,KAAb1D,uBACAA,aAAa0D,KAAb1D,4BACO0D,KAAP,cACOA,KAAP,6BACOA,KAAP,oBACA,MAYF83B,kBAA8B,YAE5B,OADA93B,KAAA,UACA,MAqBF83B,yBAAqC,YAEnC,OADA93B,KAAA,gBACA,MAYF83B,sBAAkC,YAEhC,OADA93B,KAAA,cACA,MAiBF83B,oBAAgC,YAC9B,IAAKrvB,GAAL,WAAgB,KAId,OAHAzI,KAAA,WACAA,KAAA,mBACAA,KAAA,iBACA,KAGF,IAAK,IAAL,OACE,GAAIhG,uCAAJ,GACE,UACE,eACEgG,KAAA,SAAgByI,EAAhB,SACA,MACF,eACEzI,KAAA,iBAAwByI,EAAxB,SACA,MACF,aACEzI,KAAA,eAAsByI,EAAtB,OACA,MACF,QACE7J,yCAKR,aAcFk5B,kBAA8B,cAO5B,OALI73B,uBAAJ,IAA8BqhB,IAAgBA,KAC1CA,GAAJ,IAAgBA,KAChBthB,KAAA,cACAA,KAAA,WACAA,KAAA,iBACA,MAGF,IAAM6/B,EAAc,CAAC,aAAc,YAAa,YAAhD,mBAUA/H,yBAAqC,cACnC,IAAK93B,KAAD,aAAqBA,KAAK+6B,YAAc/6B,KAA5C,YACE,SAGF,GAAIA,KAAJ,eACE,IACE,IAAM8/B,EAAW9/B,KAAK+/B,eAAephC,EAArC,GACA,QAAImhC,EAAmB,OAAO,EAC9B,QAAIA,EAAoB,OAHtB,EAKF,MAAOhG,GACPl7B,iBAIJ,GAAI2I,GAAOA,EAAPA,QAAqBA,UAArBA,KAAJ,MAA8CA,SAAoB,OAAO,EACzE,KAAS,CACP,GAAI5I,QAAYkhC,WAAqBlhC,EAArC,MAAgD,OADzC,EAGP,GAAIA,WAAJ,iBAAmBA,OAA6B,OAAO,EACvD,GAAIA,EAAJ,YAAqB,OAAO,EAG9B,UAUFm5B,mBAA+B,WAa7B,OAZA93B,KADwC,eAIpCA,KAAJ,MACEA,KAAA,SACAA,KAAA,IAAWA,KAAX,WAGFA,KAAA,YACAA,KAAA,YACAA,KAAA,mBAEOA,KAAP,QAWF83B,iBAA6B,cAA0B,WACrD,IAAK93B,KAAL,mBAA8B,CAC5B,IAAMsS,EAAN,KACItS,KAAJ,YACEpB,+IAKFoB,KAAA,mBAA0B,IAAI7E,SAAQ,cACpCmX,cAAiB,WACf,GAAI,YAAiB,EAArB,cACEjX,EAAO,EAAPA,mBADF,CAKA,IAAMsD,EAAM,IAAIzC,MAAhB,WACAyC,iBACAA,SAAa,EAAbA,OACAA,SAAa,EAAbA,OACAA,MAAU,EAAVA,IACAtD,SAEFiX,OAAS,cACP,EAASjX,EAAT,GACKD,WAKX,OAAO4E,KAAKggC,mBAAmBvR,KAAKrzB,EAApC,IAGF08B,kBAA8B,YAC5B,OAAO93B,KAAKyuB,UAAK1xB,EAAjB,IAOF+6B,gBAA4B,YAE1B,OADA9pB,QACA,MAGF8pB,eAA2B,YACzB,sBAAW7gB,EAAmB,MAAM,IAAI/a,MAAV,qBAE9B,OADA8D,KAAA,cACA,MAGF83B,0BAAsC,YACpC,YAII93B,KAAJ,YACSA,KAAKigC,YAAZ,GAGK14B,eAAqBA,SAA5B,MAYFuwB,gBAA4B,YAC1B,OAAO93B,KAAKw7B,QAAQhC,EAApB,gBAeF1B,sBAAkCA,YAAlCA,IAuBAA,gBAA4B,cAC1B,GAAI33B,EAAJ,GAAqB,CACnB,IAAK,IAAL,OACMnG,uCAAJ,IACEgG,KAAKsF,IAAIjH,EAAKm7B,EAAd,IAGJ,YAKF,OAFAx5B,KAAA,QAAaw5B,EAAb,iBACAx5B,KAAA,YACA,MAeF83B,kBAA8B,YAG5B,cAFO93B,KAAKw7B,QAAQhC,EAApB,sBACOx5B,KAAK07B,OAAZ,GACA,MAsBF5D,kBAA8B,cAE5B,GAAIj7B,QACF,MAAM,IAAIX,MAAV,2CAGF,GAAI8D,KAAJ,MACE,MAAM,IAAI9D,MAAV,mGAKF,GAAIiE,EAAJ,GAAoB,CAClB,IAAK,IAAL,OACMnG,uCAAJ,IACEgG,KAAKw5B,MAAMn7B,EAAKxB,EAAhB,IAGJ,YAGF,GAAI6E,cAAJ,GAAwB,CACtB,IAAK,IAAL,OACM1H,uCAAJH,IACEmG,KAAKw5B,MAAM38B,EAAM2b,EAAjB,IAGJ,YAIF,GAAIA,QACF,MAAM,IAAItc,MAAV,0CAQF,MALA,kBAAWsc,IACTA,EAAM1W,OAAN0W,IAGFxY,KAAA,2BACA,MASF83B,kBAA8B,WAC5B,OAAI93B,KAAJ,SACE,MAGFA,KAAA,YACIA,KAAJ,KAAcA,KAAKm5B,IANoB,QAOnCn5B,KAAJ,KAAcA,KAAKi5B,IAPoB,QAQvCj5B,KAAA,eACAA,KAAA,cACA,OAGF83B,kBAA8B,kBAC5B,OAAQrvB,EAAR,MACE,YACEzI,KAAA,oCAAmCkgC,EAAc,GAAD,qBAAhD,MACA,MAEF,WACElgC,KAAA,WACAA,KAAA,WACA,MAEF,aACEA,KAAA,yCAMJ,aAcF83B,4BAAwC,YAItC,YAFA,IAAIiG,IAAkBA,MACtB/9B,KAAA,mBACA,MAWF83B,sBAAkC,YAEhC,OADA93B,KAAA,gBACA,MAUF83B,4BAAwC,YACtC,oBAAWv5B,EACT,MAAM,IAAI4hC,UAAV,oBAIF,OADAngC,KAAA,mBACA,MAYF83B,mBAA+B,WAC7B,MAAO,CACLoB,OAAQl5B,KADH,OAELi4B,IAAKj4B,KAFA,IAGLxG,KAAMwG,KAHD,MAILogC,QAASpgC,KAAKw7B,UA6ClB1D,iBAA6B,YAC3B,IAAMuI,EAAQlgC,EAAd,GACI1D,EAAOuD,KAAKw7B,QAAhB,gBAEA,GAAIx7B,KAAJ,UACE,MAAM,IAAI9D,MAAV,gHAKF,GAAImkC,IAAUrgC,KAAd,MACM0B,cAAJ,GACE1B,KAAA,SACUA,KAAKs7B,QAAV,KACLt7B,KAAA,eAEG,GAAIxG,GAAQwG,KAARxG,OAAsBwG,KAAKs7B,QAAQt7B,KAAvC,OACL,MAAM,IAAI9D,MAAV,gCAIF,GAAImkC,GAASlgC,EAASH,KAAtB,OACE,IAAK,IAAL,OACMhG,uCAAJ,KACEgG,KAAKmc,MAAM9d,GAAO7E,EAAlB,QAEC,iBAAWA,GAEhB,GAAWwG,KAAKvD,KAAK,QACrBA,EAAOuD,KAAKw7B,QAAZ/+B,gBAEEuD,KAAA,MADF,sCAAIvD,EACWuD,KAAKmc,MAAQ,GAAb,OAAgBnc,KAAhB,qBAAb,GAEcA,KAAKmc,OAAN,IAAb,GAGFnc,KAAA,QAGF,OAAKqgC,GAASrgC,KAAKs7B,QAAnB,GACE,MAIF,GAAWt7B,KAAKvD,KAAK,QACrB,OA+BFq7B,sBAAkC,YAGhC,OADA93B,KAAA,WAA6B,IAAT2b,GAApB,EACA,MAQFmc,iCAA6C,WAC3C,IAAMwI,EAAQtgC,KAAK65B,OAAOvmB,KAA1B,KAOA,GANA,IACEtT,KAAA,MAAaA,KAAKi4B,IAAIsI,SAAS,KAAO,IAA1B,KAAZ,GAGFvgC,KAAA,cANsD,EAQlDA,KAAJ,MAAgB,CACd,IAAMia,EAAQja,KAAKi4B,IAAIvgB,QAAvB,KACA,GAAIuC,GAAJ,EAAgB,CACd,IAAMumB,EAAWxgC,KAAKi4B,IAAIj5B,MAAMib,EAAf,SAAjB,KACA,mBAAWja,KAAP,MACFwgC,OAAcxgC,KAAdwgC,OAEAA,SAGFxgC,KAAA,IAAWA,KAAKi4B,IAAIj5B,MAAM,EAAGib,GAAS,IAAMumB,OAA5C,QAMN1I,+BAA2C,WACzCl5B,6BASFk5B,0BAAsC,gBACpC,IAAI93B,KAAJ,UAIA,IAAMrB,EAAM,IAAIzC,MAAM,GAAV,OAAaygC,EAAb,EAAZ,gBACAh+B,YACAA,sBACAA,UACAqB,KAAA,YACAA,KAAA,gBACAA,KAAA,QACAA,KAAA,cAGF83B,yBAAqC,WACnC,IAAMxlB,EADwC,KAI1CtS,KAAKygC,WAAazgC,KAAtB,SACEA,KAAA,OAAchD,YAAW,WACvBsV,8BAAkCA,EAAlCA,oBACCtS,KAFH,WAMEA,KAAK0gC,mBAAqB1gC,KAA9B,wBACEA,KAAA,sBAA6BhD,YAAW,WACtCsV,uCAEEA,EAFFA,gCAKCtS,KANH,qB,6BC/tBJ,IAAM2gC,EAAQ/I,EAAd,IAcA,SAASG,EAAalsB,GACpB,KAAS,OAWX,SAAeA,GACb,IAAK,IAAL,KAAkBksB,EAAlB,UACM/9B,qCAAqC+9B,EAArC/9B,UAAJ,KACE6R,KAAWksB,YAAXlsB,IAGJ,SAjBgBgzB,CAAP,GATXhkC,YAqCAk9B,gBAA6B,YAC3B,OAAO/3B,KAAK07B,OAAOlC,EAAnB,gBAeFzB,iCAA8C,YAK5C,IAAM6I,EAAKlF,mBAAX,GACA17B,KAAA,KAAY2gC,OANiD,GAS7D,IAAME,EAASF,SAAf,GACA,IAAK,IAAL,OACM3mC,uCAAJ,KACEgG,KAAK3B,GAAOwiC,EAAZ,IAGJ7gC,KAAA,MAf6D,GAkB7D,IACM07B,EAAJ,OACE17B,KAAA,MAAa2gC,aAAiBjF,EAA9B,OAEF,YA0BJ3D,iCAA8C,YAC5C,IAAMt7B,EAAQ48B,EAAD,IADgD,EAI7Dr5B,KAAA,aACAA,KAAA,OAAcA,KAAd,WACAA,KAAA,WAN6D,EAS7DA,KAAA,SAAYvD,EACZuD,KAAA,OAAUvD,EACVuD,KAAA,aAAgBvD,EAChBuD,KAAA,gBAAmBvD,EACnBuD,KAAA,gBAAmBvD,EACnBuD,KAAA,OAAavD,WAAcA,IAAauD,KAA3BvD,UAGbuD,KAAA,cAAeq5B,EACfr5B,KAAA,eAAgBq5B,EAChBr5B,KAAA,gBAAiBq5B,EACjBr5B,KAAA,iBAAkBq5B,EAClBr5B,KAAA,mBAAoBq5B,EACpBr5B,KAAA,oBAAqBq5B,EACrBr5B,KAAA,gBAAiBq5B,EACjBr5B,KAAA,eAAgBq5B,EAChBr5B,KAAA,0BAA2Bq5B,I,6BChI7Bz+B,OAAe,SAAAm4B,GAAG,OAAIA,iBAAJ,SAUlBn4B,SAAiB,SAAAm4B,GAAG,OAClBA,EAAA,uBAA0B,cACxB,IAAMzS,EAAQyS,QAAd,SACM10B,EAAMiiB,EAAZ,QACM9H,EAAM8H,EAAZ,QAGA,OADIjiB,GAAJ,IAAgBwN,QAChB,IAPgB,KAkBpBjR,aAAqB,SAAAm4B,GAAG,OACtBA,EAAA,uBAA0B,cACxB,IAAMzS,EAAQyS,QAAd,SACMkF,EAAM3X,cAAZ,GAGA,OADAzU,EADYyU,gCAAZ,IACAzU,EACA,IANoB,KAiBxBjR,cAAsB,cAWpB,cAVO8gC,EAAP,uBACOA,EAAP,yBACOA,EAAP,4BACOA,EAJwC,KAM/C,WACSA,EAAP,qBACOA,EAAP,QAGF,I,kXChEF,SAAS1D,IACPh4B,KAAA,aAGF,CAAC,MAAD,mMAuBU,SAAAgO,GAERgqB,eAAsB,WAAkB,2BAAN5xB,EAAM,yBAANA,EAAM,gBAEtC,OADApG,KAAA,eAAoB,CAAEgO,GAAF,EAAM5H,SAC1B,SAIJ4xB,yBAA+B,YAC7Bh4B,KAAA,mBAAuB,SAAA8gC,GACrB7H,EAAI6H,EAAJ7H,YAAG,EAAY6H,EAAf7H,WAIJp+B,a,+ECvCA,MAAMkmC,EAAW,yCAEXC,EAASzI,mBAEf,IAAI0I,EAAaC,EAEjB,MAKMC,EAAexiC,IACfA,GAAOA,EAAIyiC,UAAoC,MAAxBziC,EAAIyiC,SAAS/H,QACtC6H,EAAUG,SAEL1iC,GAGH2iC,EAAe/5B,GAAOA,EAAIg6B,KAE1BC,EAAcvI,IACdgI,EAAYQ,OACdxI,EAAI3zB,IAAI,gBAAkB,SAAQ27B,EAAYQ,UAI5CC,EACCzJ,GACH0J,IACG3H,IAAK,GAAE+G,IAAW9I,KAClB2J,IAAIJ,GACJ9E,MAAMyE,GACN1S,KAAK6S,GANNI,EAOCzJ,GACH0J,IACGhkC,IAAK,GAAEojC,IAAW9I,KAClB2J,IAAIJ,GACJ9E,MAAMyE,GACN1S,KAAK6S,GAZNI,EAaC,CAACzJ,EAAKsJ,IACTI,IACGE,IAAK,GAAEd,IAAW9I,IAAOsJ,GACzBK,IAAIJ,GACJ9E,MAAMyE,GACN1S,KAAK6S,GAlBNI,EAmBE,CAACzJ,EAAKsJ,IACVI,IACGG,KAAM,GAAEf,IAAW9I,IAAOsJ,GAC1BK,IAAIJ,GACJ9E,MAAMyE,GACN1S,KAAK6S,GAgBNS,EAAQ,CAACzgB,EAAOvlB,IAAO,SAAQulB,YAAgBvlB,EAAIA,EAAIulB,EAAQ,IAC/D0gB,EAAWC,GAAWjoC,OAAOkM,OAAO,GAAI+7B,EAAS,CAAEC,UAAMnlC,IAkChD,I,YAAA,EAhCE,CACfI,IAAK,CAACglC,EAAMC,EAAM,KAAOV,EAAc,aAAYK,EAAMK,EAAKD,MAC9DE,SAAU,CAACC,EAAQH,EAAM7B,IACvBoB,EAAc,oBAAmBV,EAAOsB,MAAWP,EAAM,EAAGI,MAC9DI,MAAO,CAACC,EAAKL,EAAMC,EAAM,KACvBV,EAAc,iBAAgBV,EAAOwB,MAAQT,EAAMK,EAAKD,MAC1DnI,IAAKkI,GAAQR,EAAc,aAAYQ,KACvCO,SAAUP,GAAQR,EAAe,aAAYQ,cAC7CQ,YAAa,CAACJ,EAAQH,IACpBT,EAAc,uBAAsBV,EAAOsB,MAAWP,EAAM,EAAGI,MACjEQ,KAAM,IAAMjB,EAAa,oCACzB/jC,IAAKukC,GAAQR,EAAc,aAAYQ,KACvCU,WAAYV,GAAQR,EAAc,aAAYQ,cAC9Cla,OAAQia,GACNP,EAAc,aAAYO,EAAQC,OAAQ,CAAED,QAASD,EAASC,KAChE7jC,OAAQ6jC,GAAWP,EAAc,YAAa,CAAEO,aAiBnC,EAhDF,CACXY,QAAS,IAAMnB,EAAa,SAC5BoB,MAAO,CAACC,EAAOC,IACbtB,EAAc,eAAgB,CAAE9G,KAAM,CAAEmI,QAAOC,cACjDC,SAAU,CAAC5H,EAAU0H,EAAOC,IAC1BtB,EAAc,SAAU,CAAE9G,KAAM,CAAES,WAAU0H,QAAOC,cACrDE,KAAMtI,GAAQ8G,EAAa,QAAS,CAAE9G,UA0CzB,EAdE,CACfx8B,OAAQ,CAAC8jC,EAAMiB,IACbzB,EAAe,aAAYQ,aAAiB,CAAEiB,YAChDvwB,OAAQ,CAACsvB,EAAMkB,IACb1B,EAAc,aAAYQ,cAAiBkB,KAC7CC,WAAYnB,GAAQR,EAAc,aAAYQ,eASjC,EANC,CACdoB,OAAQjI,GAAYqG,EAAe,aAAYrG,YAC/C19B,IAAK09B,GAAYqG,EAAc,aAAYrG,KAC3CkI,SAAUlI,GAAYqG,EAAc,aAAYrG,aAGnC,EAvCF,CACXmI,OAAQ,IAAM9B,EAAa,UAsCd,EA/FG+B,IAChBxC,EAAcwC,EAAOxC,YACrBC,EAAYuC,EAAOvC,W,ulBC4INwC,I,YAAAA,GAjJf,OAAO,MAAoB,6JAOzB,eACE,OAAOhiC,MAAMC,KAAK3B,KAAK2jC,iBAAiBx6B,UAG1CkS,QACErb,KAAK2jC,iBAAiBtoB,QACtBrb,KAAKmiC,KAAO,EAGdyB,WAAW1B,GACT,OAAOliC,KAAK2jC,iBAAiBhmC,IAAIukC,GAG3B2B,QAAQ1B,GACdniC,KAAKmiC,KAAOA,EAGN2B,aAAaC,GACf/f,KAAKC,UAAU8f,KAAe/f,KAAKC,UAAUjkB,KAAK+jC,aACtD/jC,KAAKqb,QACLrb,KAAK+jC,UAAYA,GAGnBC,OACE,OAAIhkC,KAAK+jC,UAAUE,OAAeC,EAAevB,KAAK3iC,KAAKmiC,KAjCjD,IAkCNniC,KAAK+jC,UAAUrB,YACVwB,EAAexB,YACpB1iC,KAAK+jC,UAAUrB,YACf1iC,KAAKmiC,KArCC,IAwCNniC,KAAK+jC,UAAUvB,IACV0B,EAAe3B,MAAMviC,KAAK+jC,UAAUvB,IAAKxiC,KAAKmiC,KAzC7C,IA0CNniC,KAAK+jC,UAAUzB,OACV4B,EAAe7B,SAASriC,KAAK+jC,UAAUzB,OAAQtiC,KAAKmiC,KA3CnD,IA4CH+B,EAAe/mC,IAAI6C,KAAKmiC,KA5CrB,GA4CkCniC,KAAK+jC,WAG3CI,eAEN,OADAnkC,KAAKokC,WAAY,EACVpkC,KAAKgkC,OACTvV,KACC/gB,YAAO,yBAA0B,EAAG22B,WAAUC,oBAC5CtkC,KAAK2jC,iBAAiBtoB,QACtBgpB,EAAS9iC,QAAQ0gC,GACfjiC,KAAK2jC,iBAAiBr+B,IAAI28B,EAAQC,KAAMD,IAE1CjiC,KAAKukC,gBAAkB1pB,KAAK2pB,KAAKF,EAxD7B,OA2DP7H,QACC/uB,YAAO,qBAAsB,KAC3B1N,KAAKokC,WAAY,KAKjBK,YAAYvC,GAAM,aAAEwC,GAAe,GAAU,IACnD,GAAIA,EAAc,CAChB,MAAMzC,EAAUjiC,KAAK4jC,WAAW1B,GAChC,GAAID,EAAS,OAAO9mC,QAAQC,QAAQ6mC,GAGtC,OADAjiC,KAAKokC,WAAY,EACVF,EAAevmC,IAAIukC,GACvBzT,KACC/gB,YAAO,EAAGu0B,cACRjiC,KAAK2jC,iBAAiBr+B,IAAI28B,EAAQC,KAAMD,GACjCA,KAGVxF,QACC/uB,YAAO,KACL1N,KAAKokC,WAAY,KAKjBO,aAAazC,GACnB,MAAMD,EAAUjiC,KAAK4jC,WAAW1B,GAChC,OAAID,IAAYA,EAAQ2C,WACtB3C,EAAQ2C,WAAY,EACpB3C,EAAQ4C,iBACDX,EAAezB,SAASP,GAAMxF,MACnChvB,YAAO/O,IAGL,MAFAsjC,EAAQ2C,WAAY,EACpB3C,EAAQ4C,iBACFlmC,MAILxD,QAAQC,UAGT0pC,eAAe5C,GACrB,MAAMD,EAAUjiC,KAAK4jC,WAAW1B,GAChC,OAAID,GAAWA,EAAQ2C,WACrB3C,EAAQ2C,WAAY,EACpB3C,EAAQ4C,iBACDX,EAAetB,WAAWV,GAAMxF,MACrChvB,YAAO/O,IAGL,MAFAsjC,EAAQ2C,WAAY,EACpB3C,EAAQ4C,iBACFlmC,MAILxD,QAAQC,UAGT2pC,cAAc9C,GACpB,OAAOiC,EAAe9lC,OAAO6jC,GAASxT,KACpC/gB,YAAO,EAAGu0B,cACRjiC,KAAK2jC,iBAAiBr+B,IAAI28B,EAAQC,KAAMD,GACjCA,KAKL+C,cAAcxrC,GACpB,OAAO0qC,EAAelc,OAAOxuB,GAAMi1B,KACjC/gB,YAAO,EAAGu0B,cACRjiC,KAAK2jC,iBAAiBr+B,IAAI28B,EAAQC,KAAMD,GACjCA,KAKLgD,cAAc/C,GAEpB,OADAliC,KAAK2jC,iBAAiB/wB,OAAOsvB,GACtBgC,EAAelK,IAAIkI,GAAMxF,MAC9BhvB,YAAO/O,IAEL,MADAqB,KAAKmkC,eACCxlC,QA3Id,uBACGwE,KADH,yEAC0B,KAD1B,wBAEGA,KAFH,yEAEqB,KAFrB,mCAGGA,KAHH,yEAGgC,KAHhC,oCAIGA,KAJH,yEAIiCA,IAAWwD,SAJ5C,6BAKGxD,KALH,wEAK0B,MAL1B,0BAOG0H,KAPH,8FAoBG6C,KApBH,kGAwBGA,KAxBH,uGA6CGA,KA7CH,sGAgEGA,KAhEH,sGAoFGA,KApFH,yGAoGGA,KApGH,0GAoHGA,KApHH,yGA6HGA,KA7HH,yGAsIGA,KAtIH,6E,ulBC0Dew3B,I,QAAAA,GA5Df,OAAO,MAAoB,0KAOjBC,eAAeC,GACjBplC,KAAKolC,cAAgBA,IACvBplC,KAAKqlC,SAAW,GAChBrlC,KAAKolC,YAAcA,GAIfE,eAGN,OAFAtlC,KAAKulC,mBAAoB,EACzBvlC,KAAKwlC,mBAAgBzoC,EACdmnC,EAAeb,WAAWrjC,KAAKolC,aACnC3W,KACC/gB,YAAO,EAAG23B,eACRrlC,KAAKqlC,SAAWA,KAGnB3I,MACChvB,YAAO/O,IAGL,MAFAqB,KAAKwlC,cACH7mC,EAAIyiC,UAAYziC,EAAIyiC,SAASG,MAAQ5iC,EAAIyiC,SAASG,KAAK3F,OACnDj9B,KAGT89B,QACC/uB,YAAO,KACL1N,KAAKulC,mBAAoB,KAKzBrS,cAAciQ,GAEpB,OADAnjC,KAAKylC,mBAAoB,EAClBvB,EAAe9lC,OAAO4B,KAAKolC,YAAajC,GAC5C1U,KAAK,IAAMzuB,KAAKslC,gBAChB7I,QACC/uB,YAAO,KACL1N,KAAKylC,mBAAoB,KAKzBC,cAAcC,GACpB,MAAMvsB,EAAMpZ,KAAKqlC,SAASO,UAAUvoC,GAAKA,EAAEsoC,KAAOA,GAElD,OADIvsB,GAAO,GAAGpZ,KAAKqlC,SAAS/vB,OAAO8D,EAAK,GACjC8qB,EAAetxB,OAAO5S,KAAKolC,YAAaO,GAAIjJ,MACjDhvB,YAAO/O,IAEL,MADAqB,KAAKslC,eACC3mC,QAtDd,+BACGwE,KADH,yEACkC,KADlC,qCAEGA,KAFH,yEAEkC,KAFlC,iCAGGA,KAHH,qGAIGA,KAJH,kGAKGA,KALH,wEAKyB,MALzB,gCAOGuK,KAPH,yGAcGA,KAdH,wGAqCGA,KArCH,yGAgDGA,KAhDH,6E,ulBCmFem4B,I,cAAAA,I,OAnFf,MACE3jC,YAAY4jC,GAAW,4EACrB9lC,KAAK8lC,UAAYA,EAYXC,YAAY1K,GAClBr7B,KAAKmJ,OAAOkyB,SAAWA,EAGjB2K,SAASjD,GACf/iC,KAAKmJ,OAAO45B,MAAQA,EAGdkD,YAAYjD,GAClBhjC,KAAKmJ,OAAO65B,SAAWA,EAGjBkD,QACNlmC,KAAKmJ,OAAOkyB,SAAW,GACvBr7B,KAAKmJ,OAAO45B,MAAQ,GACpB/iC,KAAKmJ,OAAO65B,SAAW,GAGjBF,QAGN,OAFA9iC,KAAKmmC,YAAa,EAClBnmC,KAAK47B,YAAS7+B,EACPmnC,EAAWpB,MAAM9iC,KAAKmJ,OAAO45B,MAAO/iC,KAAKmJ,OAAO65B,UACpDvU,KAAK,EAAGmM,UAAW56B,KAAK8lC,UAAU7E,YAAYmF,SAASxL,EAAK6G,QAC5DhT,KAAK,IAAMzuB,KAAK8lC,UAAUO,UAAUC,YACpC5J,MACChvB,YAAO/O,IAGL,MAFAqB,KAAK47B,OACHj9B,EAAIyiC,UAAYziC,EAAIyiC,SAASG,MAAQ5iC,EAAIyiC,SAASG,KAAK3F,OACnDj9B,KAGT89B,QACC/uB,YAAO,KACL1N,KAAKmmC,YAAa,KAKlBlD,WAGN,OAFAjjC,KAAKmmC,YAAa,EAClBnmC,KAAK47B,YAAS7+B,EACPmnC,EAAWjB,SAChBjjC,KAAKmJ,OAAOkyB,SACZr7B,KAAKmJ,OAAO45B,MACZ/iC,KAAKmJ,OAAO65B,UAEXvU,KAAK,EAAGmM,UAAW56B,KAAK8lC,UAAU7E,YAAYmF,SAASxL,EAAK6G,QAC5DhT,KAAK,IAAMzuB,KAAK8lC,UAAUO,UAAUC,YACpC5J,MACChvB,YAAO/O,IAGL,MAFAqB,KAAK47B,OACHj9B,EAAIyiC,UAAYziC,EAAIyiC,SAASG,MAAQ5iC,EAAIyiC,SAASG,KAAK3F,OACnDj9B,KAGT89B,QACC/uB,YAAO,KACL1N,KAAKmmC,YAAa,KAKlB9E,SAGN,OAFArhC,KAAK8lC,UAAU7E,YAAYmF,cAASrpC,GACpCiD,KAAK8lC,UAAUO,UAAUE,aAClBprC,QAAQC,a,wBA1EhB+H,K,yEAAwB,K,0BACxBA,K,gGAEAA,K,wEAAoB,CACnBk4B,SAAU,GACV0H,MAAO,GACPC,SAAU,O,6BAGXt1B,K,kGAIAA,K,kGAIAA,K,+FAIAA,K,yFAMAA,K,4FAoBAA,K,6FAwBAA,K,+pBC/BY84B,I,wBAAAA,I,QA7Cf,MAQEtkC,cAAc,uIACZ+T,YACE,IAAMjW,KAAKyhC,MACXA,IACMA,EACF3iC,OAAO2nC,aAAaC,QAAQ,MAAOjF,GAEnC3iC,OAAO2nC,aAAaE,WAAW,SAM/BC,WAEN,OADA5mC,KAAK6mC,eAAgB,EACd3C,EAAWV,SACf/U,KACC/gB,YAAO,aAAc,EAAGo5B,WACtB9mC,KAAK8mC,KAAOA,EAAKngC,IAAI3I,GAAKA,EAAEyoB,kBAG/BgW,QACC/uB,YAAO,iBAAkB,KACvB1N,KAAK6mC,eAAgB,KAKrBT,SAAS3E,GACfzhC,KAAKyhC,MAAQA,EAGPsF,eACN/mC,KAAKgnC,WAAY,K,qBAxClB7jC,K,wEAAqB,a,0BACrBA,K,yEAAmBrE,OAAO2nC,aAAaQ,QAAQ,U,8BAC/C9jC,K,yEAAuB,K,0BAEvBA,K,wEAAkB,M,mCAClBA,K,yEAA2B,K,2BAe3BuK,K,gGAeAA,K,oGAIAA,K,qqBC0DYw5B,I,eAAAA,I,UAnGf,MACEhlC,YAAY4jC,GAAW,kMACrB9lC,KAAK8lC,UAAYA,EAYXX,eAAeC,GACjBplC,KAAKolC,cAAgBA,IACvBplC,KAAKkmC,QACLlmC,KAAKolC,YAAcA,GAIf+B,kBACN,OAAKnnC,KAAKolC,aACVplC,KAAKmmC,YAAa,EACXnmC,KAAK8lC,UAAUsB,cACnB3C,YAAYzkC,KAAKolC,YAAa,CAAEV,cAAc,IAC9CjW,KACC/gB,YAAOu0B,IACL,IAAKA,EAAS,MAAM,IAAI/lC,MAAM,+BAC9B8D,KAAK29B,MAAQsE,EAAQtE,MACrB39B,KAAKqnC,YAAcpF,EAAQoF,YAC3BrnC,KAAKuhC,KAAOU,EAAQV,KACpBvhC,KAAKsnC,QAAUrF,EAAQqF,WAG1B7K,QACC/uB,YAAO,KACL1N,KAAKmmC,YAAa,MAfMhrC,QAAQC,UAoBhC8qC,QACNlmC,KAAK29B,MAAQ,GACb39B,KAAKqnC,YAAc,GACnBrnC,KAAKuhC,KAAO,GACZvhC,KAAKsnC,QAAU,GAGTC,SAAS5J,GACf39B,KAAK29B,MAAQA,EAGP6J,eAAeH,GACrBrnC,KAAKqnC,YAAcA,EAGbI,QAAQlG,GACdvhC,KAAKuhC,KAAOA,EAGNmG,OAAOlF,GACTxiC,KAAKsnC,QAAQ/G,SAASiC,IAC1BxiC,KAAKsnC,QAAQjtC,KAAKmoC,GAGZmF,UAAUnF,GAChBxiC,KAAKsnC,QAAUtnC,KAAKsnC,QAAQ/pB,OAAOvf,GAAKA,IAAMwkC,GAGxCoF,SACN5nC,KAAKmmC,YAAa,EAClBnmC,KAAK47B,YAAS7+B,EACd,MAAMklC,EAAU,CACdtE,MAAO39B,KAAK29B,MACZ0J,YAAarnC,KAAKqnC,YAClB9F,KAAMvhC,KAAKuhC,KACX+F,QAAStnC,KAAKsnC,QACdpF,KAAMliC,KAAKolC,aAEb,OAAQplC,KAAKolC,YACTplC,KAAK8lC,UAAUsB,cAAcpC,cAAc/C,GAC3CjiC,KAAK8lC,UAAUsB,cAAcrC,cAAc9C,IAE5CvF,MACChvB,YAAO/O,IAGL,MAFAqB,KAAK47B,OACHj9B,EAAIyiC,UAAYziC,EAAIyiC,SAASG,MAAQ5iC,EAAIyiC,SAASG,KAAK3F,OACnDj9B,KAGT89B,QACC/uB,YAAO,KACL1N,KAAKmmC,YAAa,Q,wBAxFzBhjC,K,yEAAwB,K,6BACxBA,K,wGACAA,K,kGAEAA,K,wEAAmB,M,kCACnBA,K,wEAAyB,M,2BACzBA,K,wEAAkB,M,8BAClBA,K,wEAAqB,M,kCAErBuK,K,gHAOAA,K,uGAqBAA,K,gGAOAA,K,yGAIAA,K,wGAIAA,K,gGAIAA,K,kGAKAA,K,kGAIAA,K,kqBC5BYm6B,I,SAAAA,I,UAzCf,MAAgB,kJAMNvB,WAEN,OADAtmC,KAAK8nC,aAAc,EACZ5D,EAAWrB,UACfpU,KACC/gB,YAAO,EAAGktB,WACR56B,KAAK+nC,YAAcnN,KAGtB6B,QACC/uB,YAAO,KACL1N,KAAK8nC,aAAc,KAKnBE,WAAWC,GAEjB,OADAjoC,KAAKkoC,cAAe,EACbhE,EAAWhB,KAAK+E,GACpBxZ,KACC/gB,YAAO,EAAGktB,WACR56B,KAAK+nC,YAAcnN,KAGtB6B,QACC/uB,YAAO,KACL1N,KAAKkoC,cAAe,KAKpB3B,aACNvmC,KAAK+nC,iBAAchrC,K,yBApCpBoG,K,gGACAA,K,iGACAA,K,uGACAA,K,0FAEAuK,K,qGAeAA,K,uGAeAA,K,sqBCMYy6B,Q,UA1Cf,MAAmB,6EAITC,YAAY/M,GAClBr7B,KAAKqoC,kBAAmB,EACxBnE,EAAcvmC,IAAI09B,GACf5M,KACC/gB,YAAO,gBAAiB,EAAG46B,cACzBtoC,KAAKsoC,QAAUA,KAGlB7L,QACC/uB,YAAO,oBAAqB,KAC1B1N,KAAKqoC,kBAAmB,KAKxB/E,SACFtjC,KAAKsoC,UAAYtoC,KAAKsoC,QAAQC,YAChCvoC,KAAKsoC,QAAQC,WAAY,EACzBrE,EAAcZ,OAAOtjC,KAAKsoC,QAAQjN,UAAUqB,MAC1ChvB,YAAO,KACL1N,KAAKsoC,QAAQC,WAAY,MAMzBhF,WACFvjC,KAAKsoC,SAAWtoC,KAAKsoC,QAAQC,YAC/BvoC,KAAKsoC,QAAQC,WAAY,EACzBrE,EAAcX,SAASvjC,KAAKsoC,QAAQjN,UAAUqB,MAC5ChvB,YAAO,KACL1N,KAAKsoC,QAAQC,WAAY,S,qBAlChCplC,K,6GACAA,K,yEAA8B,K,+BAE9BuK,K,oGAeAA,K,iGAWAA,K,2ECbY86B,OAZf,MACEtmC,cACElC,KAAKonC,cAAgB,IAAI1D,EACzB1jC,KAAKyoC,cAAgB,IAAIvD,EACzBllC,KAAKkhC,UAAY,IAAI2E,GAAU7lC,MAC/BA,KAAKihC,YAAc,IAAIuF,GACvBxmC,KAAK0oC,YAAc,IAAIxB,GAAYlnC,MACnCA,KAAKqmC,UAAY,IAAIwB,GACrB7nC,KAAK2oC,aAAe,IAAIR,KCbtBS,GAAoB,IAgB1B,SAASC,GAASC,EAAcC,EAAehW,EAAa9Y,GAI1D,IAHA,IAAIqH,EAAQ,EACRznB,EAAIogB,EAEDpgB,EAAIk5B,EAAIh5B,QACb,GAAe,OAAXg5B,EAAIl5B,GAAR,CAKA,GAAIk5B,EAAIl5B,KAAOkvC,GAGC,MAFdznB,EAEiB,OAAOznB,EAAI,EAG1Bk5B,EAAIl5B,KAAOivC,GACbxnB,IAGFznB,SAdEA,GAAK,EAiBT,OAAQ,EAMJ,SAAUsqB,GAAM4O,EAAatqB,G,aAAA,IAAAA,MAAA,IAUjC,IATA,IAAMugC,EAAS,GACTC,EAAoC,OAApB,EAAGxgC,EAAQygC,WAAS,EAAIN,GACxCO,EAA6B,OAApB,EAAG1gC,EAAQ0gC,WAAS,OAAIpsC,EACnClD,EAAI,EACJwE,EAAM,EACN+qC,EAAO,GACPC,GAAY,EAGTxvC,EAAIk5B,EAAIh5B,QAAQ,CACrB,IAAIo3B,EAAS,GACTt0B,EAAO,GACPysC,EAAU,GAGd,GAAe,OAAXvW,EAAIl5B,GAAR,CAOA,GAAe,MAAXk5B,EAAIl5B,GAAY,CAClB,OAASA,EAAIk5B,EAAIh5B,QAAQ,CACvB,IAAMwvC,EAAOxW,EAAIyW,WAAW3vC,GAE5B,KAEG0vC,GAAQ,IAAMA,GAAQ,IAEtBA,GAAQ,IAAMA,GAAQ,IAEtBA,GAAQ,IAAMA,GAAQ,KAEd,KAATA,GAMF,MAJE1sC,GAAQk2B,EAAIl5B,GAQXgD,GAAMhD,IAGb,GAAe,MAAXk5B,EAAIl5B,GAAY,CAClB,IAAMwyB,EAAMwc,GAAS,IAAK,IAAK9V,EAAKl5B,GAGpC,GAAIwyB,GAAO,EAAG,CAIZ,GAHAid,EAAUvW,EAAI/zB,MAAMnF,EAAI,EAAGwyB,EAAM,GACjCxyB,EAAIwyB,EAEe,MAAfid,EAAQ,GACV,MAAM,IAAInJ,UAAU,0CAGtB,GAAI,aAAapH,KAAKuQ,GAAU,CAC9B,IAAMG,EAAeH,EAAQ11B,QAAQ,aAAc,OAEnD,MAAM,IAAIusB,UACR,4EAA4EsJ,EAAY,OAOhG,GAAa,KAAT5sC,GAA2B,KAAZysC,EAAnB,CAOA,GAAIF,EAAKrvC,SAAWsvC,EAAW,CAC7B,IAAMK,EAAON,EAAKA,EAAKrvC,OAAS,KAChBovC,GAAYA,EAAUzxB,QAAQgyB,IAAS,KAGrDvY,EAASuY,EACTN,EAAOA,EAAKpqC,MAAM,GAAI,IAKtBoqC,EAAKrvC,SACPivC,EAAO3uC,KAAK+uC,GACZA,EAAO,IAGT,IAAM5c,EAAoB,MAAXuG,EAAIl5B,IAAyB,MAAXk5B,EAAIl5B,GAC/B8vC,EAAsB,MAAX5W,EAAIl5B,IAAyB,MAAXk5B,EAAIl5B,GACjCqvC,EAAY/X,GAAU8X,GAGxBzc,GAAUmd,IAAU9vC,IAExBmvC,EAAO3uC,KAAK,CACVwC,KAAMA,GAAQwB,IACd8yB,OAAM,EACN+X,UAAS,EACTS,SAAQ,EACRnd,OAAM,EACN8c,QACEA,GACA,KAAKM,GACHV,IAAcD,EACVC,EACAA,EAAYD,GACjB,aAzCHG,GAAQrW,EAAIl5B,KACZwvC,GAAY,OAxDZxvC,IACAuvC,GAAQrW,EAAIl5B,KACZwvC,GAAY,EAoGhB,OAFID,EAAKrvC,QAAQivC,EAAO3uC,KAAK+uC,GAEtBJ,EA8LT,SAASY,GAAa7W,GACpB,OAAOA,EAAInf,QAAQ,4BAA6B,QAMlD,SAASi2B,GAAMphC,GACb,OAAOA,GAAWA,EAAQqhC,UAAY,GAAK,IA4D7C,SAASC,GACPX,EACA5jC,EACAiD,GAEA,OAqCI,SACJugC,EACAxjC,EACAiD,QAAA,IAAAA,MAAA,IAmBA,IAhBE,IAAAuhC,EAAA,EAAAA,OACA,IAAA5d,aAAA,IAAQ,GAAR,EACA,IAAAC,WAAA,IAAM,GAAN,EACA,IAAA6c,iBAAA,IAAY,EAAZ,KACA,IAAAlI,cAAA,IAAS,EAAT,wBAEIjP,GAAwC,iBAArBtpB,EAAQspB,SAC7BtpB,EAAQspB,SAASQ,MAAM,IACvB9pB,EAAQspB,UAAY,IAErBprB,IAAIijC,IACJ1uB,OAAO,KACP5H,KAAK,KACJ22B,EAAQ7d,EAAQ,IAAM,GAGN,MAAA4c,EAAA,eAAQ,CAAvB,IAAMvH,EAAK,KACd,GAAqB,iBAAVA,EACTwI,GAASL,GAAa5I,EAAOS,QACxB,CACL,IAAMhM,EAAUgM,EAAMjV,OAClB,MAAMiV,EAAM6H,QAAO,OAAOM,GAAanI,EAAMyH,WAAU,MACrDzH,EAAM6H,QAAO,MAEf7H,EAAM6H,QAEN9jC,GAAMA,EAAKnL,KAAKonC,GAEhBA,EAAMkI,SACHlI,EAAMtQ,OAGT8Y,GAAS,MAAML,GAAanI,EAAMtQ,QAAO,IAAIsE,EAAO,MAFpDwU,GAAS,IAAIxU,EAAO,KAKtBwU,GAAYL,GAAanI,EAAMtQ,QAAO,IAAIsE,EAAO,KAKvD,GAAIpJ,EACG2d,IAAQC,GAAS,MAAML,GAAaV,GAAU,MAEnDe,GAAsB,MAAblY,EAAmB,IAAM,MAAMA,EAAQ,QAC3C,CACL,IAAMmY,EAAWlB,EAAOA,EAAOjvC,OAAS,GAClCowC,EACgB,iBAAbD,EACHA,EAASA,EAASnwC,OAAS,KAAOmvC,OAErBnsC,IAAbmtC,EAEDF,IACHC,GAAS,MAAML,GAAaV,GAAU,MAAMnX,EAAQ,OAGjDoY,IACHF,GAAS,MAAML,GAAaV,GAAU,IAAInX,EAAQ,KAItD,OAAO,IAAIN,OAAOwY,EAAOJ,GAAMphC,IAxGxB2hC,CAAejmB,GAAMilB,EAAM3gC,GAAUjD,EAAMiD,GAuH9C,SAAU4hC,GACdjB,EACA5jC,EACAiD,GAEA,OAAI2gC,aAAgB3X,OAtKtB,SAAwB2X,EAAc5jC,GACpC,IAAKA,EAAM,OAAO4jC,EAGlB,IAAMkB,EAASlB,EAAKmB,OAAO1X,MAAM,aAEjC,GAAIyX,EACF,IAAK,IAAIzwC,EAAI,EAAGA,EAAIywC,EAAOvwC,OAAQF,IACjC2L,EAAKnL,KAAK,CACRwC,KAAMhD,EACNs3B,OAAQ,GACR+X,UAAW,GACXS,UAAU,EACVnd,QAAQ,EACR8c,QAAS,KAKf,OAAOF,EAoJEoB,CAAepB,EAAM5jC,GAG1B9D,MAAM+E,QAAQ2iC,GAjJpB,SACEqB,EACAjlC,EACAiD,GAEA,IAAM6X,EAAQmqB,EAAM9jC,KAAI,SAAAyiC,GAAQ,OAAAiB,GAAajB,EAAM5jC,EAAMiD,GAAzB,UAChC,OAAO,IAAIgpB,OAAO,MAAMnR,EAAMhN,KAAK,KAAI,IAAKu2B,GAAMphC,IA4IzCiiC,CAActB,EAAM5jC,EAAMiD,GAG5BshC,GAAeX,EAAM5jC,EAAMiD,GCljBpC,MACMhC,GAAU/E,MAAM+E,QAETjB,GAAOxL,OAAOwL,KAEdkW,GAAQ7P,GACnBA,EACIpF,GAAQoF,GACNA,EAAI7M,MAAM,GACV2rC,GAAO,GAAI9+B,GACbA,EAEO++B,GAAO,CAAC/+B,EAAKg/B,IACxBA,EAAMC,OAAO,CAACC,EAAKjlB,SACH/oB,IAAd8O,EAAIia,GACAilB,EAfM,EAACl/B,EAAKia,EAAMtN,KAAU3M,EAAIia,GAAQtN,EAAY3M,GAgBpDm/B,CAAMD,EAAKjlB,EAAMja,EAAIia,IAAQ,IAExBmlB,GAAU,CAACC,EAAMC,KAC5B,MAAMC,EAAQ5lC,GAAK0lC,GACnB,OAAOE,EAAMrxC,SAAWyL,GAAK2lC,GAAMpxC,QACjCqxC,EAAMC,MAAMhtC,GAAO8sC,EAAK9sC,KAAS6sC,EAAK7sC,KAG7BssC,GAAS3wC,OAAOkM,OCxBd,SAASxG,GAAW4rC,EAAWC,KAAWnlC,GACvD,IAAKklC,EAAW,CACd,IAAIE,EAAW,EACf,MAAM,IAAItvC,MACR,wBACAqvC,EAAO33B,QAAQ,MAAO,IAAMxN,EAAKolC,QCFvC,MAAMC,GAAqB,sCACrBC,GAAoB,UACpBC,GAAe,SAEfC,GAAoB,GAE1B,SAASC,GAAgBvC,GACvB,KAAMA,KAAWsC,IAAoB,CACnC,MAAME,EAAa,GACbC,EAAK1B,GAAaf,EAASwC,GAEjCF,GAAkBtC,GAAW,CAC3B0C,QAASD,EACTD,WAAYA,EAAWnlC,IAAI5K,GAAKA,EAAEc,OAItC,OAAO+uC,GAAkBtC,GAuEpB,SAAS2C,GAAcC,EAAI9C,GAChC,MAAMvW,EAAQuW,EAAKvW,MAAM8Y,IACzB,OAAO9Y,GAASqZ,EAAG/nB,MAAM0O,EAAM,IAoB1B,SAASsZ,GAAc/C,GAC5B,OAAOA,EAAKx1B,QAAQ+3B,GAAc,ICxG7B,SAASS,GAAWrd,EAAItyB,EAAMuR,GAEnC,OADA+gB,EAAGwB,iBAAiB9zB,EAAMuR,GACnBA,EAaF,SAASq+B,GAAatd,EAAItyB,EAAMuR,GAErC,OADA+gB,EAAGiG,oBAAoBv4B,EAAMuR,GACtBA,ECPT,MAAMs+B,GACJ,cACEtsC,KAAKusC,SAAW,GAChBvsC,KAAKwsC,SAAWxsC,KAAKwsC,SAASluC,KAAK0B,MACnCA,KAAKysC,SAAW3tC,OAAO2tC,SACvBzsC,KAAK0sC,QAAU5tC,OAAO4tC,QAKxB,SACE,OAAO1sC,KAAKysC,SAASE,SAAS/4B,QAAQ,SAAU,SAAW5T,KAAK03B,KAKlE,UACE,MAAM7E,EAAQ7yB,KAAKysC,SAASG,KAAK/Z,MAAM,UACvC,OAAOA,EAAQA,EAAM,GAAK,GAK5B,YAAYnF,EAAUmf,GACpB,GAAgB,MAAZnf,EACF,GAAI1tB,KAAK8sC,gBAAkB9sC,KAAK+sC,kBAAoBF,EAAgB,CAClEnf,EAAWsf,UAAUhtC,KAAKysC,SAASE,SAAW3sC,KAAKysC,SAASQ,QAC5D,MAAMvV,EAAO13B,KAAK03B,KAAK9jB,QAAQs5B,GAAe,IACzCxf,EAAShW,QAAQggB,KAAOhK,EAAWA,EAAS1uB,MAAM04B,EAAK39B,cAE5D2zB,EAAW1tB,KAAKmtC,UAGpB,OAAOzf,EAAS9Z,QAAQw5B,GAAe,IAKzC,MAAM3kC,EAAU,IAIdzI,KAAKqtC,SAAU,EAIfrtC,KAAKyI,QAAmBkiC,GAAO,CAACjT,KAAM,KAAMjvB,GAC5CzI,KAAKysC,SAAmBzsC,KAAKyI,QAAQgkC,UAAYzsC,KAAKysC,SACtDzsC,KAAK0sC,QAAmB1sC,KAAKyI,QAAQikC,SAAW1sC,KAAK0sC,QACrD1sC,KAAK03B,KAAmB13B,KAAKyI,QAAQivB,KACrC13B,KAAK+sC,kBAA+C,IAA5B/sC,KAAKyI,QAAQ6kC,WACrCttC,KAAKutC,kBAAqBvtC,KAAKyI,QAAQ+kC,UACvCxtC,KAAK8sC,cAAmB9sC,KAAKutC,gBAC7B,MAAM7f,EAAkB1tB,KAAKytC,cAG7BztC,KAAK03B,KAAS,IAAG13B,KAAK03B,QAAS9jB,QAAQ85B,GAAc,KAIrDtB,GAAUttC,OAAQkB,KAAK8sC,cAAgB,WAAa,aAAc9sC,KAAKwsC,UAIvExsC,KAAK0tB,SAAWA,EAChB,MAAMigB,EAAM3tC,KAAKysC,SAIjB,GAAIzsC,KAAK+sC,kBAAoB/sC,KAAKutC,gBAAiB,CAIjD,IAAKvtC,KAAK8sC,gBAAkB9sC,KAAK4tC,SAI/B,OAHA5tC,KAAK0tB,SAAW1tB,KAAKytC,YAAY,MAAM,GACvCztC,KAAKysC,SAAS74B,QAAS,GAAE5T,KAAK03B,QAAQ13B,KAAK0tB,aAEpC,EAIE1tB,KAAK8sC,eAAiB9sC,KAAK4tC,UAAYD,EAAIE,OACpD7tC,KAAK0tB,SAAW1tB,KAAKmtC,UAAUv5B,QAAQw5B,GAAe,IACtDptC,KAAK0sC,QAAQoB,aAAa,GAAItyC,SAASmiC,MAAO39B,KAAK03B,KAAO13B,KAAK0tB,WAKnE,IAAK1tB,KAAKyI,QAAQslC,OAAQ,OAAO/tC,KAAKguC,UAKxC,OACE3B,GAAYvtC,OAAQkB,KAAK8sC,cAAgB,WAAa,aAAc9sC,KAAKwsC,UACzExsC,KAAKqtC,SAAU,EAKjB,MAAMpD,EAAO9sB,GACXnd,KAAKusC,SAAS/wB,QAAQ,CAACyuB,QAAO9sB,aAKhC,WAEE,GADgBnd,KAAKytC,gBACLztC,KAAK0tB,SAAU,OAAO,EACtC1tB,KAAKguC,UAMP,QAAQtgB,GAEN,OADAA,EAAW1tB,KAAK0tB,SAAW1tB,KAAKytC,YAAY/f,GACrC1tB,KAAKusC,SAAS0B,KAAKt+B,IACxB,GAAIA,EAAQs6B,MAAMlR,KAAKrL,GAErB,OADA/d,EAAQwN,SAASuQ,IACV,IAYb,OAAOA,EAAUjlB,GACf,IAAKzI,KAAKqtC,QAAS,OAAO,EACrB5kC,IAAuB,IAAZA,IAAkBA,EAAU,CAACylC,UAAWzlC,IAExD,IAAIwvB,EAAMj4B,KAAK03B,MAAQhK,EAAW1tB,KAAKytC,YAAY/f,GAAY,KAK/D,GAFAA,EAAWA,EAAS9Z,QAAQu6B,GAAc,IAEtCnuC,KAAK0tB,WAAaA,EAAtB,CAOA,GANA1tB,KAAK0tB,SAAWA,EAGC,KAAbA,GAA2B,MAARuK,IAAaA,EAAMA,EAAIj5B,MAAM,GAAI,IAGpDgB,KAAK8sC,cACP9sC,KAAK0sC,QAAQjkC,EAAQmL,QAAU,eAAiB,aAAa,GAAIpY,SAASmiC,MAAO1F,OAI5E,KAAIj4B,KAAK+sC,iBAKd,OAAO/sC,KAAKysC,SAASvmC,OAAO+xB,GAJ5Bj4B,KAAKouC,YAAYpuC,KAAKysC,SAAU/e,EAAUjlB,EAAQmL,SAMpD,OAAInL,EAAQylC,QAAgBluC,KAAKguC,QAAQtgB,QAAzC,GAKF,YAAY+e,EAAU/e,EAAU9Z,GAC9B,GAAIA,EAAS,CACX,MAAMg5B,EAAOH,EAASG,KAAKh5B,QAAQ,qBAAsB,IACzD64B,EAAS74B,QAAS,GAAEg5B,KAAQlf,UAG5B+e,EAASoB,KAAQ,IAAGngB,IAOxB,SAASvQ,GACPnd,KAAKiqC,MAAM,UAAW9sB,GAIxB,eAEE,IAAKnd,KAAKqtC,QACR,MAAM,IAAInxC,MAAM,4CAElB,OAAO8D,KAAK8sC,eAKhB,MAAMM,GAAgB,eAGhBM,GAAe,aAGfR,GAAgB,MAGhBiB,GAAe,OC3NrB,MAAME,GACJ,YAAa5lC,EAAU,IACrBzI,KAAKopC,KAAO3gC,EAAQ2gC,MAAQ,GAE5BppC,KAAKyI,QAAUkiC,GAAO,CACpB6C,WAAW,EACX9V,KAAM,KACLjvB,GAIHzI,KAAKsuC,YAAc,IAAIC,GACvBvuC,KAAKsuC,YAAYE,SAASpF,IACxBppC,KAAKyuC,UAAW,IAAGrF,GAAQ,QAG7BppC,KAAKsuC,YAAYliB,MAAM3jB,GAOzB,SACE,OAAOzI,KAAKopC,KAQd,OAAQA,EAAM3gC,EAAU,IAClBzI,KAAKopC,OAASA,IAChBppC,KAAKopC,KAAOA,EACZppC,KAAKsuC,YAAYtmB,OAAOohB,EAAMuB,GAAO,CAAEuD,SAAS,GAAQzlC,KAS5D,WAAY2gC,EAAM3gC,EAAU,IACtBzI,KAAKopC,OAASA,IAChBppC,KAAKopC,KAAOA,EACZppC,KAAKsuC,YAAYtmB,OAAOohB,EAAMuB,GAAO,CAAEuD,SAAS,EAAMt6B,SAAS,GAAQnL,KAQ3E,SAAU0U,GACRnd,KAAK0uC,eAAiBvxB,EAOxB,UAAWisB,GACT,GAAIppC,KAAKsuC,YAAYK,eAAgB,CACnC,IAAIC,EAAU5uC,KAAKyI,QAAQivB,KAI3B,MAHa,KAAT0R,IACFwF,EAAUA,EAAQh7B,QAAQ,MAAO,KAE5Bg7B,EAAUxF,EAKjB,MAHgB,MAAZA,EAAK,KACPA,EAAOA,EAAKpS,OAAO,IAEb,IAAGoS,IAYf,WAAYnR,GACV,OAAIj4B,KAAKyI,QAAQ+kC,WAAaxtC,KAAKyI,QAAQivB,MAA8B,MAAtB13B,KAAKyI,QAAQivB,KACvDO,EAAIrkB,QAAQ5T,KAAKyI,QAAQivB,KAAM,IAE/BO,EAOX,UACEj4B,KAAKsuC,YAAYO,OAYnB,UAAW5W,GACTj4B,KAAKopC,KAAOnR,EACRj4B,KAAK0uC,gBACP1uC,KAAK0uC,eAAezW,IClH1B,MAAM6W,GACJ,aAAa,KAAE1F,IACbppC,KAAKopC,KAAOA,GAAQ,GAGtB,SACE,OAAOppC,KAAKopC,KAGd,OAAQA,EAAM3gC,GACRzI,KAAKopC,OAASA,IAChBppC,KAAKopC,KAAOA,EACZppC,KAAKyuC,UAAUzuC,KAAK+uC,SAAUtmC,IAIlC,WAAY2gC,EAAM3gC,GACZzI,KAAKopC,OAASA,GAChBppC,KAAKgvC,OAAO5F,EAAM3gC,GAItB,SAAU0U,GACRnd,KAAK0uC,eAAiBvxB,EAGxB,UAAW8a,EAAKxvB,EAAU,IACxBzI,KAAKopC,KAAOnR,EACZxvB,EAAUkiC,GAAO,CAAEuD,SAAS,GAAQzlC,GAChCzI,KAAK0uC,gBAAkBjmC,EAAQylC,SACjCluC,KAAK0uC,eAAezW,GAIxB,WAAYA,GACV,OAAOA,EAGT,UAAWA,GACT,OAAOA,GCzCJ,MAAMgX,GAAwB,uBAExBC,GAAuB,sBCGpC,SAASC,GAAUC,EAAQC,EAAY1wC,GACrCywC,EAAOE,WAAW/tC,QAASnE,IACzBA,EAAEnB,OAASmB,EAAEnB,MAAMozC,EAAY1wC,KAIpB,SAAS0wC,GAAY5mC,GAGlC,MAAM2mC,GAFN3mC,EAAUA,GAAW,IAEE2mC,OACjBp8B,EAAMo8B,EAAOp8B,IACbu8B,EAAWH,EAAOG,SAElBnG,EAAO3gC,EAAQ2gC,KACfvW,EAAQpqB,EAAQoqB,MAChB2c,EAAS3c,EAAM2c,OACf3O,EAAShO,EAAMgO,OACf8L,EAAW9Z,EAAM8Z,SACjBrM,EAAQzN,EAAMyN,MAEdqF,EAAKl9B,EAAQk9B,GACbt3B,EAAYohC,KAAKC,MAQvB,IAAIt0C,EAASC,EAPb2X,EAAI,OACJA,EAAI,eAAiB2yB,EAAI,KAAMyD,GAC/Bp2B,EAAI,eAAiB2yB,EAAI,UAAW6J,EAAO7oC,IAAI/I,GAAKA,EAAEf,OACtDmW,EAAI,eAAiB2yB,EAAI,UAAW9E,GACpC7tB,EAAI,eAAiB2yB,EAAI,SAAUrF,GAInC,MAAMplC,EAAU,IAAIC,SAAQ,SAAUoM,EAAKmgB,GACzCtsB,EAAUmM,EACVlM,EAASqsB,KAOXxsB,EAAQuzB,MAAK,WACXzb,EAAI,eAAiB2yB,EAAI,eAAiB8J,KAAKC,MAAQrhC,EAAa,SACnEquB,OAAM,SAAU/9B,GACbA,EAAIlC,OAASwyC,IAAyBtwC,EAAIlC,OAASyyC,KACrDl8B,EAAI,eAAiB2yB,EAAI,UACzB4J,EAAS5wC,OAIb,IAAIgxC,GAAY,EAEhB,MAAMN,EAAa,CACjB1J,GAAIA,EACJr8B,KAAM,CACJkmC,OAAQ9zB,GAAM0zB,EAAOQ,MAAMJ,SAAW,GACtCpG,KAAMgG,EAAOQ,MAAMxG,MAAQ,GAC3BuD,SAAUyC,EAAOQ,MAAMjD,UAAY,GACnC9L,OAAQnlB,GAAM0zB,EAAOQ,MAAM/O,SAAW,GACtCP,MAAO5kB,GAAM0zB,EAAOQ,MAAMtP,QAAU,IAEtCkP,OAAQ9zB,GAAM8zB,GACdpG,KAAMA,EACNuD,SAAUA,EACV9L,OAAQnlB,GAAMmlB,GACdP,MAAO5kB,GAAM4kB,GACbuP,WAAY,YAAazpC,GACvB,OAAOgpC,EAAOU,gBAAgB1pC,IAEhC2pC,MAAO,WACL,OAAOX,EAAOU,aAAa1G,IAE7B4G,OAAQ,SAAUrxC,GACZywC,EAAOQ,MAAMK,mBAAqBZ,IAIlCA,EAAWa,cAIfd,EAAOQ,MAAMK,iBAAmB,KAChCZ,EAAWa,aAAc,EACzBP,GAAY,EAEPhxC,KACHA,EAAM,IAAIzC,MAAMgzC,KACZzyC,KAAOyyC,IAETvwC,EAAIlC,OAASyyC,IACfl8B,EAAI,eAAiB2yB,EAAI,aAEvBhnC,EAAIlC,OAASwyC,IACfj8B,EAAI,eAAiB2yB,EAAI,cAG3ByJ,EAAOE,WAAW/tC,QAASnE,IACzBA,EAAE4yC,QAAU5yC,EAAE4yC,OAAOX,EAAY1wC,KAEnCtD,EAAOsD,MAETwxC,gBAAiB,WACf,OAAOj1C,EAAQwhC,OAAM,SAAUC,GAC7B,OAAIyS,EAAOQ,MAAMK,iBACRb,EAAOQ,MAAMK,iBAAiBE,kBAEhCh1C,QAAQE,OAAOshC,OAI1BlO,KAAMvzB,EAAQuzB,KAAKnwB,KAAKpD,GACxBwhC,MAAOxhC,EAAQwhC,MAAMp+B,KAAKpD,IAiE5B,OA9DAk0C,EAAOE,WAAW/tC,QAASnE,IACzBA,EAAEg5B,QAAUh5B,EAAEg5B,OAAOiZ,KAmDlB5mC,EAAQvI,KAGX9E,IAFAD,QAAQC,UAAUqzB,KAAK,KAhDzB,SAAS2hB,EAAUv2C,EAAGw2C,GACpB,IAAIf,EACAgB,EAEJ,IAAIX,EAIJ,GAAI91C,EAAIu1C,EAAOE,WAAWv1C,OAAQ,CAIhC,IAAIw2C,EAHJjB,EAAaF,EAAOE,WAAWz1C,GAC/By2C,EAAiBhB,EAAWzyC,MAAQ,YACpCmW,EAAI,eAAiB2yB,EAAI,wBAAyB2K,GAElD,IACEC,EAAoBjB,EAAWl0C,QAAUk0C,EAAWl0C,QAAQi0C,EAAYgB,GAAcA,EACtF3wC,GAAU2vC,IAAekB,EAAmB,mEAAoED,GAChH,MAAO3xC,GAGP,OAFAywC,EAAOQ,MAAMK,iBAAmB,KAChCd,GAASC,EAAQC,EAAY1wC,GACtBtD,EAAOsD,GAEhBxD,QAAQC,QAAQm1C,GACb9hB,MAAK,SAAUzhB,GACdojC,EAASv2C,EAAI,EAAGmT,MAEjB0vB,OAAM,SAAU/9B,GACfqU,EAAI,eAAiB2yB,EAAI,wBAAyB2K,EAAgB,UAClElB,EAAOQ,MAAMK,iBAAmB,KAChCd,GAASC,EAAQC,EAAY1wC,GAC7BtD,EAAOsD,WAGXywC,EAAOQ,MAAQ,CACbK,iBAAkB,KAClBT,SACApG,OACAuD,WACA9L,SACAP,SAEF8O,EAAOE,WAAW/tC,QAASnE,IACzBA,EAAE4f,MAAQ5f,EAAE4f,KAAKqyB,KAEnBj0C,KAK2Bg1C,CAAS,IAKpC3nC,EAAQvI,OACVmvC,EAAWnvC,MAAO,GAGbmvC,ECnLM,SAASmB,GAAcpB,EAAQlW,EAAQlrB,IACzC,IAAPA,IACJohC,EAAOlW,GAAwB,mBAAPlrB,EAAoBA,EAAK,QCFnD,OAAe,CACbmW,MAAOssB,GACEA,EAAYle,MAAM,KAAKuY,OAAO,CAACC,EAAKpS,KACzC,MAAMrY,EAAQqY,EAAKpG,MAAM,KAEzB,OADAwY,EAAIzqB,EAAM,IAAMsY,mBAAmBtY,EAAM,IAClCyqB,GACN,IAGL9mB,UAAW4c,GACF7mC,OAAOwL,KAAKq7B,GAAQiK,OAAO,CAACC,EAAK1sC,UAClBtB,IAAhB8jC,EAAOxiC,IACT0sC,EAAI1wC,KAAKgE,EAAM,IAAMk6B,mBAAmBsI,EAAOxiC,KAE1C0sC,GACN,IAAIz3B,KAAK,MCFhB,MAAMo9B,GACJ,YAAajoC,EAAU,IACrBzI,KAAK2wC,OAAS,EACd3wC,KAAK4vC,MAAQ,GACb5vC,KAAKsvC,WAAa,GAClBtvC,KAAKyI,QAAUkiC,GAAO,CACpB8B,SAAU,UACV8C,UAAU,EACVrD,OACCzjC,GACH+nC,GAAaxwC,KAAM,MAAOA,KAAKyI,QAAQuK,KACvCw9B,GAAaxwC,KAAM,WAAYA,KAAKyI,QAAQ8mC,UACxC9mC,EAAQ+mC,QACVxvC,KAAK2G,IAAI8B,EAAQ+mC,QAUrB,IAAKF,EAAY7mC,EAAU,IACzB,MAAMrL,EAA0B,mBAAfkyC,EAA4B,CAAEl0C,QAASk0C,GAAeA,EAGvE,MAFsB,iBAAf7mC,EAAQmoC,GAAkB5wC,KAAKsvC,WAAWh6B,OAAO7M,EAAQmoC,GAAI,EAAGxzC,GAAK4C,KAAKsvC,WAAWj1C,KAAK+C,GACjGA,EAAEgB,QAAUhB,EAAEgB,OAAO4B,MACdA,KAST,IAAKwvC,GAEHxvC,KAAKwvC,OAAS9tC,MAAM+E,QAAQ+oC,GClDjB,SAASqB,EAAUrB,GAChC,MAAMxiC,EAAS,GAiBf,OAfAwiC,EAAOjuC,QAAQ,EAAG1E,OAAMi0C,cAAaroC,MACnC,GAA4B,iBAAjBA,EAAQ2gC,KAAmB,CACpC,MAAM9oB,EAAQzjB,EAAK01B,MAAM,KACzB9pB,EAAQ2gC,KAAO9oB,EAAMA,EAAMvmB,OAAS,GAEtCiT,EAAO3S,KACL,CACEwC,OACAusC,KAAM3gC,EAAQ2gC,KACd3gC,UACA+mC,OAAQsB,EAAWD,EAASC,GAAY,OAKvC9jC,EDgCiC6jC,CAASrB,GEhDpC,SAAsBryB,GACnC,IAAI4zB,EAAY,GAChB,MAAMC,EAAU,GACVC,EAAQ,GAwCd,SAASn8B,IACP,OAAOk8B,EAAQE,MAAmB,GAGpC,SAAS72C,EAAM4vC,GACb,MAAMkH,EAAQD,IACdF,EAAQG,GAASH,EAAQG,IAAU,GACnCH,EAAQG,GAAO92C,KAAK4vC,GAGtB,SAASiH,IACP,OAAOH,EAAUz9B,KAAK,KAGxB,OApDA6J,GAAS,SAAgBtgB,EAAM4L,EAAS2oC,GACtC,IAAI5B,EAeJ,GAbA9vC,IAAWuxC,EAAMp0C,GAAO,wEAAyEA,GAEjGo0C,EAAMp0C,IAAQ,EAEW,IAArBoD,UAAUlG,SACZ0O,EAAU,IAGa,IAArBxI,UAAUlG,QAAmC,mBAAZ0O,IACnC2oC,EAAmB3oC,EACnBA,EAAU,IAGgB,iBAAjBA,EAAQ2gC,KAAmB,CACpC,MAAM9oB,EAAQzjB,EAAK01B,MAAM,KACzB9pB,EAAQ2gC,KAAO9oB,EAAMA,EAAMvmB,OAAS,GAIlCq3C,IACFL,EAAYA,EAAU71B,OAAOre,GAC7Bu0C,IACA5B,EAAS16B,IACTi8B,EAAUz7B,QAAQ,IAIpBjb,EAAK,CACHwC,KAAMA,EACNusC,KAAM3gC,EAAQ2gC,KACdoG,OAAQA,GAAU,GAClB/mC,QAASA,OAkBNqM,IFToDu8B,CAAY7B,GAIrE,MAAM8B,EAAWtxC,KAAKsxC,SAAW,GAG3BC,EAAQ,GAERC,EAAY,GAgElB,OAVA,SAASC,EAAY9+B,EAAM++B,EAAM1jC,GAC/B2E,EAAK68B,OAAOjuC,QAAQ0oC,IAClBj8B,EAAG0jC,EAAKx2B,OAAO+uB,IAEXA,EAAMuF,OAAOz1C,QACf03C,EAAWxH,EAAOyH,EAAKx2B,OAAO+uB,GAAQj8B,KAzD5CyjC,CAAW,CAAEjC,OAAQxvC,KAAKwvC,QAAU,GAAIA,IAEtC,IAAIpG,EAAOoG,EAAO1E,OAAO,CAAC4G,EAAM9zC,KAEf,MAAdA,EAAEwrC,KAAK,GAAaxrC,EAAEwrC,KAAQ,GAAEsI,KAAQ9zC,EAAEwrC,QAAQx1B,QAAQ,MAAO,IAAK,IAE5D,KAATw1B,IACFA,EAAO,KAGT,MAAMuI,EAAYnC,EAAOA,EAAOz1C,OAAS,GAEzC,GAAI43C,EAAUlpC,QAAQmpC,SACpBJ,EAAUpI,GAAQuI,EAAU90C,SAD9B,CAKA,GAAuB,KAAnB80C,EAAUvI,KAAa,CACzB,IAAI4C,EACJsF,EAASrD,KAAK7wC,IACZ,GAAIA,EAAEgsC,OAASA,EAEb,OADA4C,EAAU5uC,GACH,IAIP4uC,EAEFA,EAAQwD,OAASA,EACRgC,EAAUpI,IACnBkI,EAASj3C,KAAK,CACZm1C,SACA3yC,KAAM20C,EAAUpI,GAChBA,SAaN,GAPAkI,EAASj3C,KAAK,CACZm1C,SACA3yC,KAAM80C,EAAU90C,KAChBusC,SAIEmI,EAAMnI,IAA4B,KAAnBuI,EAAUvI,KAC3B,MAAM,IAAIltC,MAAO,UAASq1C,EAAMnI,UAAauI,EAAU90C,gCAAgCusC,MAEzFmI,EAAMnI,GAAQuI,EAAU90C,QAanBmD,KAUT,OAAQopC,GACN,MAAMqD,EAAWzsC,KAAKysC,SAAWzsC,KAAK6xC,eAAezI,GAAQ,IAa7D,OAXAqD,EAAS+B,SAAUvW,IACjB,MAAM6Z,EAAc9xC,KAAK4vC,MAAMxG,KAC/BppC,KAAK+xC,SAAS9Z,GAAKyE,MAAO/9B,IACpBA,GAAOA,EAAIlC,OAASyyC,IAEtBlvC,KAAKysC,SAASuF,WAAWF,EAAa,CAAE5D,SAAS,IAE5CvvC,MAIJqB,KAAK+xC,SAAStF,EAASsC,UAYhC,aAAclyC,EAAMgkC,EAAQP,GAC1B,OAAItgC,KAAK4vC,MAAMK,iBACNjwC,KAAKiyC,YAAYp1C,EAAMgkC,EAAQP,GAEjCtgC,KAAKkyC,aAAa,SAAUr1C,EAAMgkC,EAAQP,GAanD,YAAazjC,EAAMgkC,EAAQP,GACzB,OAAOtgC,KAAKkyC,aAAa,aAAcr1C,EAAMgkC,EAAQP,GAYvD,SAAUzjC,EAAMgkC,EAAQP,GAEtB,IAAI0L,EAUJ,GAXAtsC,GAAUM,KAAKysC,SAAU,2CAGzBnM,EAAQA,GAAS,GAEjBtgC,KAAKsxC,SAAS/vC,QAAQnE,IAChBA,EAAEP,OAASA,IACbmvC,EAAU5uC,MAIT4uC,EACH,MAAM,IAAI9vC,MAAO,qBAAoBW,KAGvC,MAAMo7B,ET1GH,SAAoBiU,EAAI9C,EAAM9I,GACnC,MAAM6R,EAAcjG,EAAGjoB,UAAUqc,EAAO,CAAE8R,SAAS,IAEnD,OAAID,EACKhG,GAAa/C,GAAQ,IAAM+I,EAG7B/I,ESmGOiJ,CAAUryC,KAAKyI,QAAQyjC,GTpJhC,SAAuB5C,EAASzI,GAGrC,OAFAA,EAASA,GAAU,GAEZyI,EAAQ11B,QAAQ63B,IAAoB,SAAU5Y,EAAOyf,GAC1D,MAAMC,EAAYD,EAAM1+B,QAAQ83B,GAAmB,IAC7C8G,EAAWF,EAAMtzC,OAAO,GAG9B,GAAiB,MAAbwzC,GAAiC,MAAbA,GACtB,GAAyB,MAArB3R,EAAO0R,GACT,MAAO,QAGT7yC,GACuB,MAArBmhC,EAAO0R,GACP,uCACAA,EAAWjJ,GAIf,IAAImJ,EAAala,mBAAmBsI,EAAO0R,IAK3C,MAJiB,MAAbC,GAAiC,MAAbA,IAEtBC,EAAaA,EAAW7+B,QAAQ,MAAO,MAElC6+B,KS2HgCC,CAAa1G,EAAQ5C,KAAMvI,GAASP,GAC3E,OAAOtgC,KAAKysC,SAASkG,UAAU1a,GAOjC,UACMj4B,KAAKysC,UAAYzsC,KAAKysC,SAASmG,SACjC5yC,KAAKysC,SAASmG,UAEZ5yC,KAAK4vC,MAAMK,kBACbjwC,KAAK4vC,MAAMK,iBAAiBD,SAE9BhwC,KAAK4vC,MAAQ,GACb5vC,KAAKsvC,WAAW/tC,QAAQnE,IACtBA,EAAEw1C,SAAWx1C,EAAEw1C,QAAQ5yC,QAa3B,SAAUnD,EAAMgkC,EAAQP,EAAOuS,GAC7B,MAAMC,EAAe9yC,KAAK4vC,MAAMJ,QAAU,GACpCuD,EAAe/yC,KAAK4vC,MAAM/O,OAC1BmS,EAAchzC,KAAK4vC,MAAMtP,MAE/B,IAAI2S,EAAWH,EAAa7E,KAAKhE,GAASA,EAAMptC,OAASA,MACrDg2C,GAASC,EAAaA,EAAa/4C,OAAS,GAAG8C,OAASA,GAI5D,OAHAo2C,EAAWA,KAAcpS,GAAUr7B,GAAKq7B,GAAQwK,MAAMhtC,GAAO00C,EAAa10C,KAASwiC,EAAOxiC,KAC1F40C,EAAWA,KAAc3S,GAAS96B,GAAK86B,GAAO+K,MAAMhtC,GAAO20C,EAAY30C,KAASiiC,EAAMjiC,KAE/E40C,EAMT,aAAc/Z,EAAQr8B,EAAMgkC,EAAQP,GAClC,MAAMwR,EAAc9xC,KAAKysC,SAASsC,SAElC,IAAI9W,EAAMp7B,EACK,MAAXo7B,EAAI,KACNA,EAAMj4B,KAAKkzC,SAASr2C,EAAMgkC,EAAQP,GAClCrI,EAAMA,EAAIrkB,QAAQ,KAAM,MAGtB5T,KAAKyI,QAAQ+kC,YACfvV,EAAMj4B,KAAKysC,SAAS0G,WAAWlb,IAGjC,MAAMoX,EAAarvC,KAAK+xC,SAAS9Z,GAYjC,OAVAoX,EAAW3S,MAAO/9B,IACZA,GAAOA,EAAIlC,OAASyyC,IAEtBlvC,KAAKysC,SAASuF,WAAWF,EAAa,CAAE5D,SAAS,IAE5CvvC,IAGTqB,KAAKysC,SAASvT,GAAQjB,EAAK,CAAEiW,SAAS,IAE/BmB,EAUT,MAAOjG,GAEL,IAAIvI,EADJuI,GAAQA,GAAQ,IAAIx1B,QAAQ,MAAO,KAAO,IAE1C,IAAI47B,EAAS,GACb,MAAM4D,EAAmBjH,GAAa/C,GAChC8C,EAAKlsC,KAAKyI,QAAQyjC,GAQxB,OAPAlsC,KAAKsxC,SAASrD,KAAKjC,IAEjB,GADAnL,ETnQC,SAAwByI,EAASF,GACtC,MAAMiK,EAAKxH,GAAevC,GACpB0C,EAAUqH,EAAGrH,QACbF,EAAauH,EAAGvH,WAChBjZ,EAAQuW,EAAKvW,MAAMmZ,GAEzB,IAAKnZ,EACH,OAAO,KAGT,MAAMgO,EAAS,GAMf,OAJAiL,EAAWvqC,SAAQ,SAAUgxC,EAAWt4B,GACtC4mB,EAAO0R,GAAa1f,EAAM5Y,EAAQ,IAAM2e,mBAAmB/F,EAAM5Y,EAAQ,OAGpE4mB,ESmPMyS,CAActH,EAAQ5C,KAAMgK,GACjCvS,EAEF,OADA2O,EAASxD,EAAQwD,QACV,IAGJ,CACLA,OAAQA,EAAO7oC,KAYjB,SAAqBsjC,GACnB,MAAO,CACLptC,KAAMotC,EAAMptC,KACZusC,KAAMa,EAAMb,KACZvI,OAAQ+J,GAAK/J,GTnScyI,ESmSYW,EAAMb,KTlS5CyC,GAAevC,GAASwC,aSmSzBrjC,QAASiT,GAAMuuB,EAAMxhC,UTpStB,IAA4B6gC,KSoR7BzI,OAAQA,GAAU,GAClB8L,SAAUyG,EACV9S,MAAO2L,GAAaC,EAAI9C,IAAS,IAmBrC,SAAUA,GACR,MAAMvW,EAAQ7yB,KAAK6yB,MAAMuW,GACnB9I,EAAQzN,EAAMyN,MACdqM,EAAW9Z,EAAM8Z,SAEjBsD,EAAmBjwC,KAAK4vC,MAAMK,iBAIpC,GAAIA,GACAA,EAAiBtD,WAAaA,GAC9B1B,GAAQgF,EAAiB3P,MAAOA,GAClC,OAAO2P,EAKT,GAAIA,EAAkB,CACpB,MAAMtxC,EAAM,IAAIzC,MAAM+yC,IACtBtwC,EAAIlC,KAAOwyC,GACXtwC,EAAI40C,SAAWnK,EACf6G,EAAiBD,OAAOrxC,GAO1B,IAAKsxC,GACCjwC,KAAK4vC,MAAMjD,WAAaA,GACxB1B,GAAQjrC,KAAK4vC,MAAMtP,MAAOA,GAC5B,OAAO+O,GAAW,CAChB1J,GAAI3lC,KAAK2wC,SACTvH,OACAvW,QACA3yB,MAAM,EACNkvC,OAAQpvC,OAKd,MAAMhC,EAAIqxC,GAAW,CACnB1J,GAAI3lC,KAAK2wC,SACTvH,OACAvW,QACAuc,OAAQpvC,OAKV,OAFAA,KAAK4vC,MAAMK,iBAAmBjyC,EAEvBA,EAWT,eAAgBorC,GACd,MAAMqD,EAAWzsC,KAAKyI,QAAQgkC,SAC9B,GAAwB,iBAAbA,EACT,OAAOA,EAET,GAAiB,YAAbA,EACF,OAAO,IAAI4B,GAAgBzD,GAAK5qC,KAAKyI,QAAS,CAAC,YAAa,UACvD,GAAiB,WAAbgkC,EACT,OAAO,IAAIqC,GAAe,CAAE1F,SAE5B,MAAM,IAAIltC,MAAM,kEAIpB,OAAQkK,GACNxH,QAAQ40C,QAAQptC,GAGlB,YAAaA,GACXxH,QAAQ3C,SAASmK,IGnZrB,MAAMioB,GAAWlzB,QAAQC,UACzB,IAEIg0C,GAAQqE,GAAYC,GAFpBC,GAAa35C,OAAOoE,OAAO,MAC3Bw1C,GAAoB55C,OAAOoE,OAAO,MAStC,MAAMy1C,GACJ3xC,YAAa7D,EAAKktC,GAChBvrC,KAAK3B,IAAMA,EACX2B,KAAKurC,OAASA,EAGhBxtC,MAAOsxC,GACL,IAAIriC,EAAShN,KAAK8zC,SAASzE,GAC3B,QAAetyC,IAAXiQ,EAAsB,CACxB,MAAMu+B,EAASvrC,KAAKurC,OACL,WAAXA,EACFv+B,EAjBR,SAAsBjP,GACpB,MAAMQ,EAAIw1C,WAAWh2C,GAErB,OADkBA,GAASQ,EACRA,EAAIR,EAcRi2C,CAAYhnC,GACM,mBAAXu+B,IAChBv+B,EAASu+B,EAAOv+B,IAGpB,OAAOA,GAwCX,SAASi+B,GAASC,EAAMC,GACtB,MAAMC,EAAQpxC,OAAOwL,KAAK0lC,GAC1B,OAAOE,EAAMrxC,SAAWC,OAAOwL,KAAK2lC,GAAMpxC,QACxCqxC,EAAMC,MAAMhtC,GAAO8sC,EAAK9sC,KAAS6sC,EAAK7sC,IAG1C,SAAS41C,GAAWllB,GAElB,OADmBA,EAAGmlB,YAAcnlB,GAClBvL,cAAcuL,EAAG7sB,YAAYiyC,QAAU,iBAG3D,SAASC,KACP,GAAIV,GAAc,OAAOA,GACzB,IAAKD,GAAY,OAAOj4C,SAAS+lC,KAEjC,GADAmS,GAAqC,iBAAfD,GAA0Bj4C,SAASgoB,cAAciwB,IAAcA,IAChFC,GACH,MAAM,IAAIx3C,MAAO,2CAA0Cu3C,MAE7D,OAAOC,GAGT,SAASW,GAAahF,EAAYiF,GAChC,IAAI7hB,EAAS4c,EAAWG,OAAO8E,GAC/B,KAAO7hB,GAAQ,CACb,GAAIA,EAAOhqB,QAAQ8rC,UACjB,OAAOZ,GAAWlhB,EAAO51B,MAE3B41B,EAAS4c,EAAWG,SAAS8E,IAiBjCE,eAAeC,GAAcpF,EAAYG,EAAQre,EAAQ6B,GACvD,IAAK,IAAIn5B,EAAI,EAAGA,EAAI21C,EAAOz1C,OAAQF,IAAK,CACtC,IAAImT,EACJ,MAAM,MAAEi9B,EAAF,GAASlb,GAAOygB,EAAO31C,GACvB66C,EAAczK,EAAMxhC,QAAS,GAAE0oB,IAAS6B,KAO9C,GAN2B,mBAAhB0hB,IACT1nC,QAAe0nC,EAAYrF,IACZ,IAAXriC,GACFqiC,EAAWW,UAGXX,EAAWa,YAAa,MAC5B,MAAMyE,EAAW5lB,GAAMA,EAAI,GAAEoC,SAAc6B,KAO3C,GANwB,mBAAb2hB,IACT3nC,QAAe2nC,EAASx6C,KAAK40B,EAAIsgB,IAClB,IAAXriC,GACFqiC,EAAWW,UAGXX,EAAWa,YAAa,OA2BhC,SAAS0E,GAAiBvF,EAAYtgB,EAAIxX,GACpCA,GACFvd,OAAOwL,KAAK+R,GAAYhW,QAAQlD,IAC9B,MAAMN,EAAQwZ,EAAWlZ,GACzB0wB,EAAG1wB,GAAON,aAAiB81C,GAAkB91C,EAAMA,MAAMsxC,GAActxC,IAK7E,MAAM82C,GAAa,IAAInlB,QACjBolB,GAAkB,IAAI5yB,QAsFrB,MAAM6yB,GAAK,CAChB32C,OAvMF,SAAiBqM,GACf2kC,GAAS3kC,EACTgpC,GAAahpC,EAAShC,QAAQ0rC,QAsM9BvB,QAnMF,WACExD,GAAS,KACTuE,GAAa35C,OAAOoE,OAAO,MAC3Bw1C,GAAoB55C,OAAOoE,OAAO,MAClCs1C,GAAe,MAgMft4C,QArCFo5C,eAAwBnF,GACtB,MAAM2F,EAAa3F,EAAW/lC,KAAKkmC,OAC7ByF,EA3HR,SAA2BD,EAAYE,GACrC,IAAIj7B,EAAO3Q,EAAMu5B,EACjB,MAAMvhB,EAAQzG,KAAKC,IAAIk6B,EAAWj7C,OAAQm7C,EAAcn7C,QACxD,IAAKkgB,EAAQ,EAAGA,EAAQqH,IACtBhY,EAAO0rC,EAAW/6B,GAClB4oB,EAAUqS,EAAcj7B,GAClB3Q,GAAQu5B,GAAav5B,EAAKzM,OAASgmC,EAAQhmC,MAAUouC,GAAQ3hC,EAAKu3B,OAAQgC,EAAQhC,SAH3D5mB,KAO/B,OAAOA,EAiHek7B,CAAiBH,EAAY3F,EAAWG,QACxD4F,EAAc,GAGpB,IAAK,IAAIC,EAAaL,EAAWj7C,OAAS,EAAGs7C,GAAcJ,EAAeI,IAAc,CACtF,MAAMpL,EAAQ+K,EAAWK,GACzBD,EAAY/6C,KAAK,CAAE00B,GAAI4kB,GAAW1J,EAAMptC,MAAOotC,UAKjD,SAFMwK,GAAapF,EAAY+F,EAAa,SAAU,SAElD/F,EAAWa,YAAa,OAE5B,MAAMoF,QAhGRd,eAAkChF,GAChC,MAAMxiC,EAAS,GAEf,IAAK,MAAMi9B,KAASuF,EAAQ,CAC1B,IAAIzgB,EAAKkb,EAAMxhC,QAAQ8sC,MAAQ5B,GAAW1J,EAAMptC,WAAQE,EACpDi0B,EAAYiZ,EAAMxhC,QAAQ8rC,WACzBxlB,GAAMiC,IACgB,mBAAdA,GAA8BA,EAAU/2B,qBAAqBkrB,cACtE6L,EAAY4iB,GAAkB3J,EAAMptC,QAAU+2C,GAAkB3J,EAAMptC,OAZtDkB,QAYkFizB,EAAUiZ,KAXlGlsC,EAAMG,WAAaH,EAAM4G,QAAU5G,IAa/CgxB,EAA0B,iBAAdiC,EAAyBx1B,SAASC,cAAcu1B,GAAa,IAAIA,EAC7E2iB,GAAW1J,EAAMptC,MAAQkyB,EACzBA,EAAGymB,QAAUpG,IAEfpiC,EAAO3S,KAAK,CAAE00B,KAAIkb,UAlBtB,IAAwBlsC,EAoBtB,OAAOiP,EAgFiByoC,CAAkBpG,EAAWG,OAAOxwC,MAAMi2C,UAE5DR,GAAapF,EAAYiG,EAAW,SAAU,SAEhDjG,EAAWa,oBArEjBsE,eAA+BnF,EAAYiG,EAAWL,GAEpD,MAAM,KAAE7L,EAAF,SAAQuD,EAAR,OAAkB6C,EAAlB,OAA0B3O,EAA1B,MAAkCP,GAAU+O,EAC5CqG,EAAa,CAAEtM,OAAMuD,WAAU6C,SAAQ3O,SAAQP,SACrD,IAAK,IAAI9+B,EAAI,EAAGA,EAAIyzC,EAAezzC,IAAK,CACtC,MAAMyoC,EAAQoF,EAAWG,OAAOhuC,GAC1ButB,EAAK4kB,GAAW1J,EAAMptC,MACxBkyB,IACFA,EAAG4mB,OAASD,EACZd,GAAgBvF,EAAYtgB,EAAIkb,EAAMxhC,QAAQ8O,aAGlD,IAAK,IAAI1d,EAAI,EAAGA,EAAIy7C,EAAUv7C,OAAQF,IAAK,CACzC,MAAM,GAAEk1B,EAAF,MAAMkb,GAAUqL,EAAUz7C,GAChC,GAAIk1B,EAAI,CACN,MAAM6mB,EAAWvB,GAAYhF,EAAY4F,EAAgBp7C,EAAI,GACvDg8C,EAAWD,EAAW3B,GAAU2B,GAAYxB,KAClD,GAAIyB,EAAU,CACZ,MAAMC,EAAYhB,GAAgBn3C,IAAIk4C,IAAaA,EAASE,kBACxDD,IACFD,EAASz0B,YAAY00B,GACrBjB,GAAWxzC,IAAIy0C,IAEjB/mB,EAAG4mB,OAASD,EACZd,GAAgBvF,EAAYtgB,EAAIkb,EAAMxhC,QAAQ8O,YAC9Cs+B,EAAS34C,YAAY6xB,GACrB+lB,GAAgBxvC,IAAIuwC,EAAU9mB,SACvBA,EAAGvH,gBAAkB6G,OA4C5B2nB,CAAe3G,EAAYiG,EAAWL,GAtC9C,SAAwBK,EAAWF,GACjC,IAAIa,EACJ,IAAK,IAAIZ,EAAaD,EAAYr7C,OAAS,EAAGs7C,GAAc,EAAGA,IAAc,CAC3E,MAAM,MAAEpL,EAAF,GAASlb,GAAOqmB,EAAYC,GAC7BC,EAAUrH,KAAK,EAAGhE,MAAOiM,KAAkBA,EAAYr5C,OAASotC,EAAMptC,QACrEkyB,IAIGknB,GAAoBpB,GAAW/8B,IAAIiX,IAAKA,EAAGlW,SAChDo9B,GAAkB,GAEpBtC,GAAW1J,EAAMptC,WAAQE,IA4B7Bo5C,CAAcb,EAAWF,GAEzB/F,EAAWiG,UAAYA,EACvBjG,EAAW+F,YAAcA,IAYzBp4B,KATF,SAAeqyB,GACboF,GAAapF,EAAYA,EAAW+F,YAAa,QAAS,SAC1DX,GAAapF,EAAYA,EAAWiG,UAAW,QAAS,WC1PpDc,GAAkBv4C,OAAO,mBACzBw4C,GAAoBx4C,OAAO,qBAC3BwwB,GAAWlzB,QAAQC,UACnBk7C,GAAiB,IAAIp1C,IAC3B,IAAIkuC,GAWJ,MAAMmH,GAAW,SAAUxnB,EAAIoG,EAAWqhB,EAAU3zC,EAAU8H,GAC5D,MAAMgF,EAAU,SAAU5U,GAExB,IADA,IAAI4X,EAAO5X,EAAE4B,OACNgW,GAAQA,IAASoc,EAAIpc,EAAOA,EAAKwO,WAClCxO,EAAKq+B,SAAWr+B,EAAKq+B,QAAQwF,KAC/Bz7C,EAAE07C,eAAiB9jC,EACnB9P,EAAS1I,KAAKwQ,EAAS5P,KAO7B,OAFA4U,EAAQwlB,UAAYA,EACpBpG,EAAGwB,iBAAiB4E,EAAWxlB,GAAS,GACjCA,GAOT,MAAM+mC,GAAa,SAAU3nB,EAAIpf,GAC/B,MAAMwlB,EAAYxlB,EAAQwlB,UAC1BpG,EAAGiG,oBAAoBG,EAAWxlB,GAAS,IAG7C,SAASgnC,GAAiBC,EAAW9lB,GACnC8lB,EAAUr1C,SAAQ,SAAUs1C,GAC1B,GAAsB,eAAlBA,EAASp6C,KAAuB,CAClC,MAAMqpB,EAAO+wB,EAASC,cACS,IAA3BhxB,EAAKpO,QAAQ,WAA8C,IAA3BoO,EAAKpO,QAAQ,WAC/Cq/B,GAAWF,EAASl6C,OAAQm0B,EAASkmB,cAGvCH,EAASI,WAAW11C,QAAQoR,IACJ,IAAlBA,EAAK4O,WACH5O,EAAK0f,aAAa,UAAU0kB,GAAWpkC,EAAMme,EAASkmB,SAC1DE,GAAYpmB,EAASkmB,QAASrkC,SAOxC,MAAMwkC,GAAyB,CAAEC,WAAW,EAAMC,SAAS,EAAMzxB,YAAY,GAE7E,SAAS0xB,GAAoBvoB,EAAIoC,EAAQnkB,GACvC,MAAM4Y,EAAamJ,EAAGnJ,WAEtB,IAAK,IAAI/rB,EAAI,EAAGA,EAAI+rB,EAAW7rB,OAAQF,IAAK,CAC1C,MAAMisB,EAAOF,EAAW/rB,GACxB,GAAkC,IAA9BisB,EAAKjpB,KAAK6a,QAAQyZ,GAAe,CAEnCnkB,EADkB8Y,EAAKjpB,KAAKmC,MAAMmyB,EAAOp3B,SACrB+rB,EAAK/nB,OAG7B,OAAOiP,EAST,SAASuqC,GAAcP,EAASQ,EAAWC,EAASj3C,EAAUk3C,GAC5D,MAAMjvC,EAAUuuC,EAAQZ,IAAiB3tC,QACnCkvC,EARR,SAAsBX,EAASQ,EAAWh3C,EAAUi3C,EAAShvC,GAC3D,IAAIuE,EAASvE,EAAQjI,GAErB,MADsB,mBAAXwM,IAAuBA,EAASA,EAAO7S,KAAK68C,EAASQ,EAAWC,IACpEzqC,GAAU,GAKA4qC,CAAYZ,EAASQ,EAAWh3C,EAAUi3C,EAAShvC,GAC9DovC,EAASJ,EAAQK,QAAQrvC,EAAQ+tC,UAAY,iBAInD,OAHIqB,GACFP,GAAmBO,EAAQH,EAAYC,GAElCL,GAAmBG,EAASC,EAAYC,GAGjD,SAASI,GAAmBhpB,EAAIyoB,EAAW3W,EAAQP,GACjD,MAAM0X,EAAcjpB,EAAGkpB,aAAa,gBAAkBlpB,EAAGsD,aAAa,gBAAkB,SACxF,GAAI2lB,EAAa,CACf,MAAM/E,EAAW7D,GAAO6D,SAASuE,EAAW3W,EAAQP,EAAOvR,EAAGkpB,aAAa,UAC3ElpB,EAAGhE,UAAUmtB,OAAOF,EAAa/E,IAIrC,SAAS8D,GAAYhoB,EAAIioB,GACvB,MAAMQ,EAAYzoB,EAAGsD,aAAa,SAClC,IAAKmlB,EAAW,OAChB,MAAM3W,EAAS0W,GAAaP,EAASQ,EAAWzoB,EAAI,SAAU,UACxDuR,EAAQiX,GAAaP,EAASQ,EAAWzoB,EAAI,QAAS,UACtD6d,EAAOwC,GAAO8D,SAASsE,EAAW3W,EAAQP,GAC1C6X,EAA0B,MAAfppB,EAAGyD,QAAkBzD,EAAKA,EAAGvL,cAAc,KACxD20B,GAAUA,EAASt8C,aAAa,OAAQ+wC,GACvCwC,GAAOQ,MAAMK,kBAChB8H,GAAkBhpB,EAAIyoB,EAAW3W,EAAQP,GAI7C,SAAS4W,GAAaF,EAASa,GACZA,EAAOj1B,iBAAiB,WAEhCrhB,QAAQwtB,IACfgoB,GAAWhoB,EAAIioB,KAInB,SAASoB,GAAkBr9C,GACzB,GAAiB,IAAbA,EAAEs9C,UAxFkBl8C,EAwFcpB,GAvFtBu9C,SAAWn8C,EAAMo8C,QAAUp8C,EAAMq8C,SAAWr8C,EAAMs8C,UAuFxB,OAxF5C,IAA0Bt8C,EAyFxBpB,EAAE29C,iBACF,MAAM3pB,EAAKh0B,EAAE07C,eACPe,EAAYzoB,EAAGsD,aAAa,SAClC,IAAKmlB,EAAW,OAChB,MAAM3W,EAAS0W,GAAav3C,KAAMw3C,EAAWzoB,EAAI,SAAU,UACrDuR,EAAQiX,GAAav3C,KAAMw3C,EAAWzoB,EAAI,QAAS,UACnDmK,EAASnK,EAAGkpB,aAAa,WAAa,cAAgB,eAC5D7I,GAAOlW,GAAQse,EAAW3W,EAAQP,GAG7B,SAASqY,GAAiB3B,EAASvuC,EAAU,IAClD,MAAM,SAAE+tC,EAAW,iBAAoB/tC,EACjCmwC,EAAUpC,EAAWQ,EAAQp0B,iBAAiB4zB,GAAY,CAACQ,GAC3DlmB,EAAW,IAAI+nB,iBAAiBlC,IAChCmC,EAAgB,GAUtB,OATAhoB,EAASkmB,QAAUA,EACnBA,EAAQZ,IAAmB,CAAE3tC,UAASmwC,UAAS9nB,YAC/C8nB,EAAQr3C,QAAQs2C,IACdiB,EAAcz+C,KAAKk8C,GAASsB,EAAQ,QAAS,UAAWO,GAAkBpB,IAC1EE,GAAYF,EAASa,GACrB/mB,EAASjhB,QAAQgoC,EAAQV,MAE3Bb,GAAej1C,IAAI21C,GAEZ,WACLV,GAAe1jC,OAAOokC,GACtB8B,EAAcv3C,QAAQ,CAACw3C,EAAcl/C,IAAM68C,GAAWkC,EAAQ/+C,GAAIk/C,KAItE,MAAMC,GAAc,CAACjyB,EAAMte,EAAU,MAC5B,cAAcse,EACnB8C,oBACE/a,MAAM+a,mBAAqB/a,MAAM+a,qBACd7pB,KAAKwnB,gBAAkB6G,IAC/BI,KAAK,KACdzuB,KAAKq2C,IAAqBsC,GAAgB34C,KAAMyI,KAIpD0lB,uBACErf,MAAMqf,sBAAwBrf,MAAMqf,uBAChCnuB,KAAKq2C,KACPr2C,KAAKq2C,SAMA4C,GAAkB,CAACC,EAA2BzwC,KAEzD,GAAyC,mBAA9BywC,EAET,OAAOF,GAAYE,EAA2BzwC,GAEhD,GAAuC,UAAnCywC,EAA0BC,KAAkB,CAE9C,MAAM,KAAEA,EAAF,SAAQC,GAAaF,EAC3B,MAAO,CACLC,OACAC,WACAC,SAAUtyB,GACDiyB,GAAYjyB,EAAMte,IAK/B,OAAQ6wC,GACCL,GAAgBK,EAAkBJ,IAuBtC,MAAMK,GAAc,CACzBn7C,OApBF,SAAiBqM,GACf2kC,GAAS3kC,GAoBTuS,KAjBF,WACEs5B,GAAe/0C,QAAQy1C,IACRA,EAAQZ,IAChBwC,QAAQr3C,QAAQs2C,IACnBA,EAAOj1B,iBAAiB,WAAWrhB,QAAQwtB,IACzC,MAAMyoB,EAAYzoB,EAAGsD,aAAa,SAC7BmlB,GAGLO,GAAkBhpB,EAAIyoB,EAFPD,GAAaP,EAASQ,EAAWzoB,EAAI,SAAU,UAChDwoB,GAAaP,EAASQ,EAAWzoB,EAAI,QAAS,mB,kBCzMpE,MAAMyqB,WAAkBxoB,KAAU,mCAQhCyoB,kBAAoB1+C,IAClBiF,KAAK2K,QAAQ84B,OAAOvC,UAAU8E,SAASjrC,EAAE4B,OAAOoB,QATlB,KAYhC27C,qBAAuB3+C,IACrBiF,KAAK2K,QAAQ84B,OAAOvC,UAAU+E,YAAYlrC,EAAE4B,OAAOoB,QAbrB,KAgBhC47C,iBAAmB5+C,IACjBA,EAAE29C,iBACF14C,KAAK2K,QAAQ84B,OAAOvC,UACjB4B,QACArU,KAAK,IAAMzuB,KAAKw1C,QAAQvD,YAAY,UAjBzC9jB,uBACErf,MAAMqf,uBACNnuB,KAAK2K,QAAQ84B,OAAOvC,UAAUgF,QAkBhCjc,SACE,MAAM,OAAE9gB,EAAF,OAAUyyB,EAAV,WAAkBuK,GAAenmC,KAAK2K,QAAQ84B,OAAOvC,UAE3D,OAAO9P,IAAK;;;;;;;;;qCASqBwK;8BACP57B,KAAK25C;;;;;;;+BAOJxwC,EAAO45B;gCACN/iC,KAAKy5C;;;;;;;;+BAQNtwC,EAAO65B;gCACNhjC,KAAK05C;;;;;;gCAMLvT;;;;;;;;;;OA3D1BqT,GACG1pB,iBAAmB,CAAC,UAwE7BmG,eAAe4F,OAAO,aAAc2d,IC5DrBI,OAdA,EAAGC,UAASpY,WACrBA,EACK,KAEFrQ,GAAK;;;gCAGkByoB,EAAQpzB;;;;ICPxC,MAAM3D,GAAQ,CACZqZ,aAAc,MACd2d,MAAO,OACPC,OAAQ,OACR7d,OAAQ,YACR8d,SAAU,WACVC,UAAW,+BACXC,YAAa,+BACbC,aAAc,+BACdC,WAAY,oBACZC,UAAW,gBACXC,UAAW,wCAGb,MAAMC,WAAuBvpB,KAC3B/G,SACE,OAAOmH,IAAK;2CAC2BnG,aAASnI;;;;;;;;;;;;OAgBpDmT,eAAe4F,OAAO,kBAAmB0e,ICP1BC,OAzBF3wC,IACX,MAAMi9B,EAAOj9B,EAAMi9B,KACnB,OAAIA,EACK1V,GAAK;;UAEN0V,EAAKngC,IAAI67B,GACFpR,GAAK;;;;0BAIIoR;;iBAETA;;;;MAONpR,GAAK;;OCgBDqpB,I,SAAAA,GApCQ5wC,IACrB,GAAIA,EAAM06B,gBAAkB,EAC1B,OAAO,KAGT,MAAMmW,EAAQ,GACd,IAAK,IAAI7gD,EAAI,EAAGA,EAAIgQ,EAAM06B,kBAAmB1qC,EAC3C6gD,EAAMrgD,KAAKR,GAGb,OAAOu3B,IAAK;;;UAGJspB,EAAM/zC,IAAIL,IACV,MAAMq0C,EAAYr0C,IAAMuD,EAAM+wC,YAO9B,OAAOxpB,IAAK;;sBAEAupB,EAAY,mBAAqB;uBAP7BE,IACdA,EAAGnC,iBACH7uC,EAAMixC,UAAUx0C;oBAORA,EAAEzE;;6CAEuByE,EAAI;;;;;SCtB3Cy0C,GADL9B,I,MAAD,cAC6BjoB,KAAU,mCAOrCgqB,oBAAsBH,IACpBA,EAAGnC,iBACH,MAAM,QAAEzW,GAAYjiC,MACd,cAAEonC,GAAkBpnC,KAAK2K,QAAQ84B,OACnCxB,EAAQ2C,UACVwC,EAActC,eAAe7C,EAAQC,MAErCkF,EAAczC,aAAa1C,EAAQC,OAIvCjY,SACE,MAAM,QAAEgY,GAAYjiC,KACdi7C,EAAsBhZ,EAAQ2C,UAxBhB,yBACI,iCA2BxB,OAAOxT,IAAK;;;oBAGK,KAAI6Q,EAAQK,OAAOjH;wBAChB4G,EAAQK,OAAO4Y;;;qCAGD,KAAIjZ,EAAQK,OAAOjH;iBACxC4G,EAAQK,OAAOjH;;iBAEf,IAAIoU,KAAKxN,EAAQkZ,WAAWC;;;;;sBAKvBH;uBACCj7C,KAAKg7C;;0CAEc/Y,EAAQ4C;;;;kBAI/B,YAAW5C,EAAQC;iBACrBD,EAAQtE;eACVsE,EAAQoF;;;cAGTpF,EAAQqF,QAAQ3gC,IAAI67B,GACbpR,IAAK;mEACyCoR;oBAC/CA;;;;;;WArDX1S,iBAAmB,CAAC,U,GAEpBvY,WAAa,CAClB0qB,QAAS,CAAExlC,KAAMzC,S,YA6DrBi8B,eAAe4F,OAAO,kBAAmBkf,IClC1BM,I,SAAAA,GAjCK,EAClBP,YACAvW,kBACAqW,cACAvW,WACAiX,aAEIA,GAA+B,IAApBjX,EAAStqC,OACfq3B,IAAK;;MAKU,IAApBiT,EAAStqC,OACJq3B,IAAK;;MAKPA,IAAK;;QAEN5E,aACA6X,EACApC,GAAWA,EAAQC,KACnBD,GAAW7Q,IAAK;sCACc6Q;;QAG9BwY,GAAe,CAAEK,YAAWvW,kBAAiBqW;;QCgB/CW,GADLtC,I,MAAD,cACuBjoB,KAAU,mCAyC/BwqB,gBAAkBC,IACZz7C,KAAKy7C,MAAQA,GACjBz7C,KAAKovB,cAAc,IAAIJ,YAAY,cAAe,CAAEH,OAAQ4sB,MA3C/B,KA8C/BC,cAAgBvZ,IACdniC,KAAK2K,QAAQ84B,OAAO2D,cAAcvD,QAAQ1B,GAC1CniC,KAAK2K,QAAQ84B,OAAO2D,cAAcjD,gBAxCpCta,oBACE/a,MAAM+a,oBACN7pB,KAAK2K,QAAQ84B,OAAO2D,cAActD,aAAa9jC,KAAK27C,gBACpD37C,KAAK2K,QAAQ84B,OAAO2D,cAAcjD,eAGpCrc,aAAaC,GAKX,OAJIA,EAAkBjQ,IAAI,QAAUiQ,EAAkBjQ,IAAI,UACxD9X,KAAK2K,QAAQ84B,OAAO2D,cAActD,aAAa9jC,KAAK27C,gBACpD37C,KAAK2K,QAAQ84B,OAAO2D,cAAcjD,iBAE7B,EAGTyX,SACE,OAAO57C,KAAKwiC,KAAO,GAGrBqZ,SACE,OAAO77C,KAAKy7C,KAAO,MAGrBE,eACE,OAAQ37C,KAAK67C,UACX,IAAK,OACH,MAAO,CAAE5X,QAAQ,GACnB,IAAK,MACH,MAAO,CAAEzB,IAAKxiC,KAAKwiC,KACrB,QACE,MAAO,IAcbvY,SACE,MAAM,YAAE8d,GAAgB/nC,KAAK2K,QAAQ84B,OAAO4C,WACtC,SACJhC,EADI,UAEJD,EAFI,KAGJjC,EAHI,gBAIJoC,GACEvkC,KAAK2K,QAAQ84B,OAAO2D,cAElBqU,EAAMz7C,KAAK67C,SAEjB,OAAOzqB,IAAK;;;;cA3GI,GAAG2W,cAAa0T,SAC9B1T,EACK3W,IAAK;;;;;kBAKG,YAAmB,SAARqqB,EAAiB,SAAW;;;;MAMjD,KAkGKK,CAAY,CAAE/T,cAAa0T,WA/FnB,GAAGA,SAChBrqB,IAAK;;;;;;gBAMG,YAAmB,QAARqqB,EAAgB,SAAW;;;;IAwFJM,CAAc,CAAEN;cAjF9C5xC,IACdA,EAAM24B,IAIJpR,IAAK;;kCAEoBvnB,EAAM24B;qCACH34B,EAAM24B;;;IANhC,KAgFGwZ,CAAa,CAAExZ,IAAKxiC,KAAKwiC;;;UAG7B6Y,GAAY,CACZhX,WACAE,kBACA+W,QAASlX,EACTwW,YAAazY,EACb2Y,UAAW96C,KAAK07C;;WA1EjB5rB,iBAAmB,CAAC,U,GAEpBvY,WAAa,CAClBkkC,IAAK,CAAEh/C,KAAMqF,QACb0gC,IAAK,CAAE/lC,KAAMqF,S,yBA6EjBm0B,eAAe4F,OAAO,iBAAkB0f,I,IC5HlCU,GADLhD,I,MAAD,cACuBjoB,KAOrBnH,oBACE/a,MAAM+a,oBACN7pB,KAAK2K,QAAQ84B,OAAOxC,YAAY2F,WAGlCsV,WAAWnhD,GACTiF,KAAKw1C,QAAQ1F,aAAa,OAAQ,GAAI,CAAE2L,IAAK1gD,EAAE8zB,SAGjD5E,SACE,MAAM,KAAE6c,EAAF,MAAQrF,EAAR,QAAeoY,GAAY75C,KAAK2K,QAAQ84B,OAAOxC,YAC/CX,EAAQtgC,KAAK21C,OAAS31C,KAAK21C,OAAOrV,MAAQ,GAChD,OAAOlP,IAAK;;UAENwoB,GAAO,CAAEnY,MAAOA,EAAOoY,QAASA;;;;;qBAKrBvZ,EAAMkC;qBACNlC,EAAMmb;6BACEz7C,KAAKk8C;;;;;kBAKhB1B,GAAK,CAAE1T;;;;;;WAhChBhX,iBAAmB,CAAC,U,GAEpBvY,WAAa,CAClBo+B,OAAQ,I,YAuCZ1f,eAAe4F,OAAO,YAAaogB,IC/CnC,MAAME,WAAqBnrB,KAAU,mCAQnCorB,qBAAuBrhD,GACrBiF,KAAK2K,QAAQ84B,OAAOvC,UAAU6E,YAAYhrC,EAAE4B,OAAOoB,OATlB,KAUnC07C,kBAAoB1+C,GAClBiF,KAAK2K,QAAQ84B,OAAOvC,UAAU8E,SAASjrC,EAAE4B,OAAOoB,OAXf,KAYnC27C,qBAAuB3+C,GACrBiF,KAAK2K,QAAQ84B,OAAOvC,UAAU+E,YAAYlrC,EAAE4B,OAAOoB,OAblB,KAcnC47C,iBAAmB5+C,IACjBA,EAAE29C,iBACF14C,KAAK2K,QAAQ84B,OAAOvC,UACjB+B,WACAxU,KAAK,IAAMzuB,KAAKw1C,QAAQvD,YAAY,UAfzC9jB,uBACErf,MAAMqf,uBACNnuB,KAAK2K,QAAQ84B,OAAOvC,UAAUgF,QAgBhCjc,SACE,MAAM,OAAE9gB,EAAF,OAAUyyB,EAAV,WAAkBuK,GAAenmC,KAAK2K,QAAQ84B,OAAOvC,UAE3D,OAAO9P,IAAK;;;;;;;;;qCASqBwK;8BACP57B,KAAK25C;;;;;;;+BAOJxwC,EAAOkyB;gCACNr7B,KAAKo8C;;;;;;;;+BAQNjzC,EAAO45B;gCACN/iC,KAAKy5C;;;;;;;;+BAQNtwC,EAAO65B;gCACNhjC,KAAK05C;;;;;;gCAMLvT;;;;;;;;;;OAlE1BgW,GACGrsB,iBAAmB,CAAC,UA+E7BmG,eAAe4F,OAAO,gBAAiBsgB,IChFvC,MAAME,WAAmBrrB,KAAU,mCAQjCsrB,SAAW,GARsB,KAkCjCC,YAAcxhD,GAAKiF,KAAK2K,QAAQ84B,OAAOiF,YAAYnB,SAASxsC,EAAE4B,OAAOoB,OAlCpC,KAmCjCy+C,kBAAoBzhD,GAClBiF,KAAK2K,QAAQ84B,OAAOiF,YAAYlB,eAAezsC,EAAE4B,OAAOoB,OApCzB,KAqCjC0+C,WAAa1hD,GAAKiF,KAAK2K,QAAQ84B,OAAOiF,YAAYjB,QAAQ1sC,EAAE4B,OAAOoB,OArClC,KAsCjC2+C,eAAiB3hD,GAAMiF,KAAKs8C,SAAWvhD,EAAE4B,OAAOoB,MAtCf,KAwCjC4+C,sBAAwB9B,IACtB,OAAQA,EAAG+B,SACT,KAAK,GACL,KAAK,EACL,KAAK,IACgB,IAAf/B,EAAG+B,SAAe/B,EAAGnC,iBACzB14C,KAAK68C,iBA9CsB,KAqDjCA,aAAe,KACT78C,KAAKs8C,WACPt8C,KAAK2K,QAAQ84B,OAAOiF,YAAYhB,OAAO1nC,KAAKs8C,SAASnkB,QACrDn4B,KAAKs8C,SAAW,KAxDa,KA4DjCQ,gBAAkBta,IACZxiC,KAAK2K,QAAQ84B,OAAOiF,YAAYvC,YACpCnmC,KAAK2K,QAAQ84B,OAAOiF,YAAYf,UAAUnF,IA9DX,KAiEjCua,WAAalC,IACXA,EAAGnC,iBACH,MAAM,YAAEhQ,GAAgB1oC,KAAK2K,QAAQ84B,OACrCiF,EAAYd,SAASnZ,KAAKwT,IACxByG,EAAYxC,QACZlmC,KAAKw1C,QAAQvD,YAAY,UAAW,CAAEtM,GAAI1D,EAAQC,UA5DtD,WAAWnkC,GACTiC,KAAKkiC,KAAOnkC,EAAM8iC,OAAOqB,KAG3BrY,oBACE/a,MAAM+a,oBACN7pB,KAAK2K,QAAQ84B,OAAOiF,YAAYvD,eAAenlC,KAAKkiC,MACpDliC,KAAK2K,QAAQ84B,OAAOiF,YAAYvB,kBAChCnnC,KAAKg9C,YAAa,EAGpBl1B,aAAaC,GACX,OAAI/nB,KAAKg9C,YACPh9C,KAAKg9C,YAAa,GACX,IAGLj1B,EAAkBjQ,IAAI,UACxB9X,KAAK2K,QAAQ84B,OAAOiF,YAAYvD,eAAenlC,KAAKkiC,MACpDliC,KAAK2K,QAAQ84B,OAAOiF,YAAYvB,oBAE3B,GA2CTld,SACE,MAAM,WACJkc,EADI,OAEJvK,EAFI,MAGJ+B,EAHI,YAIJ0J,EAJI,KAKJ9F,EALI,QAMJ+F,GACEtnC,KAAK2K,QAAQ84B,OAAOiF,YAExB,OAAOtX,IAAK;;;;;qCAKqBwK;;;;;;;;+BAQN+B;+BACA39B,KAAKu8C;kCACFpW;;;;;;;;+BAQHkB;+BACArnC,KAAKw8C;kCACFrW;;;;;;;;+BAQH5E;+BACAvhC,KAAKy8C;kCACFtW;;;;;;;;+BAQHnmC,KAAKs8C;+BACLt8C,KAAK08C;8BACN18C,KAAK68C;iCACF78C,KAAK28C;kCACJxW;;;wBAGVmB,EAAQ3gC,IAAI67B,GACLpR,IAAK;;;;uCAIG,IAAMpxB,KAAK88C,gBAAgBta;;+BAEnCA;;;;;;;;gCASC2D;6BACHnmC,KAAK+8C;;;;;;;;;;OAvJ5BV,GACGvsB,iBAAmB,CAAC,UADvBusB,GAGG9kC,WAAa,CAClB+kC,SAAU,CAAE7/C,KAAMqF,QAClBogC,KAAM,CAAEzlC,KAAMqF,SAgKlBm0B,eAAe4F,OAAO,cAAewgB,I,MClKrC,MAAMY,GAAsBpzC,GACtBA,EAAMqzC,OACD9rB,IAAK;;;;MAMP,KAGH+rB,GAAmBtzC,IACvB,GAAIA,EAAMqzC,OACR,OAAO,KAGT,IAAIE,EAAU,wBACVvzC,EAAM0+B,UACR6U,GAAW,iBAEXA,GAAW,yBAYb,OAAOhsB,IAAK;oBACMgsB,YAVEvC,IAClBA,EAAGnC,iBACC7uC,EAAM0+B,UACR1+B,EAAM05B,SAAS15B,EAAMwxB,UAErBxxB,EAAMy5B,OAAOz5B,EAAMwxB;uCAMcxxB,EAAM0+B,UAAY,WAAa;QAC9D1+B,EAAMwxB;;KAKd,MAAMgiB,WAAoBrsB,KAAU,mCAmElCssB,aAAe,IAAMt9C,KAAK2K,QAAQ84B,OAAOkF,aAAarF,SAnEpB,KAoElCia,eAAiB,IAAMv9C,KAAK2K,QAAQ84B,OAAOkF,aAAapF,WApEtB,KAsElCmY,cAAgBvZ,IACdniC,KAAK2K,QAAQ84B,OAAO2D,cAAcvD,QAAQ1B,GAC1CniC,KAAK2K,QAAQ84B,OAAO2D,cAAcjD,gBAhEpC,WAAWpmC,GACTiC,KAAKq7B,SAAWt9B,EAAM8iC,OAAOxF,SAC7Br7B,KAAK2sC,SAAW5uC,EAAM4uC,SAGxBxkB,UAEE,IAAKnoB,KAAKw9C,mBAAoB,CACZx9C,KAAKwjB,cAAc,mBACtBxjB,KAAKw9C,mBAAqB7E,GAAgB34C,QAI3D6pB,oBACE/a,MAAM+a,oBACN7pB,KAAK2K,QAAQ84B,OAAO2D,cAActD,aAAa9jC,KAAK27C,gBACpD37C,KAAK2K,QAAQ84B,OAAOkF,aAAaP,YAAYpoC,KAAKq7B,UAClDr7B,KAAK2K,QAAQ84B,OAAO2D,cAAcjD,eAClCnkC,KAAKg9C,YAAa,EAGpB7uB,uBACMnuB,KAAKw9C,oBACPx9C,KAAKw9C,qBAIT11B,aAAaC,GAEX,OAAI/nB,KAAKg9C,YACPh9C,KAAKg9C,YAAa,GACX,IAGLj1B,EAAkBjQ,IAAI,aACxB9X,KAAK2K,QAAQ84B,OAAOkF,aAAaP,YAAYpoC,KAAKq7B,UAGhDtT,EAAkBjQ,IAAI,cACxB9X,KAAK2K,QAAQ84B,OAAO2D,cAActD,aAAa9jC,KAAK27C,gBACpD37C,KAAK2K,QAAQ84B,OAAO2D,cAAcjD,iBAE7B,GAGT0X,SACE,MAAI,cAAc9iB,KAAK/4B,KAAK2sC,UAAkB,YACvC,MAGTgP,eACE,OAAQ37C,KAAK67C,UACX,IAAK,YACH,MAAO,CAAEnZ,YAAa1iC,KAAKq7B,UAC7B,QACE,MAAO,CAAEiH,OAAQtiC,KAAKq7B,WAY5BoiB,aACE,MAAM,QAAEnV,GAAYtoC,KAAK2K,QAAQ84B,OAAOkF,aAClC+U,EAAc19C,KAAK2sC,SAAS9Z,MAAM,cACxC,OAAOzB,IAAK;;;;oBAIK,YAAYssB,EAAyB,GAAX;;6BAElBpV,EAAQjN;;;;;;;;;6BASRiN,EAAQjN;;;;;MAQnCpR,SACE,MAAM,aAAE0e,EAAF,cAAgBvB,EAAhB,UAA+Bf,GAAcrmC,KAAK2K,QAAQ84B,QAC1D,QAAE6E,EAAF,iBAAWD,GAAqBM,GAChC,YAAEZ,GAAgB1B,EAExB,GAAIgC,IAAqBC,EACvB,OAAOlX,IAAK;;QAGd,IAAKkX,EACH,OAAOlX,IAAK;;QAId,MAAM8rB,EAASnV,GAAeO,EAAQjN,WAAa0M,EAAY1M,SAE/D,OAAOjK,IAAK;;;;;;2BAMWkX,EAAQ4S;sBACb5S,EAAQjN;qBACTiN,EAAQqV;kBACXV,GAAoB,CAAEC;kBACtBC,GAAiB,CACjBD,SACA7hB,SAAUiN,EAAQjN,SAClBkN,UAAWD,EAAQC,UACnBhF,SAAUvjC,KAAKu9C,eACfja,OAAQtjC,KAAKs9C;;;;;;;;6CASct9C,KAAKy9C;gBAClCpC,GAAY,CACZhX,SAAU+C,EAAc/C,SACxBE,gBAAiB6C,EAAc7C,gBAC/BuW,UAAW96C,KAAK07C,cAChBJ,QAASlU,EAAchD;;;;;OAlJjCiZ,GACGvtB,iBAAmB,CAAC,UADvButB,GAGG9lC,WAAa,CAClB8jB,SAAU,CAAE5+B,KAAMqF,QAClB6qC,SAAU,CAAElwC,KAAMqF,SAuJtBm0B,eAAe4F,OAAO,eAAgBwhB,ICvMtC,MAAMO,WAAqB5sB,KAOzB9uB,cACE4M,QAEA9O,KAAK4vC,MAAQ,CACXsL,MAAO,GACP7f,SAAU,GACVsiB,IAAK,GACL5a,MAAO,GACPC,SAAU,IAGZhjC,KAAK69C,YAAcrkB,GAASqhB,IAC1B,MAAMjL,EAAQ5vC,KAAK4vC,MACbkO,EAAW9jD,OAAOkM,OAAO,GAAI0pC,EAAO,CAAE,CAACpW,GAAQqhB,EAAGl+C,OAAOoB,QAC/DiC,KAAK4vC,MAAQkO,GAGf99C,KAAK+8C,WAAalC,IAChBA,EAAGnC,iBAEH,MAAM9d,EAAO5gC,OAAOkM,OAAO,GAAIlG,KAAK4vC,OAC/BhV,EAAKoI,iBACDpI,EAAKoI,SAGdhjC,KAAK+9C,aAAanjB,IAItB/Q,oBACE/a,MAAM+a,oBACF7pB,KAAK2K,QAAQ84B,OAAO4C,UAAU0B,aAChC/tC,OAAOkM,OAAOlG,KAAK4vC,MAAO,CACxBsL,MAAOl7C,KAAK2K,QAAQ84B,OAAO4C,UAAU0B,YAAYmT,OAAS,GAC1D7f,SAAUr7B,KAAK2K,QAAQ84B,OAAO4C,UAAU0B,YAAY1M,SACpDsiB,IAAK39C,KAAK2K,QAAQ84B,OAAO4C,UAAU0B,YAAY4V,KAAO,GACtD5a,MAAO/iC,KAAK2K,QAAQ84B,OAAO4C,UAAU0B,YAAYhF,QAKvD9Y,SACE,OAAOmH,IAAK;sBACMpxB,KAAK+8C;;;;;;;uBAOJ/8C,KAAK4vC,MAAMsL;wBACVl7C,KAAK69C,YAAY;;;;;;;;uBAQlB79C,KAAK4vC,MAAMvU;wBACVr7B,KAAK69C,YAAY;;;;;;;;uBAQlB79C,KAAK4vC,MAAM+N;wBACV39C,KAAK69C,YAAY;;;;;;;;uBAQlB79C,KAAK4vC,MAAM7M;wBACV/iC,KAAK69C,YAAY;;;;;;;;uBAQlB79C,KAAK4vC,MAAM5M;wBACVhjC,KAAK69C,YAAY;;;;;;wBAMjB79C,KAAK2K,QAAQ84B,OAAO4C,UAAU6B;;;;;;OApGhD0V,GACG9tB,iBAAmB,CAAC,UADvB8tB,GAGGrmC,WAAa,CAClBq4B,MAAO,CAAEnzC,KAAMzC,SA0GnB,MAAMgkD,WAAqBhtB,KAAU,mCAGnCitB,kBAAoB,IAClBj+C,KAAK2K,QAAQ84B,OAAOvC,UACjBG,SACA5S,KAAK,IAAMzuB,KAAKw1C,QAAQvD,YAAY,SAEzChoB,SACE,OAAOmH,IAAK;;;;;;;0BAOUpxB,KAAK2K,QAAQ84B,OAAO4C,UAAU6X;;;+BAGzBl+C,KAAK2K,QAAQ84B,OAAO4C,UAAU0B;gCAC7BnN,GACd56B,KAAK2K,QAAQ84B,OAAO4C,UAAU2B,WAAWpN;;;;;yBAKlC56B,KAAKi+C;;;;;;;;OC5H9BzJ,eAAe2J,KAEb,aADM,mDACC,eDgGHH,GACGluB,iBAAmB,CAAC,UAqC7BmG,eAAe4F,OAAO,gBAAiB+hB,IACvC3nB,eAAe4F,OAAO,gBAAiBmiB,IExJhC,MAAMI,GACXl8C,YAAauG,EAAU,IACrBzI,KAAKyI,QAAUA,EAGjB41C,UAAWlK,EAAQt3C,GACjB,OAAOs3C,EAAO8D,aAAap7C,GAAQs3C,EAAO9hB,aAAax1B,GAAQmD,KAAKyI,QAAQ5L,GAG9EyhD,UAAWnK,EAAQt3C,GACjB,OAAOs3C,EAAO8D,aAAap7C,IAASmD,KAAKyI,QAAQ5L,GAGnD0hD,YAAapK,GACX,OAAOn0C,KAAKs+C,UAAUnK,EAAQ,YAGhCqK,YAAarK,EAAQplB,IAIrB0vB,MAAOtK,EAAQplB,IAIf2vB,MAAOvK,EAAQplB,EAAI/R,GACjBA,KAKJ,IAAI2hC,GAAM7/C,OAAO8/C,sBACbC,GAAa,aACbC,GAAY,YAGZC,GAAiB,aACjBC,GAAqB,gBACrBC,GAAgB,YAChBC,GAAoB,eAQxB,SAASC,GACPpwB,EACA9X,GAEA,IAAI7M,EA0BN,SAA4B2kB,GAC1B,IASItyB,EACAd,EACAyjD,EAXAz8B,EAAS7jB,OAAOugD,iBAAiBtwB,GAEjCuwB,GAAoB38B,EAAOo8B,GAAiB,UAAY,IAAIxsB,MAAM,MAClEgtB,GAAuB58B,EAAOo8B,GAAiB,aAAe,IAAIxsB,MAAM,MACxEitB,EAAoBC,GAAWH,EAAkBC,GACjDG,GAAmB/8B,EAAOs8B,GAAgB,UAAY,IAAI1sB,MAAM,MAChEotB,GAAsBh9B,EAAOs8B,GAAgB,aAAe,IAAI1sB,MAAM,MACtEqtB,EAAmBH,GAAWC,EAAiBC,GAkBnD,OAZAhkD,EAAUkf,KAAKC,IAAI0kC,EAAmBI,GAMtCR,GALA3iD,EAAOd,EAAU,EACb6jD,EAAoBI,EAClBf,GACAC,GACF,MAEAriD,IAASoiD,GACPU,EAAoBxlD,OACpB4lD,EAAmB5lD,OACrB,EAEG,CACL0C,OACAd,UACAyjD,aAvDQS,CAAkB9wB,GACxBtyB,EAAO2N,EAAI3N,KACXd,EAAUyO,EAAIzO,QACdyjD,EAAYh1C,EAAIg1C,UACpB,IAAK3iD,EAAQ,OAAOwa,IACpB,IAAI9a,EAAQM,IAASoiD,GAAaG,GAAqBE,GACnDY,EAAQ,EACRzzB,EAAM,WACR0C,EAAGiG,oBAAoB74B,EAAO4jD,GAC9B9oC,KAEE8oC,EAAQ,SAAUhlD,GAChBA,EAAE4B,SAAWoyB,KACT+wB,GAASV,GACb/yB,KAINrvB,YAAW,WACL8iD,EAAQV,GACV/yB,MAED1wB,EAAU,GACbozB,EAAGwB,iBAAiBp0B,EAAO4jD,GAoC7B,SAASN,GAAYO,EAAQC,GAE3B,KAAOD,EAAOjmD,OAASkmD,EAAUlmD,QAC/BimD,EAASA,EAAO9kC,OAAO8kC,GAGzB,OAAOnlC,KAAKC,IAAI/a,MAAM,KAAMkgD,EAAUt5C,KAAI,SAAUrJ,EAAGzD,GACrD,OAAOqmD,GAAK5iD,GAAK4iD,GAAKF,EAAOnmD,QAQjC,SAASqmD,GAAMjhD,GACb,OAAkD,IAA3CilB,OAAOjlB,EAAED,MAAM,GAAI,GAAG4U,QAAQ,IAAK,MAG5C,SAASusC,GAAepxB,EAAIlyB,EAAMJ,EAAMwa,GAxFxC,IAAoBjJ,EAyFlB+gB,EAAGhE,UAAU1pB,IAAK,GAAExE,KAAQJ,YAzFVuR,EA0FR,WACR+gB,EAAGhE,UAAUlS,OAAQ,GAAEhc,KAAQJ,KAC/BsyB,EAAGhE,UAAU1pB,IAAK,GAAExE,KAAQJ,QAC5B0iD,GAAmBpwB,GAAI,WACrBA,EAAGhE,UAAUlS,OAAQ,GAAEhc,KAAQJ,WAAgB,GAAEI,KAAQJ,QACrDwa,GAAIA,QA9FZ0nC,IAAI,WACFA,GAAI3wC,MAkGD,MAAMoyC,WAAmBhC,GAC9BI,YAAarK,EAAQplB,GACnB,MAAMlyB,EAAOs3C,EAAO9hB,aAAa,cAAgB,SACjDtD,EAAGhE,UAAU1pB,IAAK,GAAExE,WAGtB4hD,MAAOtK,EAAQplB,GAEboxB,GAAcpxB,EADDolB,EAAO9hB,aAAa,cAAgB,SACzB,SAG1BqsB,MAAOvK,EAAQplB,EAAI/R,GACjB,MAAMngB,EAAOs3C,EAAO9hB,aAAa,cAAgB,SACjDtD,EAAGhE,UAAU1pB,IAAK,GAAExE,WACpBsjD,GAAcpxB,EAAIlyB,EAAM,QAASmgB,IAyCrC,MAAMqjC,GAAoB,GAC1B,IAAIC,GAUJ,SAASC,GAAkB1jD,GACzB,OAAOwjD,GAAkBxjD,IAASyjD,KAAgBA,GAAc,IAAIF,IAG/D,MAAMI,WAAuBr7B,YAClCjoB,YAAa6xB,GACX,IAAK/uB,KAAKi4C,aAAa,aAErB,YADAnpC,MAAM5R,YAAY6xB,GAGpB,MAAM/X,EAAOupC,GAAiBvgD,KAAKqyB,aAAa,cAC1CksB,EAAcvnC,EAAKunC,YAAYv+C,MAErCgX,EAAKwnC,YAAYx+C,KAAM+uB,GACvBjgB,MAAM5R,YAAY6xB,IACbwvB,GAAev+C,KAAKygD,SAEvBzgD,KAAK0gD,UAAY3xB,EAEjB/X,EAAKynC,MAAMz+C,KAAM+uB,GAIrB3N,YAAa2N,GACX,IAAK/uB,KAAKi4C,aAAa,aAErB,YADAnpC,MAAMsS,YAAY2N,GAGpB,MAAM/X,EAAOupC,GAAiBvgD,KAAKqyB,aAAa,cAMhD,GAJIryB,KAAKygD,UAAYzgD,KAAKygD,SAASt/B,aAAenhB,MAChD8O,MAAMsS,YAAYphB,KAAKygD,UAGrB1xB,IAAO/uB,KAAK0gD,UAKd,OAJI3xB,EAAG5N,aAAenhB,MACpB8O,MAAMsS,YAAY2N,QAEpB/uB,KAAKygD,SAAW,MAIlBzgD,KAAKygD,SAAW1xB,EAChB/X,EAAK0nC,MAAM1+C,KAAM+uB,EAAI,KACf/uB,KAAKygD,UAAYzgD,KAAKygD,SAASt/B,aAAenhB,MAChD8O,MAAMsS,YAAYphB,KAAKygD,UAErBzgD,KAAK0gD,WAAW1pC,EAAKynC,MAAMz+C,KAAMA,KAAK0gD,WAC1C1gD,KAAK0gD,UAAY,KACjB1gD,KAAKygD,SAAW,Q,iBCrMhBE,GADL1H,I,MAAD,cACwBjoB,KAGtB/G,SACE,MAAM,YAAEgX,EAAF,UAAeoF,GAAcrmC,KAAK2K,QAAQ84B,OAChD,OAAOrS,IAAK;;;;eAID6P,EAAY4Y,QAAQpzB;;YAjEb5c,IACfA,EAAMk+B,YAeJ,KAdE3W,IAAK;;;;;;;;;;;;MAiEJwvB,CAAc,CAAE7Y,YAAa1B,EAAU0B;YAhD9Bl+B,IACfA,EAAMk+B,YACD3W,IAAK;;;;;;;;;;;;;;;;;;6BAkBavnB,EAAMk+B,YAAY1M;;;oBAG3BxN,aAAUhkB,EAAMk+B,YAAYmT,YAASn+C;;;gBAGzC8M,EAAMk+B,YAAY1M;;;;MAOzB,KAgBGwlB,CAAa,CAAE9Y,YAAa1B,EAAU0B;;;WAXzCjY,iBAAmB,CAAC,U,YAkB7BmG,eAAe4F,OAAO,aAAc8kB,KDyH7B,SAA4B9jD,EAAMikD,EAAoBr4C,EAAU,IACrE43C,GAAkBxjD,GAAQ,IAAIikD,EAAmBr4C,GEvLnDs4C,CAAkB,SARlB,cAA8BX,GAC5B1B,MAAMvK,EAAQplB,EAAI/R,GAChBlO,MAAM4vC,MAAMvK,EAAQplB,EAAI/R,GAExBm3B,EAAOjtB,gBAAgB,gBAM3B+O,eAAe4F,OAAO,WAAY2kB,IAElC,MAAMQ,WAAYhwB,KAShB9I,eACMloB,KAAKyjC,OAAOxC,YAAYQ,MAC1BzhC,KAAKyjC,OAAO4C,UACTC,WACA7J,QAAQ,IAAMz8B,KAAKyjC,OAAOxC,YAAY8F,gBAEzC/mC,KAAKyjC,OAAOxC,YAAY8F,eAI5B9c,SACE,MAAMwX,EAAQzhC,KAAKyjC,OAAOxC,YAAYQ,MACtC,OAAOrQ,IAAK;;;;;qBAKKqQ,EAAQ,QAAU;;;;OA1BjCuf,GACGzpC,WAAa,CAClBksB,OAAQ,CAAEhnC,KAAMzC,OAAQuqB,WAAW,IAFjCy8B,GAKGhxB,iBAAmB,CACxByT,OAAQ,CAAEhlC,SAAU,WA4BxBw3B,eAAe4F,OAAO,gBAAiBmlB,IC9CvC,MAAMvd,GAAS,IAAI+E,GAGnB1pC,OAAOmiD,oBAAsBxd,GAE7Byd,YAAc,CAAE10C,eAAgB,aAChC03B,EAAgBT,IJKT,UAAsB,OAAEA,IAC7B,MAAMuD,EAAY,IAAI7rC,QAAQC,IAC5B,MAAM+lD,EAAWtxC,YACf4zB,EAAOxC,YACP,YACA,EAAGp6B,eACGA,IACFzL,IACA+lD,SA2CF/R,EAAS,IAAIsB,GAAO,CAAElB,OArCb,CACb,CACE3yC,KAAM,MACNusC,KAAM,IACNoV,YAAa,IAAMxX,EACnB8J,SAAU,CACR,CACEj0C,KAAM,OACN03C,UAAW,YACXnL,KAAM,IAER,CACEvsC,KAAM,QACN03C,UAAW,cAEb,CAAE13C,KAAM,WAAY03C,UAAW,iBAC/B,CAAE13C,KAAM,SAAU03C,UAAW,cAAenL,KAAM,iBAClD,CAAEvsC,KAAM,UAAW03C,UAAW4J,GAAa/U,KAAM,eACjD,CACEvsC,KAAM,WACN03C,UAAW,gBACXiK,YAAanP,IACyB,MAAhC5L,EAAO4C,UAAU0B,aACnBsH,EAAWQ,WAAW,UAI5B,CACEhzC,KAAM,UACN03C,UAAW,eACXnL,KAAM,aACN0H,SAAU,CAAC,CAAEj0C,KAAM,0BAMSs3C,OAAQ,WAAYnhC,KAAK,IAG7D,OAFAo8B,EAAOxN,IAAImT,IACX3F,EAAOxN,IAAI2X,IACJnK,EIzDMgS,CAAa,CAAE3d,OAAMA,KAC7B4d,SAEPp3B,YACEmH,GAAK;6BACsBqS;IAE3BjoC,SAAS8lD,eAAe","file":"main.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t};\n\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t0: 0\n \t};\n\n\n\n \t// script path function\n \tfunction jsonpScriptSrc(chunkId) {\n \t\treturn __webpack_require__.p + \"\" + ({}[chunkId]||chunkId) + \".js\"\n \t}\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n \t// This file contains only the entry chunk.\n \t// The chunk loading function for additional chunks\n \t__webpack_require__.e = function requireEnsure(chunkId) {\n \t\tvar promises = [];\n\n\n \t\t// JSONP chunk loading for javascript\n\n \t\tvar installedChunkData = installedChunks[chunkId];\n \t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n \t\t\t// a Promise means \"currently loading\".\n \t\t\tif(installedChunkData) {\n \t\t\t\tpromises.push(installedChunkData[2]);\n \t\t\t} else {\n \t\t\t\t// setup Promise in chunk cache\n \t\t\t\tvar promise = new Promise(function(resolve, reject) {\n \t\t\t\t\tinstalledChunkData = installedChunks[chunkId] = [resolve, reject];\n \t\t\t\t});\n \t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n \t\t\t\t// start chunk loading\n \t\t\t\tvar script = document.createElement('script');\n \t\t\t\tvar onScriptComplete;\n\n \t\t\t\tscript.charset = 'utf-8';\n \t\t\t\tscript.timeout = 120;\n \t\t\t\tif (__webpack_require__.nc) {\n \t\t\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n \t\t\t\t}\n \t\t\t\tscript.src = jsonpScriptSrc(chunkId);\n\n \t\t\t\t// create error before stack unwound to get useful stacktrace later\n \t\t\t\tvar error = new Error();\n \t\t\t\tonScriptComplete = function (event) {\n \t\t\t\t\t// avoid mem leaks in IE.\n \t\t\t\t\tscript.onerror = script.onload = null;\n \t\t\t\t\tclearTimeout(timeout);\n \t\t\t\t\tvar chunk = installedChunks[chunkId];\n \t\t\t\t\tif(chunk !== 0) {\n \t\t\t\t\t\tif(chunk) {\n \t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n \t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n \t\t\t\t\t\t\terror.message = 'Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')';\n \t\t\t\t\t\t\terror.name = 'ChunkLoadError';\n \t\t\t\t\t\t\terror.type = errorType;\n \t\t\t\t\t\t\terror.request = realSrc;\n \t\t\t\t\t\t\tchunk[1](error);\n \t\t\t\t\t\t}\n \t\t\t\t\t\tinstalledChunks[chunkId] = undefined;\n \t\t\t\t\t}\n \t\t\t\t};\n \t\t\t\tvar timeout = setTimeout(function(){\n \t\t\t\t\tonScriptComplete({ type: 'timeout', target: script });\n \t\t\t\t}, 120000);\n \t\t\t\tscript.onerror = script.onload = onScriptComplete;\n \t\t\t\tdocument.head.appendChild(script);\n \t\t\t}\n \t\t}\n \t\treturn Promise.all(promises);\n \t};\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// on error function for async loading\n \t__webpack_require__.oe = function(err) { console.error(err); throw err; };\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 16);\n","/** MobX - (c) Michel Weststrate 2015 - 2019 - MIT Licensed */\nconst OBFUSCATED_ERROR = \"An invariant failed, however the error is obfuscated because this is a production build.\";\nconst EMPTY_ARRAY = [];\nObject.freeze(EMPTY_ARRAY);\nconst EMPTY_OBJECT = {};\nObject.freeze(EMPTY_OBJECT);\nfunction getNextId() {\n    return ++globalState.mobxGuid;\n}\nfunction fail(message) {\n    invariant(false, message);\n    throw \"X\"; // unreachable\n}\nfunction invariant(check, message) {\n    if (!check)\n        throw new Error(\"[mobx] \" + (message || OBFUSCATED_ERROR));\n}\n/**\n * Prints a deprecation message, but only one time.\n * Returns false if the deprecated message was already printed before\n */\nconst deprecatedMessages = [];\nfunction deprecated(msg, thing) {\n    if (process.env.NODE_ENV === \"production\")\n        return false;\n    if (thing) {\n        return deprecated(`'${msg}', use '${thing}' instead.`);\n    }\n    if (deprecatedMessages.indexOf(msg) !== -1)\n        return false;\n    deprecatedMessages.push(msg);\n    console.error(\"[mobx] Deprecated: \" + msg);\n    return true;\n}\n/**\n * Makes sure that the provided function is invoked at most once.\n */\nfunction once(func) {\n    let invoked = false;\n    return function () {\n        if (invoked)\n            return;\n        invoked = true;\n        return func.apply(this, arguments);\n    };\n}\nconst noop = () => { };\nfunction unique(list) {\n    const res = [];\n    list.forEach(item => {\n        if (res.indexOf(item) === -1)\n            res.push(item);\n    });\n    return res;\n}\nfunction isObject(value) {\n    return value !== null && typeof value === \"object\";\n}\nfunction isPlainObject(value) {\n    if (value === null || typeof value !== \"object\")\n        return false;\n    const proto = Object.getPrototypeOf(value);\n    return proto === Object.prototype || proto === null;\n}\nfunction addHiddenProp(object, propName, value) {\n    Object.defineProperty(object, propName, {\n        enumerable: false,\n        writable: true,\n        configurable: true,\n        value\n    });\n}\nfunction addHiddenFinalProp(object, propName, value) {\n    Object.defineProperty(object, propName, {\n        enumerable: false,\n        writable: false,\n        configurable: true,\n        value\n    });\n}\nfunction isPropertyConfigurable(object, prop) {\n    const descriptor = Object.getOwnPropertyDescriptor(object, prop);\n    return !descriptor || (descriptor.configurable !== false && descriptor.writable !== false);\n}\nfunction assertPropertyConfigurable(object, prop) {\n    if (process.env.NODE_ENV !== \"production\" && !isPropertyConfigurable(object, prop))\n        fail(`Cannot make property '${prop.toString()}' observable, it is not configurable and writable in the target object`);\n}\nfunction createInstanceofPredicate(name, clazz) {\n    const propName = \"isMobX\" + name;\n    clazz.prototype[propName] = true;\n    return function (x) {\n        return isObject(x) && x[propName] === true;\n    };\n}\n/**\n * Returns whether the argument is an array, disregarding observability.\n */\nfunction isArrayLike(x) {\n    return Array.isArray(x) || isObservableArray(x);\n}\nfunction isES6Map(thing) {\n    return thing instanceof Map;\n}\nfunction isES6Set(thing) {\n    return thing instanceof Set;\n}\n/**\n * Returns the following: own keys, prototype keys & own symbol keys, if they are enumerable.\n */\nfunction getPlainObjectKeys(object) {\n    const enumerables = new Set();\n    for (let key in object)\n        enumerables.add(key); // *all* enumerables\n    Object.getOwnPropertySymbols(object).forEach(k => {\n        if (Object.getOwnPropertyDescriptor(object, k).enumerable)\n            enumerables.add(k);\n    }); // *own* symbols\n    // Note: this implementation is missing enumerable, inherited, symbolic property names! That would however pretty expensive to add,\n    // as there is no efficient iterator that returns *all* properties\n    return Array.from(enumerables);\n}\nfunction stringifyKey(key) {\n    if (key && key.toString)\n        return key.toString();\n    else\n        return new String(key).toString();\n}\nfunction getMapLikeKeys(map) {\n    if (isPlainObject(map))\n        return Object.keys(map);\n    if (Array.isArray(map))\n        return map.map(([key]) => key);\n    if (isES6Map(map) || isObservableMap(map))\n        return Array.from(map.keys());\n    return fail(`Cannot get keys from '${map}'`);\n}\nfunction toPrimitive(value) {\n    return value === null ? null : typeof value === \"object\" ? \"\" + value : value;\n}\n\nconst $mobx = Symbol(\"mobx administration\");\nclass Atom {\n    /**\n     * Create a new atom. For debugging purposes it is recommended to give it a name.\n     * The onBecomeObserved and onBecomeUnobserved callbacks can be used for resource management.\n     */\n    constructor(name = \"Atom@\" + getNextId()) {\n        this.name = name;\n        this.isPendingUnobservation = false; // for effective unobserving. BaseAtom has true, for extra optimization, so its onBecomeUnobserved never gets called, because it's not needed\n        this.isBeingObserved = false;\n        this.observers = new Set();\n        this.diffValue = 0;\n        this.lastAccessedBy = 0;\n        this.lowestObserverState = IDerivationState.NOT_TRACKING;\n    }\n    onBecomeObserved() {\n        if (this.onBecomeObservedListeners) {\n            this.onBecomeObservedListeners.forEach(listener => listener());\n        }\n    }\n    onBecomeUnobserved() {\n        if (this.onBecomeUnobservedListeners) {\n            this.onBecomeUnobservedListeners.forEach(listener => listener());\n        }\n    }\n    /**\n     * Invoke this method to notify mobx that your atom has been used somehow.\n     * Returns true if there is currently a reactive context.\n     */\n    reportObserved() {\n        return reportObserved(this);\n    }\n    /**\n     * Invoke this method _after_ this method has changed to signal mobx that all its observers should invalidate.\n     */\n    reportChanged() {\n        startBatch();\n        propagateChanged(this);\n        endBatch();\n    }\n    toString() {\n        return this.name;\n    }\n}\nconst isAtom = createInstanceofPredicate(\"Atom\", Atom);\nfunction createAtom(name, onBecomeObservedHandler = noop, onBecomeUnobservedHandler = noop) {\n    const atom = new Atom(name);\n    // default `noop` listener will not initialize the hook Set\n    if (onBecomeObservedHandler !== noop) {\n        onBecomeObserved(atom, onBecomeObservedHandler);\n    }\n    if (onBecomeUnobservedHandler !== noop) {\n        onBecomeUnobserved(atom, onBecomeUnobservedHandler);\n    }\n    return atom;\n}\n\nfunction identityComparer(a, b) {\n    return a === b;\n}\nfunction structuralComparer(a, b) {\n    return deepEqual(a, b);\n}\nfunction shallowComparer(a, b) {\n    return deepEqual(a, b, 1);\n}\nfunction defaultComparer(a, b) {\n    return Object.is(a, b);\n}\nconst comparer = {\n    identity: identityComparer,\n    structural: structuralComparer,\n    default: defaultComparer,\n    shallow: shallowComparer\n};\n\nconst mobxDidRunLazyInitializersSymbol = Symbol(\"mobx did run lazy initializers\");\nconst mobxPendingDecorators = Symbol(\"mobx pending decorators\");\nconst enumerableDescriptorCache = {};\nconst nonEnumerableDescriptorCache = {};\nfunction createPropertyInitializerDescriptor(prop, enumerable) {\n    const cache = enumerable ? enumerableDescriptorCache : nonEnumerableDescriptorCache;\n    return (cache[prop] ||\n        (cache[prop] = {\n            configurable: true,\n            enumerable: enumerable,\n            get() {\n                initializeInstance(this);\n                return this[prop];\n            },\n            set(value) {\n                initializeInstance(this);\n                this[prop] = value;\n            }\n        }));\n}\nfunction initializeInstance(target) {\n    if (target[mobxDidRunLazyInitializersSymbol] === true)\n        return;\n    const decorators = target[mobxPendingDecorators];\n    if (decorators) {\n        addHiddenProp(target, mobxDidRunLazyInitializersSymbol, true);\n        // Build property key array from both strings and symbols\n        const keys = [...Object.getOwnPropertySymbols(decorators), ...Object.keys(decorators)];\n        for (const key of keys) {\n            const d = decorators[key];\n            d.propertyCreator(target, d.prop, d.descriptor, d.decoratorTarget, d.decoratorArguments);\n        }\n    }\n}\nfunction createPropDecorator(propertyInitiallyEnumerable, propertyCreator) {\n    return function decoratorFactory() {\n        let decoratorArguments;\n        const decorator = function decorate(target, prop, descriptor, applyImmediately\n        // This is a special parameter to signal the direct application of a decorator, allow extendObservable to skip the entire type decoration part,\n        // as the instance to apply the decorator to equals the target\n        ) {\n            if (applyImmediately === true) {\n                propertyCreator(target, prop, descriptor, target, decoratorArguments);\n                return null;\n            }\n            if (process.env.NODE_ENV !== \"production\" && !quacksLikeADecorator(arguments))\n                fail(\"This function is a decorator, but it wasn't invoked like a decorator\");\n            if (!Object.prototype.hasOwnProperty.call(target, mobxPendingDecorators)) {\n                const inheritedDecorators = target[mobxPendingDecorators];\n                addHiddenProp(target, mobxPendingDecorators, Object.assign({}, inheritedDecorators));\n            }\n            target[mobxPendingDecorators][prop] = {\n                prop,\n                propertyCreator,\n                descriptor,\n                decoratorTarget: target,\n                decoratorArguments\n            };\n            return createPropertyInitializerDescriptor(prop, propertyInitiallyEnumerable);\n        };\n        if (quacksLikeADecorator(arguments)) {\n            // @decorator\n            decoratorArguments = EMPTY_ARRAY;\n            return decorator.apply(null, arguments);\n        }\n        else {\n            // @decorator(args)\n            decoratorArguments = Array.prototype.slice.call(arguments);\n            return decorator;\n        }\n    };\n}\nfunction quacksLikeADecorator(args) {\n    return (((args.length === 2 || args.length === 3) &&\n        (typeof args[1] === \"string\" || typeof args[1] === \"symbol\")) ||\n        (args.length === 4 && args[3] === true));\n}\n\nfunction deepEnhancer(v, _, name) {\n    // it is an observable already, done\n    if (isObservable(v))\n        return v;\n    // something that can be converted and mutated?\n    if (Array.isArray(v))\n        return observable.array(v, { name });\n    if (isPlainObject(v))\n        return observable.object(v, undefined, { name });\n    if (isES6Map(v))\n        return observable.map(v, { name });\n    if (isES6Set(v))\n        return observable.set(v, { name });\n    return v;\n}\nfunction shallowEnhancer(v, _, name) {\n    if (v === undefined || v === null)\n        return v;\n    if (isObservableObject(v) || isObservableArray(v) || isObservableMap(v) || isObservableSet(v))\n        return v;\n    if (Array.isArray(v))\n        return observable.array(v, { name, deep: false });\n    if (isPlainObject(v))\n        return observable.object(v, undefined, { name, deep: false });\n    if (isES6Map(v))\n        return observable.map(v, { name, deep: false });\n    if (isES6Set(v))\n        return observable.set(v, { name, deep: false });\n    return fail(process.env.NODE_ENV !== \"production\" &&\n        \"The shallow modifier / decorator can only used in combination with arrays, objects, maps and sets\");\n}\nfunction referenceEnhancer(newValue) {\n    // never turn into an observable\n    return newValue;\n}\nfunction refStructEnhancer(v, oldValue, name) {\n    if (process.env.NODE_ENV !== \"production\" && isObservable(v))\n        throw `observable.struct should not be used with observable values`;\n    if (deepEqual(v, oldValue))\n        return oldValue;\n    return v;\n}\n\nfunction createDecoratorForEnhancer(enhancer) {\n    invariant(enhancer);\n    const decorator = createPropDecorator(true, (target, propertyName, descriptor, _decoratorTarget, decoratorArgs) => {\n        if (process.env.NODE_ENV !== \"production\") {\n            invariant(!descriptor || !descriptor.get, `@observable cannot be used on getter (property \"${stringifyKey(propertyName)}\"), use @computed instead.`);\n        }\n        const initialValue = descriptor\n            ? descriptor.initializer\n                ? descriptor.initializer.call(target)\n                : descriptor.value\n            : undefined;\n        asObservableObject(target).addObservableProp(propertyName, initialValue, enhancer);\n    });\n    const res = \n    // Extra process checks, as this happens during module initialization\n    typeof process !== \"undefined\" && process.env && process.env.NODE_ENV !== \"production\"\n        ? function observableDecorator() {\n            // This wrapper function is just to detect illegal decorator invocations, deprecate in a next version\n            // and simply return the created prop decorator\n            if (arguments.length < 2)\n                return fail(\"Incorrect decorator invocation. @observable decorator doesn't expect any arguments\");\n            return decorator.apply(null, arguments);\n        }\n        : decorator;\n    res.enhancer = enhancer;\n    return res;\n}\n\n// Predefined bags of create observable options, to avoid allocating temporarily option objects\n// in the majority of cases\nconst defaultCreateObservableOptions = {\n    deep: true,\n    name: undefined,\n    defaultDecorator: undefined,\n    proxy: true\n};\nObject.freeze(defaultCreateObservableOptions);\nfunction assertValidOption(key) {\n    if (!/^(deep|name|equals|defaultDecorator|proxy)$/.test(key))\n        fail(`invalid option for (extend)observable: ${key}`);\n}\nfunction asCreateObservableOptions(thing) {\n    if (thing === null || thing === undefined)\n        return defaultCreateObservableOptions;\n    if (typeof thing === \"string\")\n        return { name: thing, deep: true, proxy: true };\n    if (process.env.NODE_ENV !== \"production\") {\n        if (typeof thing !== \"object\")\n            return fail(\"expected options object\");\n        Object.keys(thing).forEach(assertValidOption);\n    }\n    return thing;\n}\nconst deepDecorator = createDecoratorForEnhancer(deepEnhancer);\nconst shallowDecorator = createDecoratorForEnhancer(shallowEnhancer);\nconst refDecorator = createDecoratorForEnhancer(referenceEnhancer);\nconst refStructDecorator = createDecoratorForEnhancer(refStructEnhancer);\nfunction getEnhancerFromOptions(options) {\n    return options.defaultDecorator\n        ? options.defaultDecorator.enhancer\n        : options.deep === false\n            ? referenceEnhancer\n            : deepEnhancer;\n}\n/**\n * Turns an object, array or function into a reactive structure.\n * @param v the value which should become observable.\n */\nfunction createObservable(v, arg2, arg3) {\n    // @observable someProp;\n    if (typeof arguments[1] === \"string\" || typeof arguments[1] === \"symbol\") {\n        return deepDecorator.apply(null, arguments);\n    }\n    // it is an observable already, done\n    if (isObservable(v))\n        return v;\n    // something that can be converted and mutated?\n    const res = isPlainObject(v)\n        ? observable.object(v, arg2, arg3)\n        : Array.isArray(v)\n            ? observable.array(v, arg2)\n            : isES6Map(v)\n                ? observable.map(v, arg2)\n                : isES6Set(v)\n                    ? observable.set(v, arg2)\n                    : v;\n    // this value could be converted to a new observable data structure, return it\n    if (res !== v)\n        return res;\n    // otherwise, just box it\n    fail(process.env.NODE_ENV !== \"production\" &&\n        `The provided value could not be converted into an observable. If you want just create an observable reference to the object use 'observable.box(value)'`);\n}\nconst observableFactories = {\n    box(value, options) {\n        if (arguments.length > 2)\n            incorrectlyUsedAsDecorator(\"box\");\n        const o = asCreateObservableOptions(options);\n        return new ObservableValue(value, getEnhancerFromOptions(o), o.name, true, o.equals);\n    },\n    array(initialValues, options) {\n        if (arguments.length > 2)\n            incorrectlyUsedAsDecorator(\"array\");\n        const o = asCreateObservableOptions(options);\n        return createObservableArray(initialValues, getEnhancerFromOptions(o), o.name);\n    },\n    map(initialValues, options) {\n        if (arguments.length > 2)\n            incorrectlyUsedAsDecorator(\"map\");\n        const o = asCreateObservableOptions(options);\n        return new ObservableMap(initialValues, getEnhancerFromOptions(o), o.name);\n    },\n    set(initialValues, options) {\n        if (arguments.length > 2)\n            incorrectlyUsedAsDecorator(\"set\");\n        const o = asCreateObservableOptions(options);\n        return new ObservableSet(initialValues, getEnhancerFromOptions(o), o.name);\n    },\n    object(props, decorators, options) {\n        if (typeof arguments[1] === \"string\")\n            incorrectlyUsedAsDecorator(\"object\");\n        const o = asCreateObservableOptions(options);\n        if (o.proxy === false) {\n            return extendObservable({}, props, decorators, o);\n        }\n        else {\n            const defaultDecorator = getDefaultDecoratorFromObjectOptions(o);\n            const base = extendObservable({}, undefined, undefined, o);\n            const proxy = createDynamicObservableObject(base);\n            extendObservableObjectWithProperties(proxy, props, decorators, defaultDecorator);\n            return proxy;\n        }\n    },\n    ref: refDecorator,\n    shallow: shallowDecorator,\n    deep: deepDecorator,\n    struct: refStructDecorator\n};\nconst observable = createObservable;\n// weird trick to keep our typings nicely with our funcs, and still extend the observable function\nObject.keys(observableFactories).forEach(name => (observable[name] = observableFactories[name]));\nfunction incorrectlyUsedAsDecorator(methodName) {\n    fail(\n    // process.env.NODE_ENV !== \"production\" &&\n    `Expected one or two arguments to observable.${methodName}. Did you accidentally try to use observable.${methodName} as decorator?`);\n}\n\nconst computedDecorator = createPropDecorator(false, (instance, propertyName, descriptor, decoratorTarget, decoratorArgs) => {\n    const { get, set } = descriptor; // initialValue is the descriptor for get / set props\n    // Optimization: faster on decorator target or instance? Assuming target\n    // Optimization: find out if declaring on instance isn't just faster. (also makes the property descriptor simpler). But, more memory usage..\n    // Forcing instance now, fixes hot reloadig issues on React Native:\n    const options = decoratorArgs[0] || {};\n    asObservableObject(instance).addComputedProp(instance, propertyName, Object.assign({ get,\n        set, context: instance }, options));\n});\nconst computedStructDecorator = computedDecorator({ equals: comparer.structural });\n/**\n * Decorator for class properties: @computed get value() { return expr; }.\n * For legacy purposes also invokable as ES5 observable created: `computed(() => expr)`;\n */\nconst computed = function computed(arg1, arg2, arg3) {\n    if (typeof arg2 === \"string\") {\n        // @computed\n        return computedDecorator.apply(null, arguments);\n    }\n    if (arg1 !== null && typeof arg1 === \"object\" && arguments.length === 1) {\n        // @computed({ options })\n        return computedDecorator.apply(null, arguments);\n    }\n    // computed(expr, options?)\n    if (process.env.NODE_ENV !== \"production\") {\n        invariant(typeof arg1 === \"function\", \"First argument to `computed` should be an expression.\");\n        invariant(arguments.length < 3, \"Computed takes one or two arguments if used as function\");\n    }\n    const opts = typeof arg2 === \"object\" ? arg2 : {};\n    opts.get = arg1;\n    opts.set = typeof arg2 === \"function\" ? arg2 : opts.set;\n    opts.name = opts.name || arg1.name || \"\"; /* for generated name */\n    return new ComputedValue(opts);\n};\ncomputed.struct = computedStructDecorator;\n\nvar IDerivationState;\n(function (IDerivationState) {\n    // before being run or (outside batch and not being observed)\n    // at this point derivation is not holding any data about dependency tree\n    IDerivationState[IDerivationState[\"NOT_TRACKING\"] = -1] = \"NOT_TRACKING\";\n    // no shallow dependency changed since last computation\n    // won't recalculate derivation\n    // this is what makes mobx fast\n    IDerivationState[IDerivationState[\"UP_TO_DATE\"] = 0] = \"UP_TO_DATE\";\n    // some deep dependency changed, but don't know if shallow dependency changed\n    // will require to check first if UP_TO_DATE or POSSIBLY_STALE\n    // currently only ComputedValue will propagate POSSIBLY_STALE\n    //\n    // having this state is second big optimization:\n    // don't have to recompute on every dependency change, but only when it's needed\n    IDerivationState[IDerivationState[\"POSSIBLY_STALE\"] = 1] = \"POSSIBLY_STALE\";\n    // A shallow dependency has changed since last computation and the derivation\n    // will need to recompute when it's needed next.\n    IDerivationState[IDerivationState[\"STALE\"] = 2] = \"STALE\";\n})(IDerivationState || (IDerivationState = {}));\nvar TraceMode;\n(function (TraceMode) {\n    TraceMode[TraceMode[\"NONE\"] = 0] = \"NONE\";\n    TraceMode[TraceMode[\"LOG\"] = 1] = \"LOG\";\n    TraceMode[TraceMode[\"BREAK\"] = 2] = \"BREAK\";\n})(TraceMode || (TraceMode = {}));\nclass CaughtException {\n    constructor(cause) {\n        this.cause = cause;\n        // Empty\n    }\n}\nfunction isCaughtException(e) {\n    return e instanceof CaughtException;\n}\n/**\n * Finds out whether any dependency of the derivation has actually changed.\n * If dependenciesState is 1 then it will recalculate dependencies,\n * if any dependency changed it will propagate it by changing dependenciesState to 2.\n *\n * By iterating over the dependencies in the same order that they were reported and\n * stopping on the first change, all the recalculations are only called for ComputedValues\n * that will be tracked by derivation. That is because we assume that if the first x\n * dependencies of the derivation doesn't change then the derivation should run the same way\n * up until accessing x-th dependency.\n */\nfunction shouldCompute(derivation) {\n    switch (derivation.dependenciesState) {\n        case IDerivationState.UP_TO_DATE:\n            return false;\n        case IDerivationState.NOT_TRACKING:\n        case IDerivationState.STALE:\n            return true;\n        case IDerivationState.POSSIBLY_STALE: {\n            // state propagation can occur outside of action/reactive context #2195\n            const prevAllowStateReads = allowStateReadsStart(true);\n            const prevUntracked = untrackedStart(); // no need for those computeds to be reported, they will be picked up in trackDerivedFunction.\n            const obs = derivation.observing, l = obs.length;\n            for (let i = 0; i < l; i++) {\n                const obj = obs[i];\n                if (isComputedValue(obj)) {\n                    if (globalState.disableErrorBoundaries) {\n                        obj.get();\n                    }\n                    else {\n                        try {\n                            obj.get();\n                        }\n                        catch (e) {\n                            // we are not interested in the value *or* exception at this moment, but if there is one, notify all\n                            untrackedEnd(prevUntracked);\n                            allowStateReadsEnd(prevAllowStateReads);\n                            return true;\n                        }\n                    }\n                    // if ComputedValue `obj` actually changed it will be computed and propagated to its observers.\n                    // and `derivation` is an observer of `obj`\n                    // invariantShouldCompute(derivation)\n                    if (derivation.dependenciesState === IDerivationState.STALE) {\n                        untrackedEnd(prevUntracked);\n                        allowStateReadsEnd(prevAllowStateReads);\n                        return true;\n                    }\n                }\n            }\n            changeDependenciesStateTo0(derivation);\n            untrackedEnd(prevUntracked);\n            allowStateReadsEnd(prevAllowStateReads);\n            return false;\n        }\n    }\n}\n// function invariantShouldCompute(derivation: IDerivation) {\n//     const newDepState = (derivation as any).dependenciesState\n//     if (\n//         process.env.NODE_ENV === \"production\" &&\n//         (newDepState === IDerivationState.POSSIBLY_STALE ||\n//             newDepState === IDerivationState.NOT_TRACKING)\n//     )\n//         fail(\"Illegal dependency state\")\n// }\nfunction isComputingDerivation() {\n    return globalState.trackingDerivation !== null; // filter out actions inside computations\n}\nfunction checkIfStateModificationsAreAllowed(atom) {\n    const hasObservers = atom.observers.size > 0;\n    // Should never be possible to change an observed observable from inside computed, see #798\n    if (globalState.computationDepth > 0 && hasObservers)\n        fail(process.env.NODE_ENV !== \"production\" &&\n            `Computed values are not allowed to cause side effects by changing observables that are already being observed. Tried to modify: ${atom.name}`);\n    // Should not be possible to change observed state outside strict mode, except during initialization, see #563\n    if (!globalState.allowStateChanges && (hasObservers || globalState.enforceActions === \"strict\"))\n        fail(process.env.NODE_ENV !== \"production\" &&\n            (globalState.enforceActions\n                ? \"Since strict-mode is enabled, changing observed observable values outside actions is not allowed. Please wrap the code in an `action` if this change is intended. Tried to modify: \"\n                : \"Side effects like changing state are not allowed at this point. Are you trying to modify state from, for example, the render function of a React component? Tried to modify: \") +\n                atom.name);\n}\nfunction checkIfStateReadsAreAllowed(observable) {\n    if (process.env.NODE_ENV !== \"production\" &&\n        !globalState.allowStateReads &&\n        globalState.observableRequiresReaction) {\n        console.warn(`[mobx] Observable ${observable.name} being read outside a reactive context`);\n    }\n}\n/**\n * Executes the provided function `f` and tracks which observables are being accessed.\n * The tracking information is stored on the `derivation` object and the derivation is registered\n * as observer of any of the accessed observables.\n */\nfunction trackDerivedFunction(derivation, f, context) {\n    const prevAllowStateReads = allowStateReadsStart(true);\n    // pre allocate array allocation + room for variation in deps\n    // array will be trimmed by bindDependencies\n    changeDependenciesStateTo0(derivation);\n    derivation.newObserving = new Array(derivation.observing.length + 100);\n    derivation.unboundDepsCount = 0;\n    derivation.runId = ++globalState.runId;\n    const prevTracking = globalState.trackingDerivation;\n    globalState.trackingDerivation = derivation;\n    let result;\n    if (globalState.disableErrorBoundaries === true) {\n        result = f.call(context);\n    }\n    else {\n        try {\n            result = f.call(context);\n        }\n        catch (e) {\n            result = new CaughtException(e);\n        }\n    }\n    globalState.trackingDerivation = prevTracking;\n    bindDependencies(derivation);\n    warnAboutDerivationWithoutDependencies(derivation);\n    allowStateReadsEnd(prevAllowStateReads);\n    return result;\n}\nfunction warnAboutDerivationWithoutDependencies(derivation) {\n    if (process.env.NODE_ENV === \"production\")\n        return;\n    if (derivation.observing.length !== 0)\n        return;\n    if (globalState.reactionRequiresObservable || derivation.requiresObservable) {\n        console.warn(`[mobx] Derivation ${derivation.name} is created/updated without reading any observable value`);\n    }\n}\n/**\n * diffs newObserving with observing.\n * update observing to be newObserving with unique observables\n * notify observers that become observed/unobserved\n */\nfunction bindDependencies(derivation) {\n    // invariant(derivation.dependenciesState !== IDerivationState.NOT_TRACKING, \"INTERNAL ERROR bindDependencies expects derivation.dependenciesState !== -1\");\n    const prevObserving = derivation.observing;\n    const observing = (derivation.observing = derivation.newObserving);\n    let lowestNewObservingDerivationState = IDerivationState.UP_TO_DATE;\n    // Go through all new observables and check diffValue: (this list can contain duplicates):\n    //   0: first occurrence, change to 1 and keep it\n    //   1: extra occurrence, drop it\n    let i0 = 0, l = derivation.unboundDepsCount;\n    for (let i = 0; i < l; i++) {\n        const dep = observing[i];\n        if (dep.diffValue === 0) {\n            dep.diffValue = 1;\n            if (i0 !== i)\n                observing[i0] = dep;\n            i0++;\n        }\n        // Upcast is 'safe' here, because if dep is IObservable, `dependenciesState` will be undefined,\n        // not hitting the condition\n        if (dep.dependenciesState > lowestNewObservingDerivationState) {\n            lowestNewObservingDerivationState = dep.dependenciesState;\n        }\n    }\n    observing.length = i0;\n    derivation.newObserving = null; // newObserving shouldn't be needed outside tracking (statement moved down to work around FF bug, see #614)\n    // Go through all old observables and check diffValue: (it is unique after last bindDependencies)\n    //   0: it's not in new observables, unobserve it\n    //   1: it keeps being observed, don't want to notify it. change to 0\n    l = prevObserving.length;\n    while (l--) {\n        const dep = prevObserving[l];\n        if (dep.diffValue === 0) {\n            removeObserver(dep, derivation);\n        }\n        dep.diffValue = 0;\n    }\n    // Go through all new observables and check diffValue: (now it should be unique)\n    //   0: it was set to 0 in last loop. don't need to do anything.\n    //   1: it wasn't observed, let's observe it. set back to 0\n    while (i0--) {\n        const dep = observing[i0];\n        if (dep.diffValue === 1) {\n            dep.diffValue = 0;\n            addObserver(dep, derivation);\n        }\n    }\n    // Some new observed derivations may become stale during this derivation computation\n    // so they have had no chance to propagate staleness (#916)\n    if (lowestNewObservingDerivationState !== IDerivationState.UP_TO_DATE) {\n        derivation.dependenciesState = lowestNewObservingDerivationState;\n        derivation.onBecomeStale();\n    }\n}\nfunction clearObserving(derivation) {\n    // invariant(globalState.inBatch > 0, \"INTERNAL ERROR clearObserving should be called only inside batch\");\n    const obs = derivation.observing;\n    derivation.observing = [];\n    let i = obs.length;\n    while (i--)\n        removeObserver(obs[i], derivation);\n    derivation.dependenciesState = IDerivationState.NOT_TRACKING;\n}\nfunction untracked(action) {\n    const prev = untrackedStart();\n    try {\n        return action();\n    }\n    finally {\n        untrackedEnd(prev);\n    }\n}\nfunction untrackedStart() {\n    const prev = globalState.trackingDerivation;\n    globalState.trackingDerivation = null;\n    return prev;\n}\nfunction untrackedEnd(prev) {\n    globalState.trackingDerivation = prev;\n}\nfunction allowStateReadsStart(allowStateReads) {\n    const prev = globalState.allowStateReads;\n    globalState.allowStateReads = allowStateReads;\n    return prev;\n}\nfunction allowStateReadsEnd(prev) {\n    globalState.allowStateReads = prev;\n}\n/**\n * needed to keep `lowestObserverState` correct. when changing from (2 or 1) to 0\n *\n */\nfunction changeDependenciesStateTo0(derivation) {\n    if (derivation.dependenciesState === IDerivationState.UP_TO_DATE)\n        return;\n    derivation.dependenciesState = IDerivationState.UP_TO_DATE;\n    const obs = derivation.observing;\n    let i = obs.length;\n    while (i--)\n        obs[i].lowestObserverState = IDerivationState.UP_TO_DATE;\n}\n\n// we don't use globalState for these in order to avoid possible issues with multiple\n// mobx versions\nlet currentActionId = 0;\nlet nextActionId = 1;\nfunction createAction(actionName, fn, ref) {\n    if (process.env.NODE_ENV !== \"production\") {\n        invariant(typeof fn === \"function\", \"`action` can only be invoked on functions\");\n        if (typeof actionName !== \"string\" || !actionName)\n            fail(`actions should have valid names, got: '${actionName}'`);\n    }\n    const res = function () {\n        return executeAction(actionName, fn, ref || this, arguments);\n    };\n    res.isMobxAction = true;\n    return res;\n}\nfunction executeAction(actionName, fn, scope, args) {\n    const runInfo = _startAction(actionName, scope, args);\n    try {\n        return fn.apply(scope, args);\n    }\n    catch (err) {\n        runInfo.error = err;\n        throw err;\n    }\n    finally {\n        _endAction(runInfo);\n    }\n}\nfunction _startAction(actionName, scope, args) {\n    const notifySpy = isSpyEnabled() && !!actionName;\n    let startTime = 0;\n    if (notifySpy && process.env.NODE_ENV !== \"production\") {\n        startTime = Date.now();\n        const l = (args && args.length) || 0;\n        const flattendArgs = new Array(l);\n        if (l > 0)\n            for (let i = 0; i < l; i++)\n                flattendArgs[i] = args[i];\n        spyReportStart({\n            type: \"action\",\n            name: actionName,\n            object: scope,\n            arguments: flattendArgs\n        });\n    }\n    const prevDerivation = untrackedStart();\n    startBatch();\n    const prevAllowStateChanges = allowStateChangesStart(true);\n    const prevAllowStateReads = allowStateReadsStart(true);\n    const runInfo = {\n        prevDerivation,\n        prevAllowStateChanges,\n        prevAllowStateReads,\n        notifySpy,\n        startTime,\n        actionId: nextActionId++,\n        parentActionId: currentActionId\n    };\n    currentActionId = runInfo.actionId;\n    return runInfo;\n}\nfunction _endAction(runInfo) {\n    if (currentActionId !== runInfo.actionId) {\n        fail(\"invalid action stack. did you forget to finish an action?\");\n    }\n    currentActionId = runInfo.parentActionId;\n    if (runInfo.error !== undefined) {\n        globalState.suppressReactionErrors = true;\n    }\n    allowStateChangesEnd(runInfo.prevAllowStateChanges);\n    allowStateReadsEnd(runInfo.prevAllowStateReads);\n    endBatch();\n    untrackedEnd(runInfo.prevDerivation);\n    if (runInfo.notifySpy && process.env.NODE_ENV !== \"production\") {\n        spyReportEnd({ time: Date.now() - runInfo.startTime });\n    }\n    globalState.suppressReactionErrors = false;\n}\nfunction allowStateChanges(allowStateChanges, func) {\n    const prev = allowStateChangesStart(allowStateChanges);\n    let res;\n    try {\n        res = func();\n    }\n    finally {\n        allowStateChangesEnd(prev);\n    }\n    return res;\n}\nfunction allowStateChangesStart(allowStateChanges) {\n    const prev = globalState.allowStateChanges;\n    globalState.allowStateChanges = allowStateChanges;\n    return prev;\n}\nfunction allowStateChangesEnd(prev) {\n    globalState.allowStateChanges = prev;\n}\nfunction allowStateChangesInsideComputed(func) {\n    const prev = globalState.computationDepth;\n    globalState.computationDepth = 0;\n    let res;\n    try {\n        res = func();\n    }\n    finally {\n        globalState.computationDepth = prev;\n    }\n    return res;\n}\n\nclass ObservableValue extends Atom {\n    constructor(value, enhancer, name = \"ObservableValue@\" + getNextId(), notifySpy = true, equals = comparer.default) {\n        super(name);\n        this.enhancer = enhancer;\n        this.name = name;\n        this.equals = equals;\n        this.hasUnreportedChange = false;\n        this.value = enhancer(value, undefined, name);\n        if (notifySpy && isSpyEnabled() && process.env.NODE_ENV !== \"production\") {\n            // only notify spy if this is a stand-alone observable\n            spyReport({ type: \"create\", name: this.name, newValue: \"\" + this.value });\n        }\n    }\n    dehanceValue(value) {\n        if (this.dehancer !== undefined)\n            return this.dehancer(value);\n        return value;\n    }\n    set(newValue) {\n        const oldValue = this.value;\n        newValue = this.prepareNewValue(newValue);\n        if (newValue !== globalState.UNCHANGED) {\n            const notifySpy = isSpyEnabled();\n            if (notifySpy && process.env.NODE_ENV !== \"production\") {\n                spyReportStart({\n                    type: \"update\",\n                    name: this.name,\n                    newValue,\n                    oldValue\n                });\n            }\n            this.setNewValue(newValue);\n            if (notifySpy && process.env.NODE_ENV !== \"production\")\n                spyReportEnd();\n        }\n    }\n    prepareNewValue(newValue) {\n        checkIfStateModificationsAreAllowed(this);\n        if (hasInterceptors(this)) {\n            const change = interceptChange(this, {\n                object: this,\n                type: \"update\",\n                newValue\n            });\n            if (!change)\n                return globalState.UNCHANGED;\n            newValue = change.newValue;\n        }\n        // apply modifier\n        newValue = this.enhancer(newValue, this.value, this.name);\n        return this.equals(this.value, newValue) ? globalState.UNCHANGED : newValue;\n    }\n    setNewValue(newValue) {\n        const oldValue = this.value;\n        this.value = newValue;\n        this.reportChanged();\n        if (hasListeners(this)) {\n            notifyListeners(this, {\n                type: \"update\",\n                object: this,\n                newValue,\n                oldValue\n            });\n        }\n    }\n    get() {\n        this.reportObserved();\n        return this.dehanceValue(this.value);\n    }\n    intercept(handler) {\n        return registerInterceptor(this, handler);\n    }\n    observe(listener, fireImmediately) {\n        if (fireImmediately)\n            listener({\n                object: this,\n                type: \"update\",\n                newValue: this.value,\n                oldValue: undefined\n            });\n        return registerListener(this, listener);\n    }\n    toJSON() {\n        return this.get();\n    }\n    toString() {\n        return `${this.name}[${this.value}]`;\n    }\n    valueOf() {\n        return toPrimitive(this.get());\n    }\n    [Symbol.toPrimitive]() {\n        return this.valueOf();\n    }\n}\nconst isObservableValue = createInstanceofPredicate(\"ObservableValue\", ObservableValue);\n\n/**\n * A node in the state dependency root that observes other nodes, and can be observed itself.\n *\n * ComputedValue will remember the result of the computation for the duration of the batch, or\n * while being observed.\n *\n * During this time it will recompute only when one of its direct dependencies changed,\n * but only when it is being accessed with `ComputedValue.get()`.\n *\n * Implementation description:\n * 1. First time it's being accessed it will compute and remember result\n *    give back remembered result until 2. happens\n * 2. First time any deep dependency change, propagate POSSIBLY_STALE to all observers, wait for 3.\n * 3. When it's being accessed, recompute if any shallow dependency changed.\n *    if result changed: propagate STALE to all observers, that were POSSIBLY_STALE from the last step.\n *    go to step 2. either way\n *\n * If at any point it's outside batch and it isn't observed: reset everything and go to 1.\n */\nclass ComputedValue {\n    /**\n     * Create a new computed value based on a function expression.\n     *\n     * The `name` property is for debug purposes only.\n     *\n     * The `equals` property specifies the comparer function to use to determine if a newly produced\n     * value differs from the previous value. Two comparers are provided in the library; `defaultComparer`\n     * compares based on identity comparison (===), and `structualComparer` deeply compares the structure.\n     * Structural comparison can be convenient if you always produce a new aggregated object and\n     * don't want to notify observers if it is structurally the same.\n     * This is useful for working with vectors, mouse coordinates etc.\n     */\n    constructor(options) {\n        this.dependenciesState = IDerivationState.NOT_TRACKING;\n        this.observing = []; // nodes we are looking at. Our value depends on these nodes\n        this.newObserving = null; // during tracking it's an array with new observed observers\n        this.isBeingObserved = false;\n        this.isPendingUnobservation = false;\n        this.observers = new Set();\n        this.diffValue = 0;\n        this.runId = 0;\n        this.lastAccessedBy = 0;\n        this.lowestObserverState = IDerivationState.UP_TO_DATE;\n        this.unboundDepsCount = 0;\n        this.__mapid = \"#\" + getNextId();\n        this.value = new CaughtException(null);\n        this.isComputing = false; // to check for cycles\n        this.isRunningSetter = false;\n        this.isTracing = TraceMode.NONE;\n        invariant(options.get, \"missing option for computed: get\");\n        this.derivation = options.get;\n        this.name = options.name || \"ComputedValue@\" + getNextId();\n        if (options.set)\n            this.setter = createAction(this.name + \"-setter\", options.set);\n        this.equals =\n            options.equals ||\n                (options.compareStructural || options.struct\n                    ? comparer.structural\n                    : comparer.default);\n        this.scope = options.context;\n        this.requiresReaction = !!options.requiresReaction;\n        this.keepAlive = !!options.keepAlive;\n    }\n    onBecomeStale() {\n        propagateMaybeChanged(this);\n    }\n    onBecomeObserved() {\n        if (this.onBecomeObservedListeners) {\n            this.onBecomeObservedListeners.forEach(listener => listener());\n        }\n    }\n    onBecomeUnobserved() {\n        if (this.onBecomeUnobservedListeners) {\n            this.onBecomeUnobservedListeners.forEach(listener => listener());\n        }\n    }\n    /**\n     * Returns the current value of this computed value.\n     * Will evaluate its computation first if needed.\n     */\n    get() {\n        if (this.isComputing)\n            fail(`Cycle detected in computation ${this.name}: ${this.derivation}`);\n        if (globalState.inBatch === 0 && this.observers.size === 0 && !this.keepAlive) {\n            if (shouldCompute(this)) {\n                this.warnAboutUntrackedRead();\n                startBatch(); // See perf test 'computed memoization'\n                this.value = this.computeValue(false);\n                endBatch();\n            }\n        }\n        else {\n            reportObserved(this);\n            if (shouldCompute(this))\n                if (this.trackAndCompute())\n                    propagateChangeConfirmed(this);\n        }\n        const result = this.value;\n        if (isCaughtException(result))\n            throw result.cause;\n        return result;\n    }\n    peek() {\n        const res = this.computeValue(false);\n        if (isCaughtException(res))\n            throw res.cause;\n        return res;\n    }\n    set(value) {\n        if (this.setter) {\n            invariant(!this.isRunningSetter, `The setter of computed value '${this.name}' is trying to update itself. Did you intend to update an _observable_ value, instead of the computed property?`);\n            this.isRunningSetter = true;\n            try {\n                this.setter.call(this.scope, value);\n            }\n            finally {\n                this.isRunningSetter = false;\n            }\n        }\n        else\n            invariant(false, process.env.NODE_ENV !== \"production\" &&\n                `[ComputedValue '${this.name}'] It is not possible to assign a new value to a computed value.`);\n    }\n    trackAndCompute() {\n        if (isSpyEnabled() && process.env.NODE_ENV !== \"production\") {\n            spyReport({\n                object: this.scope,\n                type: \"compute\",\n                name: this.name\n            });\n        }\n        const oldValue = this.value;\n        const wasSuspended = \n        /* see #1208 */ this.dependenciesState === IDerivationState.NOT_TRACKING;\n        const newValue = this.computeValue(true);\n        const changed = wasSuspended ||\n            isCaughtException(oldValue) ||\n            isCaughtException(newValue) ||\n            !this.equals(oldValue, newValue);\n        if (changed) {\n            this.value = newValue;\n        }\n        return changed;\n    }\n    computeValue(track) {\n        this.isComputing = true;\n        globalState.computationDepth++;\n        let res;\n        if (track) {\n            res = trackDerivedFunction(this, this.derivation, this.scope);\n        }\n        else {\n            if (globalState.disableErrorBoundaries === true) {\n                res = this.derivation.call(this.scope);\n            }\n            else {\n                try {\n                    res = this.derivation.call(this.scope);\n                }\n                catch (e) {\n                    res = new CaughtException(e);\n                }\n            }\n        }\n        globalState.computationDepth--;\n        this.isComputing = false;\n        return res;\n    }\n    suspend() {\n        if (!this.keepAlive) {\n            clearObserving(this);\n            this.value = undefined; // don't hold on to computed value!\n        }\n    }\n    observe(listener, fireImmediately) {\n        let firstTime = true;\n        let prevValue = undefined;\n        return autorun(() => {\n            let newValue = this.get();\n            if (!firstTime || fireImmediately) {\n                const prevU = untrackedStart();\n                listener({\n                    type: \"update\",\n                    object: this,\n                    newValue,\n                    oldValue: prevValue\n                });\n                untrackedEnd(prevU);\n            }\n            firstTime = false;\n            prevValue = newValue;\n        });\n    }\n    warnAboutUntrackedRead() {\n        if (process.env.NODE_ENV === \"production\")\n            return;\n        if (this.requiresReaction === true) {\n            fail(`[mobx] Computed value ${this.name} is read outside a reactive context`);\n        }\n        if (this.isTracing !== TraceMode.NONE) {\n            console.log(`[mobx.trace] '${this.name}' is being read outside a reactive context. Doing a full recompute`);\n        }\n        if (globalState.computedRequiresReaction) {\n            console.warn(`[mobx] Computed value ${this.name} is being read outside a reactive context. Doing a full recompute`);\n        }\n    }\n    toJSON() {\n        return this.get();\n    }\n    toString() {\n        return `${this.name}[${this.derivation.toString()}]`;\n    }\n    valueOf() {\n        return toPrimitive(this.get());\n    }\n    [Symbol.toPrimitive]() {\n        return this.valueOf();\n    }\n}\nconst isComputedValue = createInstanceofPredicate(\"ComputedValue\", ComputedValue);\n\n/**\n * These values will persist if global state is reset\n */\nconst persistentKeys = [\n    \"mobxGuid\",\n    \"spyListeners\",\n    \"enforceActions\",\n    \"computedRequiresReaction\",\n    \"reactionRequiresObservable\",\n    \"observableRequiresReaction\",\n    \"allowStateReads\",\n    \"disableErrorBoundaries\",\n    \"runId\",\n    \"UNCHANGED\"\n];\nclass MobXGlobals {\n    constructor() {\n        /**\n         * MobXGlobals version.\n         * MobX compatiblity with other versions loaded in memory as long as this version matches.\n         * It indicates that the global state still stores similar information\n         *\n         * N.B: this version is unrelated to the package version of MobX, and is only the version of the\n         * internal state storage of MobX, and can be the same across many different package versions\n         */\n        this.version = 5;\n        /**\n         * globally unique token to signal unchanged\n         */\n        this.UNCHANGED = {};\n        /**\n         * Currently running derivation\n         */\n        this.trackingDerivation = null;\n        /**\n         * Are we running a computation currently? (not a reaction)\n         */\n        this.computationDepth = 0;\n        /**\n         * Each time a derivation is tracked, it is assigned a unique run-id\n         */\n        this.runId = 0;\n        /**\n         * 'guid' for general purpose. Will be persisted amongst resets.\n         */\n        this.mobxGuid = 0;\n        /**\n         * Are we in a batch block? (and how many of them)\n         */\n        this.inBatch = 0;\n        /**\n         * Observables that don't have observers anymore, and are about to be\n         * suspended, unless somebody else accesses it in the same batch\n         *\n         * @type {IObservable[]}\n         */\n        this.pendingUnobservations = [];\n        /**\n         * List of scheduled, not yet executed, reactions.\n         */\n        this.pendingReactions = [];\n        /**\n         * Are we currently processing reactions?\n         */\n        this.isRunningReactions = false;\n        /**\n         * Is it allowed to change observables at this point?\n         * In general, MobX doesn't allow that when running computations and React.render.\n         * To ensure that those functions stay pure.\n         */\n        this.allowStateChanges = true;\n        /**\n         * Is it allowed to read observables at this point?\n         * Used to hold the state needed for `observableRequiresReaction`\n         */\n        this.allowStateReads = true;\n        /**\n         * If strict mode is enabled, state changes are by default not allowed\n         */\n        this.enforceActions = false;\n        /**\n         * Spy callbacks\n         */\n        this.spyListeners = [];\n        /**\n         * Globally attached error handlers that react specifically to errors in reactions\n         */\n        this.globalReactionErrorHandlers = [];\n        /**\n         * Warn if computed values are accessed outside a reactive context\n         */\n        this.computedRequiresReaction = false;\n        /**\n         * (Experimental)\n         * Warn if you try to create to derivation / reactive context without accessing any observable.\n         */\n        this.reactionRequiresObservable = false;\n        /**\n         * (Experimental)\n         * Warn if observables are accessed outside a reactive context\n         */\n        this.observableRequiresReaction = false;\n        /**\n         * Allows overwriting of computed properties, useful in tests but not prod as it can cause\n         * memory leaks. See https://github.com/mobxjs/mobx/issues/1867\n         */\n        this.computedConfigurable = false;\n        /*\n         * Don't catch and rethrow exceptions. This is useful for inspecting the state of\n         * the stack when an exception occurs while debugging.\n         */\n        this.disableErrorBoundaries = false;\n        /*\n         * If true, we are already handling an exception in an action. Any errors in reactions should be suppressed, as\n         * they are not the cause, see: https://github.com/mobxjs/mobx/issues/1836\n         */\n        this.suppressReactionErrors = false;\n    }\n}\nconst mockGlobal = {};\nfunction getGlobal() {\n    if (typeof window !== \"undefined\") {\n        return window;\n    }\n    if (typeof global !== \"undefined\") {\n        return global;\n    }\n    if (typeof self !== \"undefined\") {\n        return self;\n    }\n    return mockGlobal;\n}\nlet canMergeGlobalState = true;\nlet isolateCalled = false;\nlet globalState = (function () {\n    const global = getGlobal();\n    if (global.__mobxInstanceCount > 0 && !global.__mobxGlobals)\n        canMergeGlobalState = false;\n    if (global.__mobxGlobals && global.__mobxGlobals.version !== new MobXGlobals().version)\n        canMergeGlobalState = false;\n    if (!canMergeGlobalState) {\n        setTimeout(() => {\n            if (!isolateCalled) {\n                fail(\"There are multiple, different versions of MobX active. Make sure MobX is loaded only once or use `configure({ isolateGlobalState: true })`\");\n            }\n        }, 1);\n        return new MobXGlobals();\n    }\n    else if (global.__mobxGlobals) {\n        global.__mobxInstanceCount += 1;\n        if (!global.__mobxGlobals.UNCHANGED)\n            global.__mobxGlobals.UNCHANGED = {}; // make merge backward compatible\n        return global.__mobxGlobals;\n    }\n    else {\n        global.__mobxInstanceCount = 1;\n        return (global.__mobxGlobals = new MobXGlobals());\n    }\n})();\nfunction isolateGlobalState() {\n    if (globalState.pendingReactions.length ||\n        globalState.inBatch ||\n        globalState.isRunningReactions)\n        fail(\"isolateGlobalState should be called before MobX is running any reactions\");\n    isolateCalled = true;\n    if (canMergeGlobalState) {\n        if (--getGlobal().__mobxInstanceCount === 0)\n            getGlobal().__mobxGlobals = undefined;\n        globalState = new MobXGlobals();\n    }\n}\nfunction getGlobalState() {\n    return globalState;\n}\n/**\n * For testing purposes only; this will break the internal state of existing observables,\n * but can be used to get back at a stable state after throwing errors\n */\nfunction resetGlobalState() {\n    const defaultGlobals = new MobXGlobals();\n    for (let key in defaultGlobals)\n        if (persistentKeys.indexOf(key) === -1)\n            globalState[key] = defaultGlobals[key];\n    globalState.allowStateChanges = !globalState.enforceActions;\n}\n\nfunction hasObservers(observable) {\n    return observable.observers && observable.observers.size > 0;\n}\nfunction getObservers(observable) {\n    return observable.observers;\n}\n// function invariantObservers(observable: IObservable) {\n//     const list = observable.observers\n//     const map = observable.observersIndexes\n//     const l = list.length\n//     for (let i = 0; i < l; i++) {\n//         const id = list[i].__mapid\n//         if (i) {\n//             invariant(map[id] === i, \"INTERNAL ERROR maps derivation.__mapid to index in list\") // for performance\n//         } else {\n//             invariant(!(id in map), \"INTERNAL ERROR observer on index 0 shouldn't be held in map.\") // for performance\n//         }\n//     }\n//     invariant(\n//         list.length === 0 || Object.keys(map).length === list.length - 1,\n//         \"INTERNAL ERROR there is no junk in map\"\n//     )\n// }\nfunction addObserver(observable, node) {\n    // invariant(node.dependenciesState !== -1, \"INTERNAL ERROR, can add only dependenciesState !== -1\");\n    // invariant(observable._observers.indexOf(node) === -1, \"INTERNAL ERROR add already added node\");\n    // invariantObservers(observable);\n    observable.observers.add(node);\n    if (observable.lowestObserverState > node.dependenciesState)\n        observable.lowestObserverState = node.dependenciesState;\n    // invariantObservers(observable);\n    // invariant(observable._observers.indexOf(node) !== -1, \"INTERNAL ERROR didn't add node\");\n}\nfunction removeObserver(observable, node) {\n    // invariant(globalState.inBatch > 0, \"INTERNAL ERROR, remove should be called only inside batch\");\n    // invariant(observable._observers.indexOf(node) !== -1, \"INTERNAL ERROR remove already removed node\");\n    // invariantObservers(observable);\n    observable.observers.delete(node);\n    if (observable.observers.size === 0) {\n        // deleting last observer\n        queueForUnobservation(observable);\n    }\n    // invariantObservers(observable);\n    // invariant(observable._observers.indexOf(node) === -1, \"INTERNAL ERROR remove already removed node2\");\n}\nfunction queueForUnobservation(observable) {\n    if (observable.isPendingUnobservation === false) {\n        // invariant(observable._observers.length === 0, \"INTERNAL ERROR, should only queue for unobservation unobserved observables\");\n        observable.isPendingUnobservation = true;\n        globalState.pendingUnobservations.push(observable);\n    }\n}\n/**\n * Batch starts a transaction, at least for purposes of memoizing ComputedValues when nothing else does.\n * During a batch `onBecomeUnobserved` will be called at most once per observable.\n * Avoids unnecessary recalculations.\n */\nfunction startBatch() {\n    globalState.inBatch++;\n}\nfunction endBatch() {\n    if (--globalState.inBatch === 0) {\n        runReactions();\n        // the batch is actually about to finish, all unobserving should happen here.\n        const list = globalState.pendingUnobservations;\n        for (let i = 0; i < list.length; i++) {\n            const observable = list[i];\n            observable.isPendingUnobservation = false;\n            if (observable.observers.size === 0) {\n                if (observable.isBeingObserved) {\n                    // if this observable had reactive observers, trigger the hooks\n                    observable.isBeingObserved = false;\n                    observable.onBecomeUnobserved();\n                }\n                if (observable instanceof ComputedValue) {\n                    // computed values are automatically teared down when the last observer leaves\n                    // this process happens recursively, this computed might be the last observabe of another, etc..\n                    observable.suspend();\n                }\n            }\n        }\n        globalState.pendingUnobservations = [];\n    }\n}\nfunction reportObserved(observable) {\n    checkIfStateReadsAreAllowed(observable);\n    const derivation = globalState.trackingDerivation;\n    if (derivation !== null) {\n        /**\n         * Simple optimization, give each derivation run an unique id (runId)\n         * Check if last time this observable was accessed the same runId is used\n         * if this is the case, the relation is already known\n         */\n        if (derivation.runId !== observable.lastAccessedBy) {\n            observable.lastAccessedBy = derivation.runId;\n            // Tried storing newObserving, or observing, or both as Set, but performance didn't come close...\n            derivation.newObserving[derivation.unboundDepsCount++] = observable;\n            if (!observable.isBeingObserved) {\n                observable.isBeingObserved = true;\n                observable.onBecomeObserved();\n            }\n        }\n        return true;\n    }\n    else if (observable.observers.size === 0 && globalState.inBatch > 0) {\n        queueForUnobservation(observable);\n    }\n    return false;\n}\n// function invariantLOS(observable: IObservable, msg: string) {\n//     // it's expensive so better not run it in produciton. but temporarily helpful for testing\n//     const min = getObservers(observable).reduce((a, b) => Math.min(a, b.dependenciesState), 2)\n//     if (min >= observable.lowestObserverState) return // <- the only assumption about `lowestObserverState`\n//     throw new Error(\n//         \"lowestObserverState is wrong for \" +\n//             msg +\n//             \" because \" +\n//             min +\n//             \" < \" +\n//             observable.lowestObserverState\n//     )\n// }\n/**\n * NOTE: current propagation mechanism will in case of self reruning autoruns behave unexpectedly\n * It will propagate changes to observers from previous run\n * It's hard or maybe impossible (with reasonable perf) to get it right with current approach\n * Hopefully self reruning autoruns aren't a feature people should depend on\n * Also most basic use cases should be ok\n */\n// Called by Atom when its value changes\nfunction propagateChanged(observable) {\n    // invariantLOS(observable, \"changed start\");\n    if (observable.lowestObserverState === IDerivationState.STALE)\n        return;\n    observable.lowestObserverState = IDerivationState.STALE;\n    // Ideally we use for..of here, but the downcompiled version is really slow...\n    observable.observers.forEach(d => {\n        if (d.dependenciesState === IDerivationState.UP_TO_DATE) {\n            if (d.isTracing !== TraceMode.NONE) {\n                logTraceInfo(d, observable);\n            }\n            d.onBecomeStale();\n        }\n        d.dependenciesState = IDerivationState.STALE;\n    });\n    // invariantLOS(observable, \"changed end\");\n}\n// Called by ComputedValue when it recalculate and its value changed\nfunction propagateChangeConfirmed(observable) {\n    // invariantLOS(observable, \"confirmed start\");\n    if (observable.lowestObserverState === IDerivationState.STALE)\n        return;\n    observable.lowestObserverState = IDerivationState.STALE;\n    observable.observers.forEach(d => {\n        if (d.dependenciesState === IDerivationState.POSSIBLY_STALE)\n            d.dependenciesState = IDerivationState.STALE;\n        else if (d.dependenciesState === IDerivationState.UP_TO_DATE // this happens during computing of `d`, just keep lowestObserverState up to date.\n        )\n            observable.lowestObserverState = IDerivationState.UP_TO_DATE;\n    });\n    // invariantLOS(observable, \"confirmed end\");\n}\n// Used by computed when its dependency changed, but we don't wan't to immediately recompute.\nfunction propagateMaybeChanged(observable) {\n    // invariantLOS(observable, \"maybe start\");\n    if (observable.lowestObserverState !== IDerivationState.UP_TO_DATE)\n        return;\n    observable.lowestObserverState = IDerivationState.POSSIBLY_STALE;\n    observable.observers.forEach(d => {\n        if (d.dependenciesState === IDerivationState.UP_TO_DATE) {\n            d.dependenciesState = IDerivationState.POSSIBLY_STALE;\n            if (d.isTracing !== TraceMode.NONE) {\n                logTraceInfo(d, observable);\n            }\n            d.onBecomeStale();\n        }\n    });\n    // invariantLOS(observable, \"maybe end\");\n}\nfunction logTraceInfo(derivation, observable) {\n    console.log(`[mobx.trace] '${derivation.name}' is invalidated due to a change in: '${observable.name}'`);\n    if (derivation.isTracing === TraceMode.BREAK) {\n        const lines = [];\n        printDepTree(getDependencyTree(derivation), lines, 1);\n        // prettier-ignore\n        new Function(`debugger;\n/*\nTracing '${derivation.name}'\n\nYou are entering this break point because derivation '${derivation.name}' is being traced and '${observable.name}' is now forcing it to update.\nJust follow the stacktrace you should now see in the devtools to see precisely what piece of your code is causing this update\nThe stackframe you are looking for is at least ~6-8 stack-frames up.\n\n${derivation instanceof ComputedValue ? derivation.derivation.toString().replace(/[*]\\//g, \"/\") : \"\"}\n\nThe dependencies for this derivation are:\n\n${lines.join(\"\\n\")}\n*/\n    `)();\n    }\n}\nfunction printDepTree(tree, lines, depth) {\n    if (lines.length >= 1000) {\n        lines.push(\"(and many more)\");\n        return;\n    }\n    lines.push(`${new Array(depth).join(\"\\t\")}${tree.name}`); // MWE: not the fastest, but the easiest way :)\n    if (tree.dependencies)\n        tree.dependencies.forEach(child => printDepTree(child, lines, depth + 1));\n}\n\nclass Reaction {\n    constructor(name = \"Reaction@\" + getNextId(), onInvalidate, errorHandler, requiresObservable = false) {\n        this.name = name;\n        this.onInvalidate = onInvalidate;\n        this.errorHandler = errorHandler;\n        this.requiresObservable = requiresObservable;\n        this.observing = []; // nodes we are looking at. Our value depends on these nodes\n        this.newObserving = [];\n        this.dependenciesState = IDerivationState.NOT_TRACKING;\n        this.diffValue = 0;\n        this.runId = 0;\n        this.unboundDepsCount = 0;\n        this.__mapid = \"#\" + getNextId();\n        this.isDisposed = false;\n        this._isScheduled = false;\n        this._isTrackPending = false;\n        this._isRunning = false;\n        this.isTracing = TraceMode.NONE;\n    }\n    onBecomeStale() {\n        this.schedule();\n    }\n    schedule() {\n        if (!this._isScheduled) {\n            this._isScheduled = true;\n            globalState.pendingReactions.push(this);\n            runReactions();\n        }\n    }\n    isScheduled() {\n        return this._isScheduled;\n    }\n    /**\n     * internal, use schedule() if you intend to kick off a reaction\n     */\n    runReaction() {\n        if (!this.isDisposed) {\n            startBatch();\n            this._isScheduled = false;\n            if (shouldCompute(this)) {\n                this._isTrackPending = true;\n                try {\n                    this.onInvalidate();\n                    if (this._isTrackPending &&\n                        isSpyEnabled() &&\n                        process.env.NODE_ENV !== \"production\") {\n                        // onInvalidate didn't trigger track right away..\n                        spyReport({\n                            name: this.name,\n                            type: \"scheduled-reaction\"\n                        });\n                    }\n                }\n                catch (e) {\n                    this.reportExceptionInDerivation(e);\n                }\n            }\n            endBatch();\n        }\n    }\n    track(fn) {\n        if (this.isDisposed) {\n            return;\n            // console.warn(\"Reaction already disposed\") // Note: Not a warning / error in mobx 4 either\n        }\n        startBatch();\n        const notify = isSpyEnabled();\n        let startTime;\n        if (notify && process.env.NODE_ENV !== \"production\") {\n            startTime = Date.now();\n            spyReportStart({\n                name: this.name,\n                type: \"reaction\"\n            });\n        }\n        this._isRunning = true;\n        const result = trackDerivedFunction(this, fn, undefined);\n        this._isRunning = false;\n        this._isTrackPending = false;\n        if (this.isDisposed) {\n            // disposed during last run. Clean up everything that was bound after the dispose call.\n            clearObserving(this);\n        }\n        if (isCaughtException(result))\n            this.reportExceptionInDerivation(result.cause);\n        if (notify && process.env.NODE_ENV !== \"production\") {\n            spyReportEnd({\n                time: Date.now() - startTime\n            });\n        }\n        endBatch();\n    }\n    reportExceptionInDerivation(error) {\n        if (this.errorHandler) {\n            this.errorHandler(error, this);\n            return;\n        }\n        if (globalState.disableErrorBoundaries)\n            throw error;\n        const message = `[mobx] Encountered an uncaught exception that was thrown by a reaction or observer component, in: '${this}'`;\n        if (globalState.suppressReactionErrors) {\n            console.warn(`[mobx] (error in reaction '${this.name}' suppressed, fix error of causing action below)`); // prettier-ignore\n        }\n        else {\n            console.error(message, error);\n            /** If debugging brought you here, please, read the above message :-). Tnx! */\n        }\n        if (isSpyEnabled()) {\n            spyReport({\n                type: \"error\",\n                name: this.name,\n                message,\n                error: \"\" + error\n            });\n        }\n        globalState.globalReactionErrorHandlers.forEach(f => f(error, this));\n    }\n    dispose() {\n        if (!this.isDisposed) {\n            this.isDisposed = true;\n            if (!this._isRunning) {\n                // if disposed while running, clean up later. Maybe not optimal, but rare case\n                startBatch();\n                clearObserving(this);\n                endBatch();\n            }\n        }\n    }\n    getDisposer() {\n        const r = this.dispose.bind(this);\n        r[$mobx] = this;\n        return r;\n    }\n    toString() {\n        return `Reaction[${this.name}]`;\n    }\n    trace(enterBreakPoint = false) {\n        trace(this, enterBreakPoint);\n    }\n}\nfunction onReactionError(handler) {\n    globalState.globalReactionErrorHandlers.push(handler);\n    return () => {\n        const idx = globalState.globalReactionErrorHandlers.indexOf(handler);\n        if (idx >= 0)\n            globalState.globalReactionErrorHandlers.splice(idx, 1);\n    };\n}\n/**\n * Magic number alert!\n * Defines within how many times a reaction is allowed to re-trigger itself\n * until it is assumed that this is gonna be a never ending loop...\n */\nconst MAX_REACTION_ITERATIONS = 100;\nlet reactionScheduler = f => f();\nfunction runReactions() {\n    // Trampolining, if runReactions are already running, new reactions will be picked up\n    if (globalState.inBatch > 0 || globalState.isRunningReactions)\n        return;\n    reactionScheduler(runReactionsHelper);\n}\nfunction runReactionsHelper() {\n    globalState.isRunningReactions = true;\n    const allReactions = globalState.pendingReactions;\n    let iterations = 0;\n    // While running reactions, new reactions might be triggered.\n    // Hence we work with two variables and check whether\n    // we converge to no remaining reactions after a while.\n    while (allReactions.length > 0) {\n        if (++iterations === MAX_REACTION_ITERATIONS) {\n            console.error(`Reaction doesn't converge to a stable state after ${MAX_REACTION_ITERATIONS} iterations.` +\n                ` Probably there is a cycle in the reactive function: ${allReactions[0]}`);\n            allReactions.splice(0); // clear reactions\n        }\n        let remainingReactions = allReactions.splice(0);\n        for (let i = 0, l = remainingReactions.length; i < l; i++)\n            remainingReactions[i].runReaction();\n    }\n    globalState.isRunningReactions = false;\n}\nconst isReaction = createInstanceofPredicate(\"Reaction\", Reaction);\nfunction setReactionScheduler(fn) {\n    const baseScheduler = reactionScheduler;\n    reactionScheduler = f => fn(() => baseScheduler(f));\n}\n\nfunction isSpyEnabled() {\n    return process.env.NODE_ENV !== \"production\" && !!globalState.spyListeners.length;\n}\nfunction spyReport(event) {\n    if (process.env.NODE_ENV === \"production\")\n        return; // dead code elimination can do the rest\n    if (!globalState.spyListeners.length)\n        return;\n    const listeners = globalState.spyListeners;\n    for (let i = 0, l = listeners.length; i < l; i++)\n        listeners[i](event);\n}\nfunction spyReportStart(event) {\n    if (process.env.NODE_ENV === \"production\")\n        return;\n    const change = Object.assign(Object.assign({}, event), { spyReportStart: true });\n    spyReport(change);\n}\nconst END_EVENT = { spyReportEnd: true };\nfunction spyReportEnd(change) {\n    if (process.env.NODE_ENV === \"production\")\n        return;\n    if (change)\n        spyReport(Object.assign(Object.assign({}, change), { spyReportEnd: true }));\n    else\n        spyReport(END_EVENT);\n}\nfunction spy(listener) {\n    if (process.env.NODE_ENV === \"production\") {\n        console.warn(`[mobx.spy] Is a no-op in production builds`);\n        return function () { };\n    }\n    else {\n        globalState.spyListeners.push(listener);\n        return once(() => {\n            globalState.spyListeners = globalState.spyListeners.filter(l => l !== listener);\n        });\n    }\n}\n\nfunction dontReassignFields() {\n    fail(process.env.NODE_ENV !== \"production\" && \"@action fields are not reassignable\");\n}\nfunction namedActionDecorator(name) {\n    return function (target, prop, descriptor) {\n        if (descriptor) {\n            if (process.env.NODE_ENV !== \"production\" && descriptor.get !== undefined) {\n                return fail(\"@action cannot be used with getters\");\n            }\n            // babel / typescript\n            // @action method() { }\n            if (descriptor.value) {\n                // typescript\n                return {\n                    value: createAction(name, descriptor.value),\n                    enumerable: false,\n                    configurable: true,\n                    writable: true // for typescript, this must be writable, otherwise it cannot inherit :/ (see inheritable actions test)\n                };\n            }\n            // babel only: @action method = () => {}\n            const { initializer } = descriptor;\n            return {\n                enumerable: false,\n                configurable: true,\n                writable: true,\n                initializer() {\n                    // N.B: we can't immediately invoke initializer; this would be wrong\n                    return createAction(name, initializer.call(this));\n                }\n            };\n        }\n        // bound instance methods\n        return actionFieldDecorator(name).apply(this, arguments);\n    };\n}\nfunction actionFieldDecorator(name) {\n    // Simple property that writes on first invocation to the current instance\n    return function (target, prop, descriptor) {\n        Object.defineProperty(target, prop, {\n            configurable: true,\n            enumerable: false,\n            get() {\n                return undefined;\n            },\n            set(value) {\n                addHiddenProp(this, prop, action(name, value));\n            }\n        });\n    };\n}\nfunction boundActionDecorator(target, propertyName, descriptor, applyToInstance) {\n    if (applyToInstance === true) {\n        defineBoundAction(target, propertyName, descriptor.value);\n        return null;\n    }\n    if (descriptor) {\n        // if (descriptor.value)\n        // Typescript / Babel: @action.bound method() { }\n        // also: babel @action.bound method = () => {}\n        return {\n            configurable: true,\n            enumerable: false,\n            get() {\n                defineBoundAction(this, propertyName, descriptor.value || descriptor.initializer.call(this));\n                return this[propertyName];\n            },\n            set: dontReassignFields\n        };\n    }\n    // field decorator Typescript @action.bound method = () => {}\n    return {\n        enumerable: false,\n        configurable: true,\n        set(v) {\n            defineBoundAction(this, propertyName, v);\n        },\n        get() {\n            return undefined;\n        }\n    };\n}\n\nconst action = function action(arg1, arg2, arg3, arg4) {\n    // action(fn() {})\n    if (arguments.length === 1 && typeof arg1 === \"function\")\n        return createAction(arg1.name || \"<unnamed action>\", arg1);\n    // action(\"name\", fn() {})\n    if (arguments.length === 2 && typeof arg2 === \"function\")\n        return createAction(arg1, arg2);\n    // @action(\"name\") fn() {}\n    if (arguments.length === 1 && typeof arg1 === \"string\")\n        return namedActionDecorator(arg1);\n    // @action fn() {}\n    if (arg4 === true) {\n        // apply to instance immediately\n        addHiddenProp(arg1, arg2, createAction(arg1.name || arg2, arg3.value, this));\n    }\n    else {\n        return namedActionDecorator(arg2).apply(null, arguments);\n    }\n};\naction.bound = boundActionDecorator;\nfunction runInAction(arg1, arg2) {\n    const actionName = typeof arg1 === \"string\" ? arg1 : arg1.name || \"<unnamed action>\";\n    const fn = typeof arg1 === \"function\" ? arg1 : arg2;\n    if (process.env.NODE_ENV !== \"production\") {\n        invariant(typeof fn === \"function\" && fn.length === 0, \"`runInAction` expects a function without arguments\");\n        if (typeof actionName !== \"string\" || !actionName)\n            fail(`actions should have valid names, got: '${actionName}'`);\n    }\n    return executeAction(actionName, fn, this, undefined);\n}\nfunction isAction(thing) {\n    return typeof thing === \"function\" && thing.isMobxAction === true;\n}\nfunction defineBoundAction(target, propertyName, fn) {\n    addHiddenProp(target, propertyName, createAction(propertyName, fn.bind(target)));\n}\n\n/**\n * Creates a named reactive view and keeps it alive, so that the view is always\n * updated if one of the dependencies changes, even when the view is not further used by something else.\n * @param view The reactive view\n * @returns disposer function, which can be used to stop the view from being updated in the future.\n */\nfunction autorun(view, opts = EMPTY_OBJECT) {\n    if (process.env.NODE_ENV !== \"production\") {\n        invariant(typeof view === \"function\", \"Autorun expects a function as first argument\");\n        invariant(isAction(view) === false, \"Autorun does not accept actions since actions are untrackable\");\n    }\n    const name = (opts && opts.name) || view.name || \"Autorun@\" + getNextId();\n    const runSync = !opts.scheduler && !opts.delay;\n    let reaction;\n    if (runSync) {\n        // normal autorun\n        reaction = new Reaction(name, function () {\n            this.track(reactionRunner);\n        }, opts.onError, opts.requiresObservable);\n    }\n    else {\n        const scheduler = createSchedulerFromOptions(opts);\n        // debounced autorun\n        let isScheduled = false;\n        reaction = new Reaction(name, () => {\n            if (!isScheduled) {\n                isScheduled = true;\n                scheduler(() => {\n                    isScheduled = false;\n                    if (!reaction.isDisposed)\n                        reaction.track(reactionRunner);\n                });\n            }\n        }, opts.onError, opts.requiresObservable);\n    }\n    function reactionRunner() {\n        view(reaction);\n    }\n    reaction.schedule();\n    return reaction.getDisposer();\n}\nconst run = (f) => f();\nfunction createSchedulerFromOptions(opts) {\n    return opts.scheduler\n        ? opts.scheduler\n        : opts.delay\n            ? (f) => setTimeout(f, opts.delay)\n            : run;\n}\nfunction reaction(expression, effect, opts = EMPTY_OBJECT) {\n    if (process.env.NODE_ENV !== \"production\") {\n        invariant(typeof expression === \"function\", \"First argument to reaction should be a function\");\n        invariant(typeof opts === \"object\", \"Third argument of reactions should be an object\");\n    }\n    const name = opts.name || \"Reaction@\" + getNextId();\n    const effectAction = action(name, opts.onError ? wrapErrorHandler(opts.onError, effect) : effect);\n    const runSync = !opts.scheduler && !opts.delay;\n    const scheduler = createSchedulerFromOptions(opts);\n    let firstTime = true;\n    let isScheduled = false;\n    let value;\n    const equals = opts.compareStructural\n        ? comparer.structural\n        : opts.equals || comparer.default;\n    const r = new Reaction(name, () => {\n        if (firstTime || runSync) {\n            reactionRunner();\n        }\n        else if (!isScheduled) {\n            isScheduled = true;\n            scheduler(reactionRunner);\n        }\n    }, opts.onError, opts.requiresObservable);\n    function reactionRunner() {\n        isScheduled = false; // Q: move into reaction runner?\n        if (r.isDisposed)\n            return;\n        let changed = false;\n        r.track(() => {\n            const nextValue = expression(r);\n            changed = firstTime || !equals(value, nextValue);\n            value = nextValue;\n        });\n        if (firstTime && opts.fireImmediately)\n            effectAction(value, r);\n        if (!firstTime && changed === true)\n            effectAction(value, r);\n        if (firstTime)\n            firstTime = false;\n    }\n    r.schedule();\n    return r.getDisposer();\n}\nfunction wrapErrorHandler(errorHandler, baseFn) {\n    return function () {\n        try {\n            return baseFn.apply(this, arguments);\n        }\n        catch (e) {\n            errorHandler.call(this, e);\n        }\n    };\n}\n\nfunction onBecomeObserved(thing, arg2, arg3) {\n    return interceptHook(\"onBecomeObserved\", thing, arg2, arg3);\n}\nfunction onBecomeUnobserved(thing, arg2, arg3) {\n    return interceptHook(\"onBecomeUnobserved\", thing, arg2, arg3);\n}\nfunction interceptHook(hook, thing, arg2, arg3) {\n    const atom = typeof arg3 === \"function\" ? getAtom(thing, arg2) : getAtom(thing);\n    const cb = typeof arg3 === \"function\" ? arg3 : arg2;\n    const listenersKey = `${hook}Listeners`;\n    if (atom[listenersKey]) {\n        atom[listenersKey].add(cb);\n    }\n    else {\n        atom[listenersKey] = new Set([cb]);\n    }\n    const orig = atom[hook];\n    if (typeof orig !== \"function\")\n        return fail(process.env.NODE_ENV !== \"production\" && \"Not an atom that can be (un)observed\");\n    return function () {\n        const hookListeners = atom[listenersKey];\n        if (hookListeners) {\n            hookListeners.delete(cb);\n            if (hookListeners.size === 0) {\n                delete atom[listenersKey];\n            }\n        }\n    };\n}\n\nfunction configure(options) {\n    const { enforceActions, computedRequiresReaction, computedConfigurable, disableErrorBoundaries, reactionScheduler, reactionRequiresObservable, observableRequiresReaction } = options;\n    if (options.isolateGlobalState === true) {\n        isolateGlobalState();\n    }\n    if (enforceActions !== undefined) {\n        if (typeof enforceActions === \"boolean\" || enforceActions === \"strict\")\n            deprecated(`Deprecated value for 'enforceActions', use 'false' => '\"never\"', 'true' => '\"observed\"', '\"strict\"' => \"'always'\" instead`);\n        let ea;\n        switch (enforceActions) {\n            case true:\n            case \"observed\":\n                ea = true;\n                break;\n            case false:\n            case \"never\":\n                ea = false;\n                break;\n            case \"strict\":\n            case \"always\":\n                ea = \"strict\";\n                break;\n            default:\n                fail(`Invalid value for 'enforceActions': '${enforceActions}', expected 'never', 'always' or 'observed'`);\n        }\n        globalState.enforceActions = ea;\n        globalState.allowStateChanges = ea === true || ea === \"strict\" ? false : true;\n    }\n    if (computedRequiresReaction !== undefined) {\n        globalState.computedRequiresReaction = !!computedRequiresReaction;\n    }\n    if (reactionRequiresObservable !== undefined) {\n        globalState.reactionRequiresObservable = !!reactionRequiresObservable;\n    }\n    if (observableRequiresReaction !== undefined) {\n        globalState.observableRequiresReaction = !!observableRequiresReaction;\n        globalState.allowStateReads = !globalState.observableRequiresReaction;\n    }\n    if (computedConfigurable !== undefined) {\n        globalState.computedConfigurable = !!computedConfigurable;\n    }\n    if (disableErrorBoundaries !== undefined) {\n        if (disableErrorBoundaries === true)\n            console.warn(\"WARNING: Debug feature only. MobX will NOT recover from errors when `disableErrorBoundaries` is enabled.\");\n        globalState.disableErrorBoundaries = !!disableErrorBoundaries;\n    }\n    if (reactionScheduler) {\n        setReactionScheduler(reactionScheduler);\n    }\n}\n\nfunction decorate(thing, decorators) {\n    process.env.NODE_ENV !== \"production\" &&\n        invariant(isPlainObject(decorators), \"Decorators should be a key value map\");\n    const target = typeof thing === \"function\" ? thing.prototype : thing;\n    for (let prop in decorators) {\n        let propertyDecorators = decorators[prop];\n        if (!Array.isArray(propertyDecorators)) {\n            propertyDecorators = [propertyDecorators];\n        }\n        process.env.NODE_ENV !== \"production\" &&\n            invariant(propertyDecorators.every(decorator => typeof decorator === \"function\"), `Decorate: expected a decorator function or array of decorator functions for '${prop}'`);\n        const descriptor = Object.getOwnPropertyDescriptor(target, prop);\n        const newDescriptor = propertyDecorators.reduce((accDescriptor, decorator) => decorator(target, prop, accDescriptor), descriptor);\n        if (newDescriptor)\n            Object.defineProperty(target, prop, newDescriptor);\n    }\n    return thing;\n}\n\nfunction extendObservable(target, properties, decorators, options) {\n    if (process.env.NODE_ENV !== \"production\") {\n        invariant(arguments.length >= 2 && arguments.length <= 4, \"'extendObservable' expected 2-4 arguments\");\n        invariant(typeof target === \"object\", \"'extendObservable' expects an object as first argument\");\n        invariant(!isObservableMap(target), \"'extendObservable' should not be used on maps, use map.merge instead\");\n    }\n    options = asCreateObservableOptions(options);\n    const defaultDecorator = getDefaultDecoratorFromObjectOptions(options);\n    initializeInstance(target); // Fixes #1740\n    asObservableObject(target, options.name, defaultDecorator.enhancer); // make sure object is observable, even without initial props\n    if (properties)\n        extendObservableObjectWithProperties(target, properties, decorators, defaultDecorator);\n    return target;\n}\nfunction getDefaultDecoratorFromObjectOptions(options) {\n    return options.defaultDecorator || (options.deep === false ? refDecorator : deepDecorator);\n}\nfunction extendObservableObjectWithProperties(target, properties, decorators, defaultDecorator) {\n    if (process.env.NODE_ENV !== \"production\") {\n        invariant(!isObservable(properties), \"Extending an object with another observable (object) is not supported. Please construct an explicit propertymap, using `toJS` if need. See issue #540\");\n        if (decorators) {\n            const keys = getPlainObjectKeys(decorators);\n            for (const key of keys) {\n                if (!(key in properties))\n                    fail(`Trying to declare a decorator for unspecified property '${stringifyKey(key)}'`);\n            }\n        }\n    }\n    startBatch();\n    try {\n        const keys = getPlainObjectKeys(properties);\n        for (const key of keys) {\n            const descriptor = Object.getOwnPropertyDescriptor(properties, key);\n            if (process.env.NODE_ENV !== \"production\") {\n                if (!isPlainObject(properties))\n                    fail(`'extendObservabe' only accepts plain objects as second argument`);\n                if (isComputed(descriptor.value))\n                    fail(`Passing a 'computed' as initial property value is no longer supported by extendObservable. Use a getter or decorator instead`);\n            }\n            const decorator = decorators && key in decorators\n                ? decorators[key]\n                : descriptor.get\n                    ? computedDecorator\n                    : defaultDecorator;\n            if (process.env.NODE_ENV !== \"production\" && typeof decorator !== \"function\")\n                fail(`Not a valid decorator for '${stringifyKey(key)}', got: ${decorator}`);\n            const resultDescriptor = decorator(target, key, descriptor, true);\n            if (resultDescriptor // otherwise, assume already applied, due to `applyToInstance`\n            )\n                Object.defineProperty(target, key, resultDescriptor);\n        }\n    }\n    finally {\n        endBatch();\n    }\n}\n\nfunction getDependencyTree(thing, property) {\n    return nodeToDependencyTree(getAtom(thing, property));\n}\nfunction nodeToDependencyTree(node) {\n    const result = {\n        name: node.name\n    };\n    if (node.observing && node.observing.length > 0)\n        result.dependencies = unique(node.observing).map(nodeToDependencyTree);\n    return result;\n}\nfunction getObserverTree(thing, property) {\n    return nodeToObserverTree(getAtom(thing, property));\n}\nfunction nodeToObserverTree(node) {\n    const result = {\n        name: node.name\n    };\n    if (hasObservers(node))\n        result.observers = Array.from(getObservers(node)).map(nodeToObserverTree);\n    return result;\n}\n\nlet generatorId = 0;\nfunction FlowCancellationError() {\n    this.message = \"FLOW_CANCELLED\";\n}\nFlowCancellationError.prototype = Object.create(Error.prototype);\nfunction isFlowCancellationError(error) {\n    return error instanceof FlowCancellationError;\n}\nfunction flow(generator) {\n    if (arguments.length !== 1)\n        fail(!!process.env.NODE_ENV && `Flow expects 1 argument and cannot be used as decorator`);\n    const name = generator.name || \"<unnamed flow>\";\n    // Implementation based on https://github.com/tj/co/blob/master/index.js\n    return function () {\n        const ctx = this;\n        const args = arguments;\n        const runId = ++generatorId;\n        const gen = action(`${name} - runid: ${runId} - init`, generator).apply(ctx, args);\n        let rejector;\n        let pendingPromise = undefined;\n        const promise = new Promise(function (resolve, reject) {\n            let stepId = 0;\n            rejector = reject;\n            function onFulfilled(res) {\n                pendingPromise = undefined;\n                let ret;\n                try {\n                    ret = action(`${name} - runid: ${runId} - yield ${stepId++}`, gen.next).call(gen, res);\n                }\n                catch (e) {\n                    return reject(e);\n                }\n                next(ret);\n            }\n            function onRejected(err) {\n                pendingPromise = undefined;\n                let ret;\n                try {\n                    ret = action(`${name} - runid: ${runId} - yield ${stepId++}`, gen.throw).call(gen, err);\n                }\n                catch (e) {\n                    return reject(e);\n                }\n                next(ret);\n            }\n            function next(ret) {\n                if (ret && typeof ret.then === \"function\") {\n                    // an async iterator\n                    ret.then(next, reject);\n                    return;\n                }\n                if (ret.done)\n                    return resolve(ret.value);\n                pendingPromise = Promise.resolve(ret.value);\n                return pendingPromise.then(onFulfilled, onRejected);\n            }\n            onFulfilled(undefined); // kick off the process\n        });\n        promise.cancel = action(`${name} - runid: ${runId} - cancel`, function () {\n            try {\n                if (pendingPromise)\n                    cancelPromise(pendingPromise);\n                // Finally block can return (or yield) stuff..\n                const res = gen.return(undefined);\n                // eat anything that promise would do, it's cancelled!\n                const yieldedPromise = Promise.resolve(res.value);\n                yieldedPromise.then(noop, noop);\n                cancelPromise(yieldedPromise); // maybe it can be cancelled :)\n                // reject our original promise\n                rejector(new FlowCancellationError());\n            }\n            catch (e) {\n                rejector(e); // there could be a throwing finally block\n            }\n        });\n        return promise;\n    };\n}\nfunction cancelPromise(promise) {\n    if (typeof promise.cancel === \"function\")\n        promise.cancel();\n}\n\nfunction interceptReads(thing, propOrHandler, handler) {\n    let target;\n    if (isObservableMap(thing) || isObservableArray(thing) || isObservableValue(thing)) {\n        target = getAdministration(thing);\n    }\n    else if (isObservableObject(thing)) {\n        if (typeof propOrHandler !== \"string\")\n            return fail(process.env.NODE_ENV !== \"production\" &&\n                `InterceptReads can only be used with a specific property, not with an object in general`);\n        target = getAdministration(thing, propOrHandler);\n    }\n    else {\n        return fail(process.env.NODE_ENV !== \"production\" &&\n            `Expected observable map, object or array as first array`);\n    }\n    if (target.dehancer !== undefined)\n        return fail(process.env.NODE_ENV !== \"production\" && `An intercept reader was already established`);\n    target.dehancer = typeof propOrHandler === \"function\" ? propOrHandler : handler;\n    return () => {\n        target.dehancer = undefined;\n    };\n}\n\nfunction intercept(thing, propOrHandler, handler) {\n    if (typeof handler === \"function\")\n        return interceptProperty(thing, propOrHandler, handler);\n    else\n        return interceptInterceptable(thing, propOrHandler);\n}\nfunction interceptInterceptable(thing, handler) {\n    return getAdministration(thing).intercept(handler);\n}\nfunction interceptProperty(thing, property, handler) {\n    return getAdministration(thing, property).intercept(handler);\n}\n\nfunction _isComputed(value, property) {\n    if (value === null || value === undefined)\n        return false;\n    if (property !== undefined) {\n        if (isObservableObject(value) === false)\n            return false;\n        if (!value[$mobx].values.has(property))\n            return false;\n        const atom = getAtom(value, property);\n        return isComputedValue(atom);\n    }\n    return isComputedValue(value);\n}\nfunction isComputed(value) {\n    if (arguments.length > 1)\n        return fail(process.env.NODE_ENV !== \"production\" &&\n            `isComputed expects only 1 argument. Use isObservableProp to inspect the observability of a property`);\n    return _isComputed(value);\n}\nfunction isComputedProp(value, propName) {\n    if (typeof propName !== \"string\")\n        return fail(process.env.NODE_ENV !== \"production\" &&\n            `isComputed expected a property name as second argument`);\n    return _isComputed(value, propName);\n}\n\nfunction _isObservable(value, property) {\n    if (value === null || value === undefined)\n        return false;\n    if (property !== undefined) {\n        if (process.env.NODE_ENV !== \"production\" &&\n            (isObservableMap(value) || isObservableArray(value)))\n            return fail(\"isObservable(object, propertyName) is not supported for arrays and maps. Use map.has or array.length instead.\");\n        if (isObservableObject(value)) {\n            return value[$mobx].values.has(property);\n        }\n        return false;\n    }\n    // For first check, see #701\n    return (isObservableObject(value) ||\n        !!value[$mobx] ||\n        isAtom(value) ||\n        isReaction(value) ||\n        isComputedValue(value));\n}\nfunction isObservable(value) {\n    if (arguments.length !== 1)\n        fail(process.env.NODE_ENV !== \"production\" &&\n            `isObservable expects only 1 argument. Use isObservableProp to inspect the observability of a property`);\n    return _isObservable(value);\n}\nfunction isObservableProp(value, propName) {\n    if (typeof propName !== \"string\")\n        return fail(process.env.NODE_ENV !== \"production\" && `expected a property name as second argument`);\n    return _isObservable(value, propName);\n}\n\nfunction keys(obj) {\n    if (isObservableObject(obj)) {\n        return obj[$mobx].getKeys();\n    }\n    if (isObservableMap(obj)) {\n        return Array.from(obj.keys());\n    }\n    if (isObservableSet(obj)) {\n        return Array.from(obj.keys());\n    }\n    if (isObservableArray(obj)) {\n        return obj.map((_, index) => index);\n    }\n    return fail(process.env.NODE_ENV !== \"production\" &&\n        \"'keys()' can only be used on observable objects, arrays, sets and maps\");\n}\nfunction values(obj) {\n    if (isObservableObject(obj)) {\n        return keys(obj).map(key => obj[key]);\n    }\n    if (isObservableMap(obj)) {\n        return keys(obj).map(key => obj.get(key));\n    }\n    if (isObservableSet(obj)) {\n        return Array.from(obj.values());\n    }\n    if (isObservableArray(obj)) {\n        return obj.slice();\n    }\n    return fail(process.env.NODE_ENV !== \"production\" &&\n        \"'values()' can only be used on observable objects, arrays, sets and maps\");\n}\nfunction entries(obj) {\n    if (isObservableObject(obj)) {\n        return keys(obj).map(key => [key, obj[key]]);\n    }\n    if (isObservableMap(obj)) {\n        return keys(obj).map(key => [key, obj.get(key)]);\n    }\n    if (isObservableSet(obj)) {\n        return Array.from(obj.entries());\n    }\n    if (isObservableArray(obj)) {\n        return obj.map((key, index) => [index, key]);\n    }\n    return fail(process.env.NODE_ENV !== \"production\" &&\n        \"'entries()' can only be used on observable objects, arrays and maps\");\n}\nfunction set(obj, key, value) {\n    if (arguments.length === 2 && !isObservableSet(obj)) {\n        startBatch();\n        const values = key;\n        try {\n            for (let key in values)\n                set(obj, key, values[key]);\n        }\n        finally {\n            endBatch();\n        }\n        return;\n    }\n    if (isObservableObject(obj)) {\n        const adm = obj[$mobx];\n        const existingObservable = adm.values.get(key);\n        if (existingObservable) {\n            adm.write(key, value);\n        }\n        else {\n            adm.addObservableProp(key, value, adm.defaultEnhancer);\n        }\n    }\n    else if (isObservableMap(obj)) {\n        obj.set(key, value);\n    }\n    else if (isObservableSet(obj)) {\n        obj.add(key);\n    }\n    else if (isObservableArray(obj)) {\n        if (typeof key !== \"number\")\n            key = parseInt(key, 10);\n        invariant(key >= 0, `Not a valid index: '${key}'`);\n        startBatch();\n        if (key >= obj.length)\n            obj.length = key + 1;\n        obj[key] = value;\n        endBatch();\n    }\n    else {\n        return fail(process.env.NODE_ENV !== \"production\" &&\n            \"'set()' can only be used on observable objects, arrays and maps\");\n    }\n}\nfunction remove(obj, key) {\n    if (isObservableObject(obj)) {\n        obj[$mobx].remove(key);\n    }\n    else if (isObservableMap(obj)) {\n        obj.delete(key);\n    }\n    else if (isObservableSet(obj)) {\n        obj.delete(key);\n    }\n    else if (isObservableArray(obj)) {\n        if (typeof key !== \"number\")\n            key = parseInt(key, 10);\n        invariant(key >= 0, `Not a valid index: '${key}'`);\n        obj.splice(key, 1);\n    }\n    else {\n        return fail(process.env.NODE_ENV !== \"production\" &&\n            \"'remove()' can only be used on observable objects, arrays and maps\");\n    }\n}\nfunction has(obj, key) {\n    if (isObservableObject(obj)) {\n        // return keys(obj).indexOf(key) >= 0\n        const adm = getAdministration(obj);\n        return adm.has(key);\n    }\n    else if (isObservableMap(obj)) {\n        return obj.has(key);\n    }\n    else if (isObservableSet(obj)) {\n        return obj.has(key);\n    }\n    else if (isObservableArray(obj)) {\n        return key >= 0 && key < obj.length;\n    }\n    else {\n        return fail(process.env.NODE_ENV !== \"production\" &&\n            \"'has()' can only be used on observable objects, arrays and maps\");\n    }\n}\nfunction get(obj, key) {\n    if (!has(obj, key))\n        return undefined;\n    if (isObservableObject(obj)) {\n        return obj[key];\n    }\n    else if (isObservableMap(obj)) {\n        return obj.get(key);\n    }\n    else if (isObservableArray(obj)) {\n        return obj[key];\n    }\n    else {\n        return fail(process.env.NODE_ENV !== \"production\" &&\n            \"'get()' can only be used on observable objects, arrays and maps\");\n    }\n}\n\nfunction observe(thing, propOrCb, cbOrFire, fireImmediately) {\n    if (typeof cbOrFire === \"function\")\n        return observeObservableProperty(thing, propOrCb, cbOrFire, fireImmediately);\n    else\n        return observeObservable(thing, propOrCb, cbOrFire);\n}\nfunction observeObservable(thing, listener, fireImmediately) {\n    return getAdministration(thing).observe(listener, fireImmediately);\n}\nfunction observeObservableProperty(thing, property, listener, fireImmediately) {\n    return getAdministration(thing, property).observe(listener, fireImmediately);\n}\n\nconst defaultOptions = {\n    detectCycles: true,\n    exportMapsAsObjects: true,\n    recurseEverything: false\n};\nfunction cache(map, key, value, options) {\n    if (options.detectCycles)\n        map.set(key, value);\n    return value;\n}\nfunction toJSHelper(source, options, __alreadySeen) {\n    if (!options.recurseEverything && !isObservable(source))\n        return source;\n    if (typeof source !== \"object\")\n        return source;\n    // Directly return null if source is null\n    if (source === null)\n        return null;\n    // Directly return the Date object itself if contained in the observable\n    if (source instanceof Date)\n        return source;\n    if (isObservableValue(source))\n        return toJSHelper(source.get(), options, __alreadySeen);\n    // make sure we track the keys of the object\n    if (isObservable(source))\n        keys(source);\n    const detectCycles = options.detectCycles === true;\n    if (detectCycles && source !== null && __alreadySeen.has(source)) {\n        return __alreadySeen.get(source);\n    }\n    if (isObservableArray(source) || Array.isArray(source)) {\n        const res = cache(__alreadySeen, source, [], options);\n        const toAdd = source.map(value => toJSHelper(value, options, __alreadySeen));\n        res.length = toAdd.length;\n        for (let i = 0, l = toAdd.length; i < l; i++)\n            res[i] = toAdd[i];\n        return res;\n    }\n    if (isObservableSet(source) || Object.getPrototypeOf(source) === Set.prototype) {\n        if (options.exportMapsAsObjects === false) {\n            const res = cache(__alreadySeen, source, new Set(), options);\n            source.forEach(value => {\n                res.add(toJSHelper(value, options, __alreadySeen));\n            });\n            return res;\n        }\n        else {\n            const res = cache(__alreadySeen, source, [], options);\n            source.forEach(value => {\n                res.push(toJSHelper(value, options, __alreadySeen));\n            });\n            return res;\n        }\n    }\n    if (isObservableMap(source) || Object.getPrototypeOf(source) === Map.prototype) {\n        if (options.exportMapsAsObjects === false) {\n            const res = cache(__alreadySeen, source, new Map(), options);\n            source.forEach((value, key) => {\n                res.set(key, toJSHelper(value, options, __alreadySeen));\n            });\n            return res;\n        }\n        else {\n            const res = cache(__alreadySeen, source, {}, options);\n            source.forEach((value, key) => {\n                res[key] = toJSHelper(value, options, __alreadySeen);\n            });\n            return res;\n        }\n    }\n    // Fallback to the situation that source is an ObservableObject or a plain object\n    const res = cache(__alreadySeen, source, {}, options);\n    getPlainObjectKeys(source).forEach(key => {\n        res[key] = toJSHelper(source[key], options, __alreadySeen);\n    });\n    return res;\n}\nfunction toJS(source, options) {\n    // backward compatibility\n    if (typeof options === \"boolean\")\n        options = { detectCycles: options };\n    if (!options)\n        options = defaultOptions;\n    options.detectCycles =\n        options.detectCycles === undefined\n            ? options.recurseEverything === true\n            : options.detectCycles === true;\n    let __alreadySeen;\n    if (options.detectCycles)\n        __alreadySeen = new Map();\n    return toJSHelper(source, options, __alreadySeen);\n}\n\nfunction trace(...args) {\n    let enterBreakPoint = false;\n    if (typeof args[args.length - 1] === \"boolean\")\n        enterBreakPoint = args.pop();\n    const derivation = getAtomFromArgs(args);\n    if (!derivation) {\n        return fail(process.env.NODE_ENV !== \"production\" &&\n            `'trace(break?)' can only be used inside a tracked computed value or a Reaction. Consider passing in the computed value or reaction explicitly`);\n    }\n    if (derivation.isTracing === TraceMode.NONE) {\n        console.log(`[mobx.trace] '${derivation.name}' tracing enabled`);\n    }\n    derivation.isTracing = enterBreakPoint ? TraceMode.BREAK : TraceMode.LOG;\n}\nfunction getAtomFromArgs(args) {\n    switch (args.length) {\n        case 0:\n            return globalState.trackingDerivation;\n        case 1:\n            return getAtom(args[0]);\n        case 2:\n            return getAtom(args[0], args[1]);\n    }\n}\n\n/**\n * During a transaction no views are updated until the end of the transaction.\n * The transaction will be run synchronously nonetheless.\n *\n * @param action a function that updates some reactive state\n * @returns any value that was returned by the 'action' parameter.\n */\nfunction transaction(action, thisArg = undefined) {\n    startBatch();\n    try {\n        return action.apply(thisArg);\n    }\n    finally {\n        endBatch();\n    }\n}\n\nfunction when(predicate, arg1, arg2) {\n    if (arguments.length === 1 || (arg1 && typeof arg1 === \"object\"))\n        return whenPromise(predicate, arg1);\n    return _when(predicate, arg1, arg2 || {});\n}\nfunction _when(predicate, effect, opts) {\n    let timeoutHandle;\n    if (typeof opts.timeout === \"number\") {\n        timeoutHandle = setTimeout(() => {\n            if (!disposer[$mobx].isDisposed) {\n                disposer();\n                const error = new Error(\"WHEN_TIMEOUT\");\n                if (opts.onError)\n                    opts.onError(error);\n                else\n                    throw error;\n            }\n        }, opts.timeout);\n    }\n    opts.name = opts.name || \"When@\" + getNextId();\n    const effectAction = createAction(opts.name + \"-effect\", effect);\n    const disposer = autorun(r => {\n        if (predicate()) {\n            r.dispose();\n            if (timeoutHandle)\n                clearTimeout(timeoutHandle);\n            effectAction();\n        }\n    }, opts);\n    return disposer;\n}\nfunction whenPromise(predicate, opts) {\n    if (process.env.NODE_ENV !== \"production\" && opts && opts.onError)\n        return fail(`the options 'onError' and 'promise' cannot be combined`);\n    let cancel;\n    const res = new Promise((resolve, reject) => {\n        let disposer = _when(predicate, resolve, Object.assign(Object.assign({}, opts), { onError: reject }));\n        cancel = () => {\n            disposer();\n            reject(\"WHEN_CANCELLED\");\n        };\n    });\n    res.cancel = cancel;\n    return res;\n}\n\nfunction getAdm(target) {\n    return target[$mobx];\n}\nfunction isPropertyKey(val) {\n    return typeof val === \"string\" || typeof val === \"number\" || typeof val === \"symbol\";\n}\n// Optimization: we don't need the intermediate objects and could have a completely custom administration for DynamicObjects,\n// and skip either the internal values map, or the base object with its property descriptors!\nconst objectProxyTraps = {\n    has(target, name) {\n        if (name === $mobx || name === \"constructor\" || name === mobxDidRunLazyInitializersSymbol)\n            return true;\n        const adm = getAdm(target);\n        // MWE: should `in` operator be reactive? If not, below code path will be faster / more memory efficient\n        // TODO: check performance stats!\n        // if (adm.values.get(name as string)) return true\n        if (isPropertyKey(name))\n            return adm.has(name);\n        return name in target;\n    },\n    get(target, name) {\n        if (name === $mobx || name === \"constructor\" || name === mobxDidRunLazyInitializersSymbol)\n            return target[name];\n        const adm = getAdm(target);\n        const observable = adm.values.get(name);\n        if (observable instanceof Atom) {\n            const result = observable.get();\n            if (result === undefined) {\n                // This fixes #1796, because deleting a prop that has an\n                // undefined value won't retrigger a observer (no visible effect),\n                // the autorun wouldn't subscribe to future key changes (see also next comment)\n                adm.has(name);\n            }\n            return result;\n        }\n        // make sure we start listening to future keys\n        // note that we only do this here for optimization\n        if (isPropertyKey(name))\n            adm.has(name);\n        return target[name];\n    },\n    set(target, name, value) {\n        if (!isPropertyKey(name))\n            return false;\n        set(target, name, value);\n        return true;\n    },\n    deleteProperty(target, name) {\n        if (!isPropertyKey(name))\n            return false;\n        const adm = getAdm(target);\n        adm.remove(name);\n        return true;\n    },\n    ownKeys(target) {\n        const adm = getAdm(target);\n        adm.keysAtom.reportObserved();\n        return Reflect.ownKeys(target);\n    },\n    preventExtensions(target) {\n        fail(`Dynamic observable objects cannot be frozen`);\n        return false;\n    }\n};\nfunction createDynamicObservableObject(base) {\n    const proxy = new Proxy(base, objectProxyTraps);\n    base[$mobx].proxy = proxy;\n    return proxy;\n}\n\nfunction hasInterceptors(interceptable) {\n    return interceptable.interceptors !== undefined && interceptable.interceptors.length > 0;\n}\nfunction registerInterceptor(interceptable, handler) {\n    const interceptors = interceptable.interceptors || (interceptable.interceptors = []);\n    interceptors.push(handler);\n    return once(() => {\n        const idx = interceptors.indexOf(handler);\n        if (idx !== -1)\n            interceptors.splice(idx, 1);\n    });\n}\nfunction interceptChange(interceptable, change) {\n    const prevU = untrackedStart();\n    try {\n        // Interceptor can modify the array, copy it to avoid concurrent modification, see #1950\n        const interceptors = [...(interceptable.interceptors || [])];\n        for (let i = 0, l = interceptors.length; i < l; i++) {\n            change = interceptors[i](change);\n            invariant(!change || change.type, \"Intercept handlers should return nothing or a change object\");\n            if (!change)\n                break;\n        }\n        return change;\n    }\n    finally {\n        untrackedEnd(prevU);\n    }\n}\n\nfunction hasListeners(listenable) {\n    return listenable.changeListeners !== undefined && listenable.changeListeners.length > 0;\n}\nfunction registerListener(listenable, handler) {\n    const listeners = listenable.changeListeners || (listenable.changeListeners = []);\n    listeners.push(handler);\n    return once(() => {\n        const idx = listeners.indexOf(handler);\n        if (idx !== -1)\n            listeners.splice(idx, 1);\n    });\n}\nfunction notifyListeners(listenable, change) {\n    const prevU = untrackedStart();\n    let listeners = listenable.changeListeners;\n    if (!listeners)\n        return;\n    listeners = listeners.slice();\n    for (let i = 0, l = listeners.length; i < l; i++) {\n        listeners[i](change);\n    }\n    untrackedEnd(prevU);\n}\n\nconst MAX_SPLICE_SIZE = 10000; // See e.g. https://github.com/mobxjs/mobx/issues/859\nconst arrayTraps = {\n    get(target, name) {\n        if (name === $mobx)\n            return target[$mobx];\n        if (name === \"length\")\n            return target[$mobx].getArrayLength();\n        if (typeof name === \"number\") {\n            return arrayExtensions.get.call(target, name);\n        }\n        if (typeof name === \"string\" && !isNaN(name)) {\n            return arrayExtensions.get.call(target, parseInt(name));\n        }\n        if (arrayExtensions.hasOwnProperty(name)) {\n            return arrayExtensions[name];\n        }\n        return target[name];\n    },\n    set(target, name, value) {\n        if (name === \"length\") {\n            target[$mobx].setArrayLength(value);\n        }\n        if (typeof name === \"number\") {\n            arrayExtensions.set.call(target, name, value);\n        }\n        if (typeof name === \"symbol\" || isNaN(name)) {\n            target[name] = value;\n        }\n        else {\n            // numeric string\n            arrayExtensions.set.call(target, parseInt(name), value);\n        }\n        return true;\n    },\n    preventExtensions(target) {\n        fail(`Observable arrays cannot be frozen`);\n        return false;\n    }\n};\nfunction createObservableArray(initialValues, enhancer, name = \"ObservableArray@\" + getNextId(), owned = false) {\n    const adm = new ObservableArrayAdministration(name, enhancer, owned);\n    addHiddenFinalProp(adm.values, $mobx, adm);\n    const proxy = new Proxy(adm.values, arrayTraps);\n    adm.proxy = proxy;\n    if (initialValues && initialValues.length) {\n        const prev = allowStateChangesStart(true);\n        adm.spliceWithArray(0, 0, initialValues);\n        allowStateChangesEnd(prev);\n    }\n    return proxy;\n}\nclass ObservableArrayAdministration {\n    constructor(name, enhancer, owned) {\n        this.owned = owned;\n        this.values = [];\n        this.proxy = undefined;\n        this.lastKnownLength = 0;\n        this.atom = new Atom(name || \"ObservableArray@\" + getNextId());\n        this.enhancer = (newV, oldV) => enhancer(newV, oldV, name + \"[..]\");\n    }\n    dehanceValue(value) {\n        if (this.dehancer !== undefined)\n            return this.dehancer(value);\n        return value;\n    }\n    dehanceValues(values) {\n        if (this.dehancer !== undefined && values.length > 0)\n            return values.map(this.dehancer);\n        return values;\n    }\n    intercept(handler) {\n        return registerInterceptor(this, handler);\n    }\n    observe(listener, fireImmediately = false) {\n        if (fireImmediately) {\n            listener({\n                object: this.proxy,\n                type: \"splice\",\n                index: 0,\n                added: this.values.slice(),\n                addedCount: this.values.length,\n                removed: [],\n                removedCount: 0\n            });\n        }\n        return registerListener(this, listener);\n    }\n    getArrayLength() {\n        this.atom.reportObserved();\n        return this.values.length;\n    }\n    setArrayLength(newLength) {\n        if (typeof newLength !== \"number\" || newLength < 0)\n            throw new Error(\"[mobx.array] Out of range: \" + newLength);\n        let currentLength = this.values.length;\n        if (newLength === currentLength)\n            return;\n        else if (newLength > currentLength) {\n            const newItems = new Array(newLength - currentLength);\n            for (let i = 0; i < newLength - currentLength; i++)\n                newItems[i] = undefined; // No Array.fill everywhere...\n            this.spliceWithArray(currentLength, 0, newItems);\n        }\n        else\n            this.spliceWithArray(newLength, currentLength - newLength);\n    }\n    updateArrayLength(oldLength, delta) {\n        if (oldLength !== this.lastKnownLength)\n            throw new Error(\"[mobx] Modification exception: the internal structure of an observable array was changed.\");\n        this.lastKnownLength += delta;\n    }\n    spliceWithArray(index, deleteCount, newItems) {\n        checkIfStateModificationsAreAllowed(this.atom);\n        const length = this.values.length;\n        if (index === undefined)\n            index = 0;\n        else if (index > length)\n            index = length;\n        else if (index < 0)\n            index = Math.max(0, length + index);\n        if (arguments.length === 1)\n            deleteCount = length - index;\n        else if (deleteCount === undefined || deleteCount === null)\n            deleteCount = 0;\n        else\n            deleteCount = Math.max(0, Math.min(deleteCount, length - index));\n        if (newItems === undefined)\n            newItems = EMPTY_ARRAY;\n        if (hasInterceptors(this)) {\n            const change = interceptChange(this, {\n                object: this.proxy,\n                type: \"splice\",\n                index,\n                removedCount: deleteCount,\n                added: newItems\n            });\n            if (!change)\n                return EMPTY_ARRAY;\n            deleteCount = change.removedCount;\n            newItems = change.added;\n        }\n        newItems = newItems.length === 0 ? newItems : newItems.map(v => this.enhancer(v, undefined));\n        if (process.env.NODE_ENV !== \"production\") {\n            const lengthDelta = newItems.length - deleteCount;\n            this.updateArrayLength(length, lengthDelta); // checks if internal array wasn't modified\n        }\n        const res = this.spliceItemsIntoValues(index, deleteCount, newItems);\n        if (deleteCount !== 0 || newItems.length !== 0)\n            this.notifyArraySplice(index, newItems, res);\n        return this.dehanceValues(res);\n    }\n    spliceItemsIntoValues(index, deleteCount, newItems) {\n        if (newItems.length < MAX_SPLICE_SIZE) {\n            return this.values.splice(index, deleteCount, ...newItems);\n        }\n        else {\n            const res = this.values.slice(index, index + deleteCount);\n            this.values = this.values\n                .slice(0, index)\n                .concat(newItems, this.values.slice(index + deleteCount));\n            return res;\n        }\n    }\n    notifyArrayChildUpdate(index, newValue, oldValue) {\n        const notifySpy = !this.owned && isSpyEnabled();\n        const notify = hasListeners(this);\n        const change = notify || notifySpy\n            ? {\n                object: this.proxy,\n                type: \"update\",\n                index,\n                newValue,\n                oldValue\n            }\n            : null;\n        // The reason why this is on right hand side here (and not above), is this way the uglifier will drop it, but it won't\n        // cause any runtime overhead in development mode without NODE_ENV set, unless spying is enabled\n        if (notifySpy && process.env.NODE_ENV !== \"production\")\n            spyReportStart(Object.assign(Object.assign({}, change), { name: this.atom.name }));\n        this.atom.reportChanged();\n        if (notify)\n            notifyListeners(this, change);\n        if (notifySpy && process.env.NODE_ENV !== \"production\")\n            spyReportEnd();\n    }\n    notifyArraySplice(index, added, removed) {\n        const notifySpy = !this.owned && isSpyEnabled();\n        const notify = hasListeners(this);\n        const change = notify || notifySpy\n            ? {\n                object: this.proxy,\n                type: \"splice\",\n                index,\n                removed,\n                added,\n                removedCount: removed.length,\n                addedCount: added.length\n            }\n            : null;\n        if (notifySpy && process.env.NODE_ENV !== \"production\")\n            spyReportStart(Object.assign(Object.assign({}, change), { name: this.atom.name }));\n        this.atom.reportChanged();\n        // conform: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/observe\n        if (notify)\n            notifyListeners(this, change);\n        if (notifySpy && process.env.NODE_ENV !== \"production\")\n            spyReportEnd();\n    }\n}\nconst arrayExtensions = {\n    intercept(handler) {\n        return this[$mobx].intercept(handler);\n    },\n    observe(listener, fireImmediately = false) {\n        const adm = this[$mobx];\n        return adm.observe(listener, fireImmediately);\n    },\n    clear() {\n        return this.splice(0);\n    },\n    replace(newItems) {\n        const adm = this[$mobx];\n        return adm.spliceWithArray(0, adm.values.length, newItems);\n    },\n    /**\n     * Converts this array back to a (shallow) javascript structure.\n     * For a deep clone use mobx.toJS\n     */\n    toJS() {\n        return this.slice();\n    },\n    toJSON() {\n        // Used by JSON.stringify\n        return this.toJS();\n    },\n    /*\n     * functions that do alter the internal structure of the array, (based on lib.es6.d.ts)\n     * since these functions alter the inner structure of the array, the have side effects.\n     * Because the have side effects, they should not be used in computed function,\n     * and for that reason the do not call dependencyState.notifyObserved\n     */\n    splice(index, deleteCount, ...newItems) {\n        const adm = this[$mobx];\n        switch (arguments.length) {\n            case 0:\n                return [];\n            case 1:\n                return adm.spliceWithArray(index);\n            case 2:\n                return adm.spliceWithArray(index, deleteCount);\n        }\n        return adm.spliceWithArray(index, deleteCount, newItems);\n    },\n    spliceWithArray(index, deleteCount, newItems) {\n        const adm = this[$mobx];\n        return adm.spliceWithArray(index, deleteCount, newItems);\n    },\n    push(...items) {\n        const adm = this[$mobx];\n        adm.spliceWithArray(adm.values.length, 0, items);\n        return adm.values.length;\n    },\n    pop() {\n        return this.splice(Math.max(this[$mobx].values.length - 1, 0), 1)[0];\n    },\n    shift() {\n        return this.splice(0, 1)[0];\n    },\n    unshift(...items) {\n        const adm = this[$mobx];\n        adm.spliceWithArray(0, 0, items);\n        return adm.values.length;\n    },\n    reverse() {\n        // reverse by default mutates in place before returning the result\n        // which makes it both a 'derivation' and a 'mutation'.\n        // so we deviate from the default and just make it an dervitation\n        if (process.env.NODE_ENV !== \"production\") {\n            console.warn(\"[mobx] `observableArray.reverse()` will not update the array in place. Use `observableArray.slice().reverse()` to suppress this warning and perform the operation on a copy, or `observableArray.replace(observableArray.slice().reverse())` to reverse & update in place\");\n        }\n        const clone = this.slice();\n        return clone.reverse.apply(clone, arguments);\n    },\n    sort(compareFn) {\n        // sort by default mutates in place before returning the result\n        // which goes against all good practices. Let's not change the array in place!\n        if (process.env.NODE_ENV !== \"production\") {\n            console.warn(\"[mobx] `observableArray.sort()` will not update the array in place. Use `observableArray.slice().sort()` to suppress this warning and perform the operation on a copy, or `observableArray.replace(observableArray.slice().sort())` to sort & update in place\");\n        }\n        const clone = this.slice();\n        return clone.sort.apply(clone, arguments);\n    },\n    remove(value) {\n        const adm = this[$mobx];\n        const idx = adm.dehanceValues(adm.values).indexOf(value);\n        if (idx > -1) {\n            this.splice(idx, 1);\n            return true;\n        }\n        return false;\n    },\n    get(index) {\n        const adm = this[$mobx];\n        if (adm) {\n            if (index < adm.values.length) {\n                adm.atom.reportObserved();\n                return adm.dehanceValue(adm.values[index]);\n            }\n            console.warn(`[mobx.array] Attempt to read an array index (${index}) that is out of bounds (${adm.values.length}). Please check length first. Out of bound indices will not be tracked by MobX`);\n        }\n        return undefined;\n    },\n    set(index, newValue) {\n        const adm = this[$mobx];\n        const values = adm.values;\n        if (index < values.length) {\n            // update at index in range\n            checkIfStateModificationsAreAllowed(adm.atom);\n            const oldValue = values[index];\n            if (hasInterceptors(adm)) {\n                const change = interceptChange(adm, {\n                    type: \"update\",\n                    object: adm.proxy,\n                    index,\n                    newValue\n                });\n                if (!change)\n                    return;\n                newValue = change.newValue;\n            }\n            newValue = adm.enhancer(newValue, oldValue);\n            const changed = newValue !== oldValue;\n            if (changed) {\n                values[index] = newValue;\n                adm.notifyArrayChildUpdate(index, newValue, oldValue);\n            }\n        }\n        else if (index === values.length) {\n            // add a new item\n            adm.spliceWithArray(index, 0, [newValue]);\n        }\n        else {\n            // out of bounds\n            throw new Error(`[mobx.array] Index out of bounds, ${index} is larger than ${values.length}`);\n        }\n    }\n};\n[\n    \"concat\",\n    \"every\",\n    \"filter\",\n    \"forEach\",\n    \"indexOf\",\n    \"join\",\n    \"lastIndexOf\",\n    \"map\",\n    \"reduce\",\n    \"reduceRight\",\n    \"slice\",\n    \"some\",\n    \"toString\",\n    \"toLocaleString\"\n].forEach(funcName => {\n    arrayExtensions[funcName] = function () {\n        const adm = this[$mobx];\n        adm.atom.reportObserved();\n        const res = adm.dehanceValues(adm.values);\n        return res[funcName].apply(res, arguments);\n    };\n});\nconst isObservableArrayAdministration = createInstanceofPredicate(\"ObservableArrayAdministration\", ObservableArrayAdministration);\nfunction isObservableArray(thing) {\n    return isObject(thing) && isObservableArrayAdministration(thing[$mobx]);\n}\n\nvar _a;\nconst ObservableMapMarker = {};\n// just extend Map? See also https://gist.github.com/nestharus/13b4d74f2ef4a2f4357dbd3fc23c1e54\n// But: https://github.com/mobxjs/mobx/issues/1556\nclass ObservableMap {\n    constructor(initialData, enhancer = deepEnhancer, name = \"ObservableMap@\" + getNextId()) {\n        this.enhancer = enhancer;\n        this.name = name;\n        this[_a] = ObservableMapMarker;\n        this._keysAtom = createAtom(`${this.name}.keys()`);\n        this[Symbol.toStringTag] = \"Map\";\n        if (typeof Map !== \"function\") {\n            throw new Error(\"mobx.map requires Map polyfill for the current browser. Check babel-polyfill or core-js/es6/map.js\");\n        }\n        this._data = new Map();\n        this._hasMap = new Map();\n        this.merge(initialData);\n    }\n    _has(key) {\n        return this._data.has(key);\n    }\n    has(key) {\n        if (!globalState.trackingDerivation)\n            return this._has(key);\n        let entry = this._hasMap.get(key);\n        if (!entry) {\n            // todo: replace with atom (breaking change)\n            const newEntry = (entry = new ObservableValue(this._has(key), referenceEnhancer, `${this.name}.${stringifyKey(key)}?`, false));\n            this._hasMap.set(key, newEntry);\n            onBecomeUnobserved(newEntry, () => this._hasMap.delete(key));\n        }\n        return entry.get();\n    }\n    set(key, value) {\n        const hasKey = this._has(key);\n        if (hasInterceptors(this)) {\n            const change = interceptChange(this, {\n                type: hasKey ? \"update\" : \"add\",\n                object: this,\n                newValue: value,\n                name: key\n            });\n            if (!change)\n                return this;\n            value = change.newValue;\n        }\n        if (hasKey) {\n            this._updateValue(key, value);\n        }\n        else {\n            this._addValue(key, value);\n        }\n        return this;\n    }\n    delete(key) {\n        if (hasInterceptors(this)) {\n            const change = interceptChange(this, {\n                type: \"delete\",\n                object: this,\n                name: key\n            });\n            if (!change)\n                return false;\n        }\n        if (this._has(key)) {\n            const notifySpy = isSpyEnabled();\n            const notify = hasListeners(this);\n            const change = notify || notifySpy\n                ? {\n                    type: \"delete\",\n                    object: this,\n                    oldValue: this._data.get(key).value,\n                    name: key\n                }\n                : null;\n            if (notifySpy && process.env.NODE_ENV !== \"production\")\n                spyReportStart(Object.assign(Object.assign({}, change), { name: this.name, key }));\n            transaction(() => {\n                this._keysAtom.reportChanged();\n                this._updateHasMapEntry(key, false);\n                const observable = this._data.get(key);\n                observable.setNewValue(undefined);\n                this._data.delete(key);\n            });\n            if (notify)\n                notifyListeners(this, change);\n            if (notifySpy && process.env.NODE_ENV !== \"production\")\n                spyReportEnd();\n            return true;\n        }\n        return false;\n    }\n    _updateHasMapEntry(key, value) {\n        let entry = this._hasMap.get(key);\n        if (entry) {\n            entry.setNewValue(value);\n        }\n    }\n    _updateValue(key, newValue) {\n        const observable = this._data.get(key);\n        newValue = observable.prepareNewValue(newValue);\n        if (newValue !== globalState.UNCHANGED) {\n            const notifySpy = isSpyEnabled();\n            const notify = hasListeners(this);\n            const change = notify || notifySpy\n                ? {\n                    type: \"update\",\n                    object: this,\n                    oldValue: observable.value,\n                    name: key,\n                    newValue\n                }\n                : null;\n            if (notifySpy && process.env.NODE_ENV !== \"production\")\n                spyReportStart(Object.assign(Object.assign({}, change), { name: this.name, key }));\n            observable.setNewValue(newValue);\n            if (notify)\n                notifyListeners(this, change);\n            if (notifySpy && process.env.NODE_ENV !== \"production\")\n                spyReportEnd();\n        }\n    }\n    _addValue(key, newValue) {\n        checkIfStateModificationsAreAllowed(this._keysAtom);\n        transaction(() => {\n            const observable = new ObservableValue(newValue, this.enhancer, `${this.name}.${stringifyKey(key)}`, false);\n            this._data.set(key, observable);\n            newValue = observable.value; // value might have been changed\n            this._updateHasMapEntry(key, true);\n            this._keysAtom.reportChanged();\n        });\n        const notifySpy = isSpyEnabled();\n        const notify = hasListeners(this);\n        const change = notify || notifySpy\n            ? {\n                type: \"add\",\n                object: this,\n                name: key,\n                newValue\n            }\n            : null;\n        if (notifySpy && process.env.NODE_ENV !== \"production\")\n            spyReportStart(Object.assign(Object.assign({}, change), { name: this.name, key }));\n        if (notify)\n            notifyListeners(this, change);\n        if (notifySpy && process.env.NODE_ENV !== \"production\")\n            spyReportEnd();\n    }\n    get(key) {\n        if (this.has(key))\n            return this.dehanceValue(this._data.get(key).get());\n        return this.dehanceValue(undefined);\n    }\n    dehanceValue(value) {\n        if (this.dehancer !== undefined) {\n            return this.dehancer(value);\n        }\n        return value;\n    }\n    keys() {\n        this._keysAtom.reportObserved();\n        return this._data.keys();\n    }\n    values() {\n        const self = this;\n        let nextIndex = 0;\n        const keys = Array.from(this.keys());\n        return makeIterable({\n            next() {\n                return nextIndex < keys.length\n                    ? { value: self.get(keys[nextIndex++]), done: false }\n                    : { done: true };\n            }\n        });\n    }\n    entries() {\n        const self = this;\n        let nextIndex = 0;\n        const keys = Array.from(this.keys());\n        return makeIterable({\n            next: function () {\n                if (nextIndex < keys.length) {\n                    const key = keys[nextIndex++];\n                    return {\n                        value: [key, self.get(key)],\n                        done: false\n                    };\n                }\n                return { done: true };\n            }\n        });\n    }\n    [(_a = $mobx, Symbol.iterator)]() {\n        return this.entries();\n    }\n    forEach(callback, thisArg) {\n        for (const [key, value] of this)\n            callback.call(thisArg, value, key, this);\n    }\n    /** Merge another object into this object, returns this. */\n    merge(other) {\n        if (isObservableMap(other)) {\n            other = other.toJS();\n        }\n        transaction(() => {\n            if (isPlainObject(other))\n                getPlainObjectKeys(other).forEach(key => this.set(key, other[key]));\n            else if (Array.isArray(other))\n                other.forEach(([key, value]) => this.set(key, value));\n            else if (isES6Map(other)) {\n                if (other.constructor !== Map)\n                    fail(\"Cannot initialize from classes that inherit from Map: \" + other.constructor.name); // prettier-ignore\n                other.forEach((value, key) => this.set(key, value));\n            }\n            else if (other !== null && other !== undefined)\n                fail(\"Cannot initialize map from \" + other);\n        });\n        return this;\n    }\n    clear() {\n        transaction(() => {\n            untracked(() => {\n                for (const key of this.keys())\n                    this.delete(key);\n            });\n        });\n    }\n    replace(values) {\n        transaction(() => {\n            // grab all the keys that are present in the new map but not present in the current map\n            // and delete them from the map, then merge the new map\n            // this will cause reactions only on changed values\n            const newKeys = getMapLikeKeys(values);\n            const oldKeys = Array.from(this.keys());\n            const missingKeys = oldKeys.filter(k => newKeys.indexOf(k) === -1);\n            missingKeys.forEach(k => this.delete(k));\n            this.merge(values);\n        });\n        return this;\n    }\n    get size() {\n        this._keysAtom.reportObserved();\n        return this._data.size;\n    }\n    /**\n     * Returns a plain object that represents this map.\n     * Note that all the keys being stringified.\n     * If there are duplicating keys after converting them to strings, behaviour is undetermined.\n     */\n    toPOJO() {\n        const res = {};\n        for (const [key, value] of this) {\n            // We lie about symbol key types due to https://github.com/Microsoft/TypeScript/issues/1863\n            res[typeof key === \"symbol\" ? key : stringifyKey(key)] = value;\n        }\n        return res;\n    }\n    /**\n     * Returns a shallow non observable object clone of this map.\n     * Note that the values migth still be observable. For a deep clone use mobx.toJS.\n     */\n    toJS() {\n        return new Map(this);\n    }\n    toJSON() {\n        // Used by JSON.stringify\n        return this.toPOJO();\n    }\n    toString() {\n        return (this.name +\n            \"[{ \" +\n            Array.from(this.keys())\n                .map(key => `${stringifyKey(key)}: ${\"\" + this.get(key)}`)\n                .join(\", \") +\n            \" }]\");\n    }\n    /**\n     * Observes this object. Triggers for the events 'add', 'update' and 'delete'.\n     * See: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/observe\n     * for callback details\n     */\n    observe(listener, fireImmediately) {\n        process.env.NODE_ENV !== \"production\" &&\n            invariant(fireImmediately !== true, \"`observe` doesn't support fireImmediately=true in combination with maps.\");\n        return registerListener(this, listener);\n    }\n    intercept(handler) {\n        return registerInterceptor(this, handler);\n    }\n}\n/* 'var' fixes small-build issue */\nconst isObservableMap = createInstanceofPredicate(\"ObservableMap\", ObservableMap);\n\nvar _a$1;\nconst ObservableSetMarker = {};\nclass ObservableSet {\n    constructor(initialData, enhancer = deepEnhancer, name = \"ObservableSet@\" + getNextId()) {\n        this.name = name;\n        this[_a$1] = ObservableSetMarker;\n        this._data = new Set();\n        this._atom = createAtom(this.name);\n        this[Symbol.toStringTag] = \"Set\";\n        if (typeof Set !== \"function\") {\n            throw new Error(\"mobx.set requires Set polyfill for the current browser. Check babel-polyfill or core-js/es6/set.js\");\n        }\n        this.enhancer = (newV, oldV) => enhancer(newV, oldV, name);\n        if (initialData) {\n            this.replace(initialData);\n        }\n    }\n    dehanceValue(value) {\n        if (this.dehancer !== undefined) {\n            return this.dehancer(value);\n        }\n        return value;\n    }\n    clear() {\n        transaction(() => {\n            untracked(() => {\n                for (const value of this._data.values())\n                    this.delete(value);\n            });\n        });\n    }\n    forEach(callbackFn, thisArg) {\n        for (const value of this) {\n            callbackFn.call(thisArg, value, value, this);\n        }\n    }\n    get size() {\n        this._atom.reportObserved();\n        return this._data.size;\n    }\n    add(value) {\n        checkIfStateModificationsAreAllowed(this._atom);\n        if (hasInterceptors(this)) {\n            const change = interceptChange(this, {\n                type: \"add\",\n                object: this,\n                newValue: value\n            });\n            if (!change)\n                return this;\n            // TODO: ideally, value = change.value would be done here, so that values can be\n            // changed by interceptor. Same applies for other Set and Map api's.\n        }\n        if (!this.has(value)) {\n            transaction(() => {\n                this._data.add(this.enhancer(value, undefined));\n                this._atom.reportChanged();\n            });\n            const notifySpy = isSpyEnabled();\n            const notify = hasListeners(this);\n            const change = notify || notifySpy\n                ? {\n                    type: \"add\",\n                    object: this,\n                    newValue: value\n                }\n                : null;\n            if (notifySpy && process.env.NODE_ENV !== \"production\")\n                spyReportStart(change);\n            if (notify)\n                notifyListeners(this, change);\n            if (notifySpy && process.env.NODE_ENV !== \"production\")\n                spyReportEnd();\n        }\n        return this;\n    }\n    delete(value) {\n        if (hasInterceptors(this)) {\n            const change = interceptChange(this, {\n                type: \"delete\",\n                object: this,\n                oldValue: value\n            });\n            if (!change)\n                return false;\n        }\n        if (this.has(value)) {\n            const notifySpy = isSpyEnabled();\n            const notify = hasListeners(this);\n            const change = notify || notifySpy\n                ? {\n                    type: \"delete\",\n                    object: this,\n                    oldValue: value\n                }\n                : null;\n            if (notifySpy && process.env.NODE_ENV !== \"production\")\n                spyReportStart(Object.assign(Object.assign({}, change), { name: this.name }));\n            transaction(() => {\n                this._atom.reportChanged();\n                this._data.delete(value);\n            });\n            if (notify)\n                notifyListeners(this, change);\n            if (notifySpy && process.env.NODE_ENV !== \"production\")\n                spyReportEnd();\n            return true;\n        }\n        return false;\n    }\n    has(value) {\n        this._atom.reportObserved();\n        return this._data.has(this.dehanceValue(value));\n    }\n    entries() {\n        let nextIndex = 0;\n        const keys = Array.from(this.keys());\n        const values = Array.from(this.values());\n        return makeIterable({\n            next() {\n                const index = nextIndex;\n                nextIndex += 1;\n                return index < values.length\n                    ? { value: [keys[index], values[index]], done: false }\n                    : { done: true };\n            }\n        });\n    }\n    keys() {\n        return this.values();\n    }\n    values() {\n        this._atom.reportObserved();\n        const self = this;\n        let nextIndex = 0;\n        const observableValues = Array.from(this._data.values());\n        return makeIterable({\n            next() {\n                return nextIndex < observableValues.length\n                    ? { value: self.dehanceValue(observableValues[nextIndex++]), done: false }\n                    : { done: true };\n            }\n        });\n    }\n    replace(other) {\n        if (isObservableSet(other)) {\n            other = other.toJS();\n        }\n        transaction(() => {\n            if (Array.isArray(other)) {\n                this.clear();\n                other.forEach(value => this.add(value));\n            }\n            else if (isES6Set(other)) {\n                this.clear();\n                other.forEach(value => this.add(value));\n            }\n            else if (other !== null && other !== undefined) {\n                fail(\"Cannot initialize set from \" + other);\n            }\n        });\n        return this;\n    }\n    observe(listener, fireImmediately) {\n        // TODO 'fireImmediately' can be true?\n        process.env.NODE_ENV !== \"production\" &&\n            invariant(fireImmediately !== true, \"`observe` doesn't support fireImmediately=true in combination with sets.\");\n        return registerListener(this, listener);\n    }\n    intercept(handler) {\n        return registerInterceptor(this, handler);\n    }\n    toJS() {\n        return new Set(this);\n    }\n    toString() {\n        return this.name + \"[ \" + Array.from(this).join(\", \") + \" ]\";\n    }\n    [(_a$1 = $mobx, Symbol.iterator)]() {\n        return this.values();\n    }\n}\nconst isObservableSet = createInstanceofPredicate(\"ObservableSet\", ObservableSet);\n\nclass ObservableObjectAdministration {\n    constructor(target, values = new Map(), name, defaultEnhancer) {\n        this.target = target;\n        this.values = values;\n        this.name = name;\n        this.defaultEnhancer = defaultEnhancer;\n        this.keysAtom = new Atom(name + \".keys\");\n    }\n    read(key) {\n        return this.values.get(key).get();\n    }\n    write(key, newValue) {\n        const instance = this.target;\n        const observable = this.values.get(key);\n        if (observable instanceof ComputedValue) {\n            observable.set(newValue);\n            return;\n        }\n        // intercept\n        if (hasInterceptors(this)) {\n            const change = interceptChange(this, {\n                type: \"update\",\n                object: this.proxy || instance,\n                name: key,\n                newValue\n            });\n            if (!change)\n                return;\n            newValue = change.newValue;\n        }\n        newValue = observable.prepareNewValue(newValue);\n        // notify spy & observers\n        if (newValue !== globalState.UNCHANGED) {\n            const notify = hasListeners(this);\n            const notifySpy = isSpyEnabled();\n            const change = notify || notifySpy\n                ? {\n                    type: \"update\",\n                    object: this.proxy || instance,\n                    oldValue: observable.value,\n                    name: key,\n                    newValue\n                }\n                : null;\n            if (notifySpy && process.env.NODE_ENV !== \"production\")\n                spyReportStart(Object.assign(Object.assign({}, change), { name: this.name, key }));\n            observable.setNewValue(newValue);\n            if (notify)\n                notifyListeners(this, change);\n            if (notifySpy && process.env.NODE_ENV !== \"production\")\n                spyReportEnd();\n        }\n    }\n    has(key) {\n        const map = this.pendingKeys || (this.pendingKeys = new Map());\n        let entry = map.get(key);\n        if (entry)\n            return entry.get();\n        else {\n            const exists = !!this.values.get(key);\n            // Possible optimization: Don't have a separate map for non existing keys,\n            // but store them in the values map instead, using a special symbol to denote \"not existing\"\n            entry = new ObservableValue(exists, referenceEnhancer, `${this.name}.${stringifyKey(key)}?`, false);\n            map.set(key, entry);\n            return entry.get(); // read to subscribe\n        }\n    }\n    addObservableProp(propName, newValue, enhancer = this.defaultEnhancer) {\n        const { target } = this;\n        assertPropertyConfigurable(target, propName);\n        if (hasInterceptors(this)) {\n            const change = interceptChange(this, {\n                object: this.proxy || target,\n                name: propName,\n                type: \"add\",\n                newValue\n            });\n            if (!change)\n                return;\n            newValue = change.newValue;\n        }\n        const observable = new ObservableValue(newValue, enhancer, `${this.name}.${stringifyKey(propName)}`, false);\n        this.values.set(propName, observable);\n        newValue = observable.value; // observableValue might have changed it\n        Object.defineProperty(target, propName, generateObservablePropConfig(propName));\n        this.notifyPropertyAddition(propName, newValue);\n    }\n    addComputedProp(propertyOwner, // where is the property declared?\n    propName, options) {\n        const { target } = this;\n        options.name = options.name || `${this.name}.${stringifyKey(propName)}`;\n        this.values.set(propName, new ComputedValue(options));\n        if (propertyOwner === target || isPropertyConfigurable(propertyOwner, propName))\n            Object.defineProperty(propertyOwner, propName, generateComputedPropConfig(propName));\n    }\n    remove(key) {\n        if (!this.values.has(key))\n            return;\n        const { target } = this;\n        if (hasInterceptors(this)) {\n            const change = interceptChange(this, {\n                object: this.proxy || target,\n                name: key,\n                type: \"remove\"\n            });\n            if (!change)\n                return;\n        }\n        try {\n            startBatch();\n            const notify = hasListeners(this);\n            const notifySpy = isSpyEnabled();\n            const oldObservable = this.values.get(key);\n            const oldValue = oldObservable && oldObservable.get();\n            oldObservable && oldObservable.set(undefined);\n            // notify key and keyset listeners\n            this.keysAtom.reportChanged();\n            this.values.delete(key);\n            if (this.pendingKeys) {\n                const entry = this.pendingKeys.get(key);\n                if (entry)\n                    entry.set(false);\n            }\n            // delete the prop\n            delete this.target[key];\n            const change = notify || notifySpy\n                ? {\n                    type: \"remove\",\n                    object: this.proxy || target,\n                    oldValue: oldValue,\n                    name: key\n                }\n                : null;\n            if (notifySpy && process.env.NODE_ENV !== \"production\")\n                spyReportStart(Object.assign(Object.assign({}, change), { name: this.name, key }));\n            if (notify)\n                notifyListeners(this, change);\n            if (notifySpy && process.env.NODE_ENV !== \"production\")\n                spyReportEnd();\n        }\n        finally {\n            endBatch();\n        }\n    }\n    illegalAccess(owner, propName) {\n        /**\n         * This happens if a property is accessed through the prototype chain, but the property was\n         * declared directly as own property on the prototype.\n         *\n         * E.g.:\n         * class A {\n         * }\n         * extendObservable(A.prototype, { x: 1 })\n         *\n         * classB extens A {\n         * }\n         * console.log(new B().x)\n         *\n         * It is unclear whether the property should be considered 'static' or inherited.\n         * Either use `console.log(A.x)`\n         * or: decorate(A, { x: observable })\n         *\n         * When using decorate, the property will always be redeclared as own property on the actual instance\n         */\n        console.warn(`Property '${propName}' of '${owner}' was accessed through the prototype chain. Use 'decorate' instead to declare the prop or access it statically through it's owner`);\n    }\n    /**\n     * Observes this object. Triggers for the events 'add', 'update' and 'delete'.\n     * See: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/observe\n     * for callback details\n     */\n    observe(callback, fireImmediately) {\n        process.env.NODE_ENV !== \"production\" &&\n            invariant(fireImmediately !== true, \"`observe` doesn't support the fire immediately property for observable objects.\");\n        return registerListener(this, callback);\n    }\n    intercept(handler) {\n        return registerInterceptor(this, handler);\n    }\n    notifyPropertyAddition(key, newValue) {\n        const notify = hasListeners(this);\n        const notifySpy = isSpyEnabled();\n        const change = notify || notifySpy\n            ? {\n                type: \"add\",\n                object: this.proxy || this.target,\n                name: key,\n                newValue\n            }\n            : null;\n        if (notifySpy && process.env.NODE_ENV !== \"production\")\n            spyReportStart(Object.assign(Object.assign({}, change), { name: this.name, key }));\n        if (notify)\n            notifyListeners(this, change);\n        if (notifySpy && process.env.NODE_ENV !== \"production\")\n            spyReportEnd();\n        if (this.pendingKeys) {\n            const entry = this.pendingKeys.get(key);\n            if (entry)\n                entry.set(true);\n        }\n        this.keysAtom.reportChanged();\n    }\n    getKeys() {\n        this.keysAtom.reportObserved();\n        // return Reflect.ownKeys(this.values) as any\n        const res = [];\n        for (const [key, value] of this.values)\n            if (value instanceof ObservableValue)\n                res.push(key);\n        return res;\n    }\n}\nfunction asObservableObject(target, name = \"\", defaultEnhancer = deepEnhancer) {\n    if (Object.prototype.hasOwnProperty.call(target, $mobx))\n        return target[$mobx];\n    process.env.NODE_ENV !== \"production\" &&\n        invariant(Object.isExtensible(target), \"Cannot make the designated object observable; it is not extensible\");\n    if (!isPlainObject(target))\n        name = (target.constructor.name || \"ObservableObject\") + \"@\" + getNextId();\n    if (!name)\n        name = \"ObservableObject@\" + getNextId();\n    const adm = new ObservableObjectAdministration(target, new Map(), stringifyKey(name), defaultEnhancer);\n    addHiddenProp(target, $mobx, adm);\n    return adm;\n}\nconst observablePropertyConfigs = Object.create(null);\nconst computedPropertyConfigs = Object.create(null);\nfunction generateObservablePropConfig(propName) {\n    return (observablePropertyConfigs[propName] ||\n        (observablePropertyConfigs[propName] = {\n            configurable: true,\n            enumerable: true,\n            get() {\n                return this[$mobx].read(propName);\n            },\n            set(v) {\n                this[$mobx].write(propName, v);\n            }\n        }));\n}\nfunction getAdministrationForComputedPropOwner(owner) {\n    const adm = owner[$mobx];\n    if (!adm) {\n        // because computed props are declared on proty,\n        // the current instance might not have been initialized yet\n        initializeInstance(owner);\n        return owner[$mobx];\n    }\n    return adm;\n}\nfunction generateComputedPropConfig(propName) {\n    return (computedPropertyConfigs[propName] ||\n        (computedPropertyConfigs[propName] = {\n            configurable: globalState.computedConfigurable,\n            enumerable: false,\n            get() {\n                return getAdministrationForComputedPropOwner(this).read(propName);\n            },\n            set(v) {\n                getAdministrationForComputedPropOwner(this).write(propName, v);\n            }\n        }));\n}\nconst isObservableObjectAdministration = createInstanceofPredicate(\"ObservableObjectAdministration\", ObservableObjectAdministration);\nfunction isObservableObject(thing) {\n    if (isObject(thing)) {\n        // Initializers run lazily when transpiling to babel, so make sure they are run...\n        initializeInstance(thing);\n        return isObservableObjectAdministration(thing[$mobx]);\n    }\n    return false;\n}\n\nfunction getAtom(thing, property) {\n    if (typeof thing === \"object\" && thing !== null) {\n        if (isObservableArray(thing)) {\n            if (property !== undefined)\n                fail(process.env.NODE_ENV !== \"production\" &&\n                    \"It is not possible to get index atoms from arrays\");\n            return thing[$mobx].atom;\n        }\n        if (isObservableSet(thing)) {\n            return thing[$mobx];\n        }\n        if (isObservableMap(thing)) {\n            const anyThing = thing;\n            if (property === undefined)\n                return anyThing._keysAtom;\n            const observable = anyThing._data.get(property) || anyThing._hasMap.get(property);\n            if (!observable)\n                fail(process.env.NODE_ENV !== \"production\" &&\n                    `the entry '${property}' does not exist in the observable map '${getDebugName(thing)}'`);\n            return observable;\n        }\n        // Initializers run lazily when transpiling to babel, so make sure they are run...\n        initializeInstance(thing);\n        if (property && !thing[$mobx])\n            thing[property]; // See #1072\n        if (isObservableObject(thing)) {\n            if (!property)\n                return fail(process.env.NODE_ENV !== \"production\" && `please specify a property`);\n            const observable = thing[$mobx].values.get(property);\n            if (!observable)\n                fail(process.env.NODE_ENV !== \"production\" &&\n                    `no observable property '${property}' found on the observable object '${getDebugName(thing)}'`);\n            return observable;\n        }\n        if (isAtom(thing) || isComputedValue(thing) || isReaction(thing)) {\n            return thing;\n        }\n    }\n    else if (typeof thing === \"function\") {\n        if (isReaction(thing[$mobx])) {\n            // disposer function\n            return thing[$mobx];\n        }\n    }\n    return fail(process.env.NODE_ENV !== \"production\" && \"Cannot obtain atom from \" + thing);\n}\nfunction getAdministration(thing, property) {\n    if (!thing)\n        fail(\"Expecting some object\");\n    if (property !== undefined)\n        return getAdministration(getAtom(thing, property));\n    if (isAtom(thing) || isComputedValue(thing) || isReaction(thing))\n        return thing;\n    if (isObservableMap(thing) || isObservableSet(thing))\n        return thing;\n    // Initializers run lazily when transpiling to babel, so make sure they are run...\n    initializeInstance(thing);\n    if (thing[$mobx])\n        return thing[$mobx];\n    fail(process.env.NODE_ENV !== \"production\" && \"Cannot obtain administration from \" + thing);\n}\nfunction getDebugName(thing, property) {\n    let named;\n    if (property !== undefined)\n        named = getAtom(thing, property);\n    else if (isObservableObject(thing) || isObservableMap(thing) || isObservableSet(thing))\n        named = getAdministration(thing);\n    else\n        named = getAtom(thing); // valid for arrays as well\n    return named.name;\n}\n\nconst toString = Object.prototype.toString;\nfunction deepEqual(a, b, depth = -1) {\n    return eq(a, b, depth);\n}\n// Copied from https://github.com/jashkenas/underscore/blob/5c237a7c682fb68fd5378203f0bf22dce1624854/underscore.js#L1186-L1289\n// Internal recursive comparison function for `isEqual`.\nfunction eq(a, b, depth, aStack, bStack) {\n    // Identical objects are equal. `0 === -0`, but they aren't identical.\n    // See the [Harmony `egal` proposal](http://wiki.ecmascript.org/doku.php?id=harmony:egal).\n    if (a === b)\n        return a !== 0 || 1 / a === 1 / b;\n    // `null` or `undefined` only equal to itself (strict comparison).\n    if (a == null || b == null)\n        return false;\n    // `NaN`s are equivalent, but non-reflexive.\n    if (a !== a)\n        return b !== b;\n    // Exhaust primitive checks\n    const type = typeof a;\n    if (type !== \"function\" && type !== \"object\" && typeof b != \"object\")\n        return false;\n    // Compare `[[Class]]` names.\n    const className = toString.call(a);\n    if (className !== toString.call(b))\n        return false;\n    switch (className) {\n        // Strings, numbers, regular expressions, dates, and booleans are compared by value.\n        case \"[object RegExp]\":\n        // RegExps are coerced to strings for comparison (Note: '' + /a/i === '/a/i')\n        case \"[object String]\":\n            // Primitives and their corresponding object wrappers are equivalent; thus, `\"5\"` is\n            // equivalent to `new String(\"5\")`.\n            return \"\" + a === \"\" + b;\n        case \"[object Number]\":\n            // `NaN`s are equivalent, but non-reflexive.\n            // Object(NaN) is equivalent to NaN.\n            if (+a !== +a)\n                return +b !== +b;\n            // An `egal` comparison is performed for other numeric values.\n            return +a === 0 ? 1 / +a === 1 / b : +a === +b;\n        case \"[object Date]\":\n        case \"[object Boolean]\":\n            // Coerce dates and booleans to numeric primitive values. Dates are compared by their\n            // millisecond representations. Note that invalid dates with millisecond representations\n            // of `NaN` are not equivalent.\n            return +a === +b;\n        case \"[object Symbol]\":\n            return (typeof Symbol !== \"undefined\" && Symbol.valueOf.call(a) === Symbol.valueOf.call(b));\n        case \"[object Map]\":\n        case \"[object Set]\":\n            // Maps and Sets are unwrapped to arrays of entry-pairs, adding an incidental level.\n            // Hide this extra level by increasing the depth.\n            if (depth >= 0) {\n                depth++;\n            }\n            break;\n    }\n    // Unwrap any wrapped objects.\n    a = unwrap(a);\n    b = unwrap(b);\n    const areArrays = className === \"[object Array]\";\n    if (!areArrays) {\n        if (typeof a != \"object\" || typeof b != \"object\")\n            return false;\n        // Objects with different constructors are not equivalent, but `Object`s or `Array`s\n        // from different frames are.\n        const aCtor = a.constructor, bCtor = b.constructor;\n        if (aCtor !== bCtor &&\n            !(typeof aCtor === \"function\" &&\n                aCtor instanceof aCtor &&\n                typeof bCtor === \"function\" &&\n                bCtor instanceof bCtor) &&\n            (\"constructor\" in a && \"constructor\" in b)) {\n            return false;\n        }\n    }\n    if (depth === 0) {\n        return false;\n    }\n    else if (depth < 0) {\n        depth = -1;\n    }\n    // Assume equality for cyclic structures. The algorithm for detecting cyclic\n    // structures is adapted from ES 5.1 section 15.12.3, abstract operation `JO`.\n    // Initializing stack of traversed objects.\n    // It's done here since we only need them for objects and arrays comparison.\n    aStack = aStack || [];\n    bStack = bStack || [];\n    let length = aStack.length;\n    while (length--) {\n        // Linear search. Performance is inversely proportional to the number of\n        // unique nested structures.\n        if (aStack[length] === a)\n            return bStack[length] === b;\n    }\n    // Add the first object to the stack of traversed objects.\n    aStack.push(a);\n    bStack.push(b);\n    // Recursively compare objects and arrays.\n    if (areArrays) {\n        // Compare array lengths to determine if a deep comparison is necessary.\n        length = a.length;\n        if (length !== b.length)\n            return false;\n        // Deep compare the contents, ignoring non-numeric properties.\n        while (length--) {\n            if (!eq(a[length], b[length], depth - 1, aStack, bStack))\n                return false;\n        }\n    }\n    else {\n        // Deep compare objects.\n        const keys = Object.keys(a);\n        let key;\n        length = keys.length;\n        // Ensure that both objects contain the same number of properties before comparing deep equality.\n        if (Object.keys(b).length !== length)\n            return false;\n        while (length--) {\n            // Deep compare each member\n            key = keys[length];\n            if (!(has$1(b, key) && eq(a[key], b[key], depth - 1, aStack, bStack)))\n                return false;\n        }\n    }\n    // Remove the first object from the stack of traversed objects.\n    aStack.pop();\n    bStack.pop();\n    return true;\n}\nfunction unwrap(a) {\n    if (isObservableArray(a))\n        return a.slice();\n    if (isES6Map(a) || isObservableMap(a))\n        return Array.from(a.entries());\n    if (isES6Set(a) || isObservableSet(a))\n        return Array.from(a.entries());\n    return a;\n}\nfunction has$1(a, key) {\n    return Object.prototype.hasOwnProperty.call(a, key);\n}\n\nfunction makeIterable(iterator) {\n    iterator[Symbol.iterator] = getSelf;\n    return iterator;\n}\nfunction getSelf() {\n    return this;\n}\n\n/*\nThe only reason for this file to exist is pure horror:\nWithout it rollup can make the bundling fail at any point in time; when it rolls up the files in the wrong order\nit will cause undefined errors (for example because super classes or local variables not being hoisted).\nWith this file that will still happen,\nbut at least in this file we can magically reorder the imports with trial and error until the build succeeds again.\n*/\n\n/**\n * (c) Michel Weststrate 2015 - 2018\n * MIT Licensed\n *\n * Welcome to the mobx sources! To get an global overview of how MobX internally works,\n * this is a good place to start:\n * https://medium.com/@mweststrate/becoming-fully-reactive-an-in-depth-explanation-of-mobservable-55995262a254#.xvbh6qd74\n *\n * Source folders:\n * ===============\n *\n * - api/     Most of the public static methods exposed by the module can be found here.\n * - core/    Implementation of the MobX algorithm; atoms, derivations, reactions, dependency trees, optimizations. Cool stuff can be found here.\n * - types/   All the magic that is need to have observable objects, arrays and values is in this folder. Including the modifiers like `asFlat`.\n * - utils/   Utility stuff.\n *\n */\nif (typeof Proxy === \"undefined\" || typeof Symbol === \"undefined\") {\n    throw new Error(\"[mobx] MobX 5+ requires Proxy and Symbol objects. If your environment doesn't support Symbol or Proxy objects, please downgrade to MobX 4. For React Native Android, consider upgrading JSCore.\");\n}\ntry {\n    // define process.env if needed\n    // if this is not a production build in the first place\n    // (in which case the expression below would be substituted with 'production')\n    process.env.NODE_ENV;\n}\ncatch (e) {\n    const g = getGlobal();\n    if (typeof process === \"undefined\")\n        g.process = {};\n    g.process.env = {};\n}\n(() => {\n    function testCodeMinification() { }\n    if (testCodeMinification.name !== \"testCodeMinification\" &&\n        process.env.NODE_ENV !== \"production\" &&\n        process.env.IGNORE_MOBX_MINIFY_WARNING !== \"true\") {\n        // trick so it doesn't get replaced\n        const varName = [\"process\", \"env\", \"NODE_ENV\"].join(\".\");\n        console.warn(`[mobx] you are running a minified build, but '${varName}' was not set to 'production' in your bundler. This results in an unnecessarily large and slow bundle`);\n    }\n})();\nif (typeof __MOBX_DEVTOOLS_GLOBAL_HOOK__ === \"object\") {\n    // See: https://github.com/andykog/mobx-devtools/\n    __MOBX_DEVTOOLS_GLOBAL_HOOK__.injectMobx({\n        spy,\n        extras: {\n            getDebugName\n        },\n        $mobx\n    });\n}\n\nexport { $mobx, FlowCancellationError, IDerivationState, ObservableMap, ObservableSet, Reaction, allowStateChanges as _allowStateChanges, allowStateChangesInsideComputed as _allowStateChangesInsideComputed, allowStateReadsEnd as _allowStateReadsEnd, allowStateReadsStart as _allowStateReadsStart, _endAction, getAdministration as _getAdministration, getGlobalState as _getGlobalState, interceptReads as _interceptReads, isComputingDerivation as _isComputingDerivation, resetGlobalState as _resetGlobalState, _startAction, action, autorun, comparer, computed, configure, createAtom, decorate, entries, extendObservable, flow, get, getAtom, getDebugName, getDependencyTree, getObserverTree, has, intercept, isAction, isArrayLike, isObservableValue as isBoxedObservable, isComputed, isComputedProp, isFlowCancellationError, isObservable, isObservableArray, isObservableMap, isObservableObject, isObservableProp, isObservableSet, keys, observable, observe, onBecomeObserved, onBecomeUnobserved, onReactionError, reaction, remove, runInAction, set, spy, toJS, trace, transaction, untracked, values, when };\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n/**\n * @module shady-render\n */\n\nimport {isTemplatePartActive, Template, TemplatePart} from './template.js';\n\nconst walkerNodeFilter = 133 /* NodeFilter.SHOW_{ELEMENT|COMMENT|TEXT} */;\n\n/**\n * Removes the list of nodes from a Template safely. In addition to removing\n * nodes from the Template, the Template part indices are updated to match\n * the mutated Template DOM.\n *\n * As the template is walked the removal state is tracked and\n * part indices are adjusted as needed.\n *\n * div\n *   div#1 (remove) <-- start removing (removing node is div#1)\n *     div\n *       div#2 (remove)  <-- continue removing (removing node is still div#1)\n *         div\n * div <-- stop removing since previous sibling is the removing node (div#1,\n * removed 4 nodes)\n */\nexport function removeNodesFromTemplate(\n    template: Template, nodesToRemove: Set<Node>) {\n  const {element: {content}, parts} = template;\n  const walker =\n      document.createTreeWalker(content, walkerNodeFilter, null, false);\n  let partIndex = nextActiveIndexInTemplateParts(parts);\n  let part = parts[partIndex];\n  let nodeIndex = -1;\n  let removeCount = 0;\n  const nodesToRemoveInTemplate = [];\n  let currentRemovingNode: Node|null = null;\n  while (walker.nextNode()) {\n    nodeIndex++;\n    const node = walker.currentNode as Element;\n    // End removal if stepped past the removing node\n    if (node.previousSibling === currentRemovingNode) {\n      currentRemovingNode = null;\n    }\n    // A node to remove was found in the template\n    if (nodesToRemove.has(node)) {\n      nodesToRemoveInTemplate.push(node);\n      // Track node we're removing\n      if (currentRemovingNode === null) {\n        currentRemovingNode = node;\n      }\n    }\n    // When removing, increment count by which to adjust subsequent part indices\n    if (currentRemovingNode !== null) {\n      removeCount++;\n    }\n    while (part !== undefined && part.index === nodeIndex) {\n      // If part is in a removed node deactivate it by setting index to -1 or\n      // adjust the index as needed.\n      part.index = currentRemovingNode !== null ? -1 : part.index - removeCount;\n      // go to the next active part.\n      partIndex = nextActiveIndexInTemplateParts(parts, partIndex);\n      part = parts[partIndex];\n    }\n  }\n  nodesToRemoveInTemplate.forEach((n) => n.parentNode!.removeChild(n));\n}\n\nconst countNodes = (node: Node) => {\n  let count = (node.nodeType === 11 /* Node.DOCUMENT_FRAGMENT_NODE */) ? 0 : 1;\n  const walker = document.createTreeWalker(node, walkerNodeFilter, null, false);\n  while (walker.nextNode()) {\n    count++;\n  }\n  return count;\n};\n\nconst nextActiveIndexInTemplateParts =\n    (parts: TemplatePart[], startIndex: number = -1) => {\n      for (let i = startIndex + 1; i < parts.length; i++) {\n        const part = parts[i];\n        if (isTemplatePartActive(part)) {\n          return i;\n        }\n      }\n      return -1;\n    };\n\n/**\n * Inserts the given node into the Template, optionally before the given\n * refNode. In addition to inserting the node into the Template, the Template\n * part indices are updated to match the mutated Template DOM.\n */\nexport function insertNodeIntoTemplate(\n    template: Template, node: Node, refNode: Node|null = null) {\n  const {element: {content}, parts} = template;\n  // If there's no refNode, then put node at end of template.\n  // No part indices need to be shifted in this case.\n  if (refNode === null || refNode === undefined) {\n    content.appendChild(node);\n    return;\n  }\n  const walker =\n      document.createTreeWalker(content, walkerNodeFilter, null, false);\n  let partIndex = nextActiveIndexInTemplateParts(parts);\n  let insertCount = 0;\n  let walkerIndex = -1;\n  while (walker.nextNode()) {\n    walkerIndex++;\n    const walkerNode = walker.currentNode as Element;\n    if (walkerNode === refNode) {\n      insertCount = countNodes(node);\n      refNode.parentNode!.insertBefore(node, refNode);\n    }\n    while (partIndex !== -1 && parts[partIndex].index === walkerIndex) {\n      // If we've inserted the node, simply adjust all subsequent parts\n      if (insertCount > 0) {\n        while (partIndex !== -1) {\n          parts[partIndex].index += insertCount;\n          partIndex = nextActiveIndexInTemplateParts(parts, partIndex);\n        }\n        return;\n      }\n      partIndex = nextActiveIndexInTemplateParts(parts, partIndex);\n    }\n  }\n}\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n/**\n * Module to add shady DOM/shady CSS polyfill support to lit-html template\n * rendering. See the [[render]] method for details.\n *\n * @module shady-render\n * @preferred\n */\n\n/**\n * Do not remove this comment; it keeps typedoc from misplacing the module\n * docs.\n */\nimport {removeNodes} from './dom.js';\nimport {insertNodeIntoTemplate, removeNodesFromTemplate} from './modify-template.js';\nimport {RenderOptions} from './render-options.js';\nimport {parts, render as litRender} from './render.js';\nimport {templateCaches} from './template-factory.js';\nimport {TemplateInstance} from './template-instance.js';\nimport {TemplateResult} from './template-result.js';\nimport {marker, Template} from './template.js';\n\nexport {html, svg, TemplateResult} from '../lit-html.js';\n\n// Get a key to lookup in `templateCaches`.\nconst getTemplateCacheKey = (type: string, scopeName: string) =>\n    `${type}--${scopeName}`;\n\nlet compatibleShadyCSSVersion = true;\n\nif (typeof window.ShadyCSS === 'undefined') {\n  compatibleShadyCSSVersion = false;\n} else if (typeof window.ShadyCSS.prepareTemplateDom === 'undefined') {\n  console.warn(\n      `Incompatible ShadyCSS version detected. ` +\n      `Please update to at least @webcomponents/webcomponentsjs@2.0.2 and ` +\n      `@webcomponents/shadycss@1.3.1.`);\n  compatibleShadyCSSVersion = false;\n}\n\n/**\n * Template factory which scopes template DOM using ShadyCSS.\n * @param scopeName {string}\n */\nconst shadyTemplateFactory = (scopeName: string) =>\n    (result: TemplateResult) => {\n      const cacheKey = getTemplateCacheKey(result.type, scopeName);\n      let templateCache = templateCaches.get(cacheKey);\n      if (templateCache === undefined) {\n        templateCache = {\n          stringsArray: new WeakMap<TemplateStringsArray, Template>(),\n          keyString: new Map<string, Template>()\n        };\n        templateCaches.set(cacheKey, templateCache);\n      }\n\n      let template = templateCache.stringsArray.get(result.strings);\n      if (template !== undefined) {\n        return template;\n      }\n\n      const key = result.strings.join(marker);\n      template = templateCache.keyString.get(key);\n      if (template === undefined) {\n        const element = result.getTemplateElement();\n        if (compatibleShadyCSSVersion) {\n          window.ShadyCSS!.prepareTemplateDom(element, scopeName);\n        }\n        template = new Template(result, element);\n        templateCache.keyString.set(key, template);\n      }\n      templateCache.stringsArray.set(result.strings, template);\n      return template;\n    };\n\nconst TEMPLATE_TYPES = ['html', 'svg'];\n\n/**\n * Removes all style elements from Templates for the given scopeName.\n */\nconst removeStylesFromLitTemplates = (scopeName: string) => {\n  TEMPLATE_TYPES.forEach((type) => {\n    const templates = templateCaches.get(getTemplateCacheKey(type, scopeName));\n    if (templates !== undefined) {\n      templates.keyString.forEach((template) => {\n        const {element: {content}} = template;\n        // IE 11 doesn't support the iterable param Set constructor\n        const styles = new Set<Element>();\n        Array.from(content.querySelectorAll('style')).forEach((s: Element) => {\n          styles.add(s);\n        });\n        removeNodesFromTemplate(template, styles);\n      });\n    }\n  });\n};\n\nconst shadyRenderSet = new Set<string>();\n\n/**\n * For the given scope name, ensures that ShadyCSS style scoping is performed.\n * This is done just once per scope name so the fragment and template cannot\n * be modified.\n * (1) extracts styles from the rendered fragment and hands them to ShadyCSS\n * to be scoped and appended to the document\n * (2) removes style elements from all lit-html Templates for this scope name.\n *\n * Note, <style> elements can only be placed into templates for the\n * initial rendering of the scope. If <style> elements are included in templates\n * dynamically rendered to the scope (after the first scope render), they will\n * not be scoped and the <style> will be left in the template and rendered\n * output.\n */\nconst prepareTemplateStyles =\n    (scopeName: string, renderedDOM: DocumentFragment, template?: Template) => {\n      shadyRenderSet.add(scopeName);\n      // If `renderedDOM` is stamped from a Template, then we need to edit that\n      // Template's underlying template element. Otherwise, we create one here\n      // to give to ShadyCSS, which still requires one while scoping.\n      const templateElement =\n          !!template ? template.element : document.createElement('template');\n      // Move styles out of rendered DOM and store.\n      const styles = renderedDOM.querySelectorAll('style');\n      const {length} = styles;\n      // If there are no styles, skip unnecessary work\n      if (length === 0) {\n        // Ensure prepareTemplateStyles is called to support adding\n        // styles via `prepareAdoptedCssText` since that requires that\n        // `prepareTemplateStyles` is called.\n        //\n        // ShadyCSS will only update styles containing @apply in the template\n        // given to `prepareTemplateStyles`. If no lit Template was given,\n        // ShadyCSS will not be able to update uses of @apply in any relevant\n        // template. However, this is not a problem because we only create the\n        // template for the purpose of supporting `prepareAdoptedCssText`,\n        // which doesn't support @apply at all.\n        window.ShadyCSS!.prepareTemplateStyles(templateElement, scopeName);\n        return;\n      }\n      const condensedStyle = document.createElement('style');\n      // Collect styles into a single style. This helps us make sure ShadyCSS\n      // manipulations will not prevent us from being able to fix up template\n      // part indices.\n      // NOTE: collecting styles is inefficient for browsers but ShadyCSS\n      // currently does this anyway. When it does not, this should be changed.\n      for (let i = 0; i < length; i++) {\n        const style = styles[i];\n        style.parentNode!.removeChild(style);\n        condensedStyle.textContent! += style.textContent;\n      }\n      // Remove styles from nested templates in this scope.\n      removeStylesFromLitTemplates(scopeName);\n      // And then put the condensed style into the \"root\" template passed in as\n      // `template`.\n      const content = templateElement.content;\n      if (!!template) {\n        insertNodeIntoTemplate(template, condensedStyle, content.firstChild);\n      } else {\n        content.insertBefore(condensedStyle, content.firstChild);\n      }\n      // Note, it's important that ShadyCSS gets the template that `lit-html`\n      // will actually render so that it can update the style inside when\n      // needed (e.g. @apply native Shadow DOM case).\n      window.ShadyCSS!.prepareTemplateStyles(templateElement, scopeName);\n      const style = content.querySelector('style');\n      if (window.ShadyCSS!.nativeShadow && style !== null) {\n        // When in native Shadow DOM, ensure the style created by ShadyCSS is\n        // included in initially rendered output (`renderedDOM`).\n        renderedDOM.insertBefore(style.cloneNode(true), renderedDOM.firstChild);\n      } else if (!!template) {\n        // When no style is left in the template, parts will be broken as a\n        // result. To fix this, we put back the style node ShadyCSS removed\n        // and then tell lit to remove that node from the template.\n        // There can be no style in the template in 2 cases (1) when Shady DOM\n        // is in use, ShadyCSS removes all styles, (2) when native Shadow DOM\n        // is in use ShadyCSS removes the style if it contains no content.\n        // NOTE, ShadyCSS creates its own style so we can safely add/remove\n        // `condensedStyle` here.\n        content.insertBefore(condensedStyle, content.firstChild);\n        const removes = new Set<Node>();\n        removes.add(condensedStyle);\n        removeNodesFromTemplate(template, removes);\n      }\n    };\n\nexport interface ShadyRenderOptions extends Partial<RenderOptions> {\n  scopeName: string;\n}\n\n/**\n * Extension to the standard `render` method which supports rendering\n * to ShadowRoots when the ShadyDOM (https://github.com/webcomponents/shadydom)\n * and ShadyCSS (https://github.com/webcomponents/shadycss) polyfills are used\n * or when the webcomponentsjs\n * (https://github.com/webcomponents/webcomponentsjs) polyfill is used.\n *\n * Adds a `scopeName` option which is used to scope element DOM and stylesheets\n * when native ShadowDOM is unavailable. The `scopeName` will be added to\n * the class attribute of all rendered DOM. In addition, any style elements will\n * be automatically re-written with this `scopeName` selector and moved out\n * of the rendered DOM and into the document `<head>`.\n *\n * It is common to use this render method in conjunction with a custom element\n * which renders a shadowRoot. When this is done, typically the element's\n * `localName` should be used as the `scopeName`.\n *\n * In addition to DOM scoping, ShadyCSS also supports a basic shim for css\n * custom properties (needed only on older browsers like IE11) and a shim for\n * a deprecated feature called `@apply` that supports applying a set of css\n * custom properties to a given location.\n *\n * Usage considerations:\n *\n * * Part values in `<style>` elements are only applied the first time a given\n * `scopeName` renders. Subsequent changes to parts in style elements will have\n * no effect. Because of this, parts in style elements should only be used for\n * values that will never change, for example parts that set scope-wide theme\n * values or parts which render shared style elements.\n *\n * * Note, due to a limitation of the ShadyDOM polyfill, rendering in a\n * custom element's `constructor` is not supported. Instead rendering should\n * either done asynchronously, for example at microtask timing (for example\n * `Promise.resolve()`), or be deferred until the first time the element's\n * `connectedCallback` runs.\n *\n * Usage considerations when using shimmed custom properties or `@apply`:\n *\n * * Whenever any dynamic changes are made which affect\n * css custom properties, `ShadyCSS.styleElement(element)` must be called\n * to update the element. There are two cases when this is needed:\n * (1) the element is connected to a new parent, (2) a class is added to the\n * element that causes it to match different custom properties.\n * To address the first case when rendering a custom element, `styleElement`\n * should be called in the element's `connectedCallback`.\n *\n * * Shimmed custom properties may only be defined either for an entire\n * shadowRoot (for example, in a `:host` rule) or via a rule that directly\n * matches an element with a shadowRoot. In other words, instead of flowing from\n * parent to child as do native css custom properties, shimmed custom properties\n * flow only from shadowRoots to nested shadowRoots.\n *\n * * When using `@apply` mixing css shorthand property names with\n * non-shorthand names (for example `border` and `border-width`) is not\n * supported.\n */\nexport const render =\n    (result: unknown,\n     container: Element|DocumentFragment|ShadowRoot,\n     options: ShadyRenderOptions) => {\n      if (!options || typeof options !== 'object' || !options.scopeName) {\n        throw new Error('The `scopeName` option is required.');\n      }\n      const scopeName = options.scopeName;\n      const hasRendered = parts.has(container);\n      const needsScoping = compatibleShadyCSSVersion &&\n          container.nodeType === 11 /* Node.DOCUMENT_FRAGMENT_NODE */ &&\n          !!(container as ShadowRoot).host;\n      // Handle first render to a scope specially...\n      const firstScopeRender = needsScoping && !shadyRenderSet.has(scopeName);\n      // On first scope render, render into a fragment; this cannot be a single\n      // fragment that is reused since nested renders can occur synchronously.\n      const renderContainer =\n          firstScopeRender ? document.createDocumentFragment() : container;\n      litRender(\n          result,\n          renderContainer,\n          {templateFactory: shadyTemplateFactory(scopeName), ...options} as\n              RenderOptions);\n      // When performing first scope render,\n      // (1) We've rendered into a fragment so that there's a chance to\n      // `prepareTemplateStyles` before sub-elements hit the DOM\n      // (which might cause them to render based on a common pattern of\n      // rendering in a custom element's `connectedCallback`);\n      // (2) Scope the template with ShadyCSS one time only for this scope.\n      // (3) Render the fragment into the container and make sure the\n      // container knows its `part` is the one we just rendered. This ensures\n      // DOM will be re-used on subsequent renders.\n      if (firstScopeRender) {\n        const part = parts.get(renderContainer)!;\n        parts.delete(renderContainer);\n        // ShadyCSS might have style sheets (e.g. from `prepareAdoptedCssText`)\n        // that should apply to `renderContainer` even if the rendered value is\n        // not a TemplateInstance. However, it will only insert scoped styles\n        // into the document if `prepareTemplateStyles` has already been called\n        // for the given scope name.\n        const template = part.value instanceof TemplateInstance ?\n            part.value.template :\n            undefined;\n        prepareTemplateStyles(\n            scopeName, renderContainer as DocumentFragment, template);\n        removeNodes(container, container.firstChild);\n        container.appendChild(renderContainer);\n        parts.set(container, part);\n      }\n      // After elements have hit the DOM, update styling if this is the\n      // initial render to this container.\n      // This is needed whenever dynamic changes are made so it would be\n      // safest to do every render; however, this would regress performance\n      // so we leave it up to the user to call `ShadyCSS.styleElement`\n      // for dynamic changes.\n      if (!hasRendered && needsScoping) {\n        window.ShadyCSS!.styleElement((container as ShadowRoot).host);\n      }\n    };\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n/**\n * When using Closure Compiler, JSCompiler_renameProperty(property, object) is\n * replaced at compile time by the munged name for object[property]. We cannot\n * alias this function, so we have to use a small shim that has the same\n * behavior when not compiling.\n */\nwindow.JSCompiler_renameProperty =\n    <P extends PropertyKey>(prop: P, _obj: unknown): P => prop;\n\ndeclare global {\n  var JSCompiler_renameProperty: <P extends PropertyKey>(\n      prop: P, _obj: unknown) => P;\n\n  interface Window {\n    JSCompiler_renameProperty: typeof JSCompiler_renameProperty;\n  }\n}\n\n/**\n * Converts property values to and from attribute values.\n */\nexport interface ComplexAttributeConverter<Type = unknown, TypeHint = unknown> {\n  /**\n   * Function called to convert an attribute value to a property\n   * value.\n   */\n  fromAttribute?(value: string|null, type?: TypeHint): Type;\n\n  /**\n   * Function called to convert a property value to an attribute\n   * value.\n   *\n   * It returns unknown instead of string, to be compatible with\n   * https://github.com/WICG/trusted-types (and similar efforts).\n   */\n  toAttribute?(value: Type, type?: TypeHint): unknown;\n}\n\ntype AttributeConverter<Type = unknown, TypeHint = unknown> =\n    ComplexAttributeConverter<Type>|((value: string, type?: TypeHint) => Type);\n\n/**\n * Defines options for a property accessor.\n */\nexport interface PropertyDeclaration<Type = unknown, TypeHint = unknown> {\n  /**\n   * Indicates how and whether the property becomes an observed attribute.\n   * If the value is `false`, the property is not added to `observedAttributes`.\n   * If true or absent, the lowercased property name is observed (e.g. `fooBar`\n   * becomes `foobar`). If a string, the string value is observed (e.g\n   * `attribute: 'foo-bar'`).\n   */\n  readonly attribute?: boolean|string;\n\n  /**\n   * Indicates the type of the property. This is used only as a hint for the\n   * `converter` to determine how to convert the attribute\n   * to/from a property.\n   */\n  readonly type?: TypeHint;\n\n  /**\n   * Indicates how to convert the attribute to/from a property. If this value\n   * is a function, it is used to convert the attribute value a the property\n   * value. If it's an object, it can have keys for `fromAttribute` and\n   * `toAttribute`. If no `toAttribute` function is provided and\n   * `reflect` is set to `true`, the property value is set directly to the\n   * attribute. A default `converter` is used if none is provided; it supports\n   * `Boolean`, `String`, `Number`, `Object`, and `Array`. Note,\n   * when a property changes and the converter is used to update the attribute,\n   * the property is never updated again as a result of the attribute changing,\n   * and vice versa.\n   */\n  readonly converter?: AttributeConverter<Type, TypeHint>;\n\n  /**\n   * Indicates if the property should reflect to an attribute.\n   * If `true`, when the property is set, the attribute is set using the\n   * attribute name determined according to the rules for the `attribute`\n   * property option and the value of the property converted using the rules\n   * from the `converter` property option.\n   */\n  readonly reflect?: boolean;\n\n  /**\n   * A function that indicates if a property should be considered changed when\n   * it is set. The function should take the `newValue` and `oldValue` and\n   * return `true` if an update should be requested.\n   */\n  hasChanged?(value: Type, oldValue: Type): boolean;\n\n  /**\n   * Indicates whether an accessor will be created for this property. By\n   * default, an accessor will be generated for this property that requests an\n   * update when set. If this flag is `true`, no accessor will be created, and\n   * it will be the user's responsibility to call\n   * `this.requestUpdate(propertyName, oldValue)` to request an update when\n   * the property changes.\n   */\n  readonly noAccessor?: boolean;\n}\n\n/**\n * Map of properties to PropertyDeclaration options. For each property an\n * accessor is made, and the property is processed according to the\n * PropertyDeclaration options.\n */\nexport interface PropertyDeclarations {\n  readonly [key: string]: PropertyDeclaration;\n}\n\ntype PropertyDeclarationMap = Map<PropertyKey, PropertyDeclaration>;\n\ntype AttributeMap = Map<string, PropertyKey>;\n\nexport type PropertyValues = Map<PropertyKey, unknown>;\n\nexport const defaultConverter: ComplexAttributeConverter = {\n\n  toAttribute(value: unknown, type?: unknown): unknown {\n    switch (type) {\n      case Boolean:\n        return value ? '' : null;\n      case Object:\n      case Array:\n        // if the value is `null` or `undefined` pass this through\n        // to allow removing/no change behavior.\n        return value == null ? value : JSON.stringify(value);\n    }\n    return value;\n  },\n\n  fromAttribute(value: string|null, type?: unknown) {\n    switch (type) {\n      case Boolean:\n        return value !== null;\n      case Number:\n        return value === null ? null : Number(value);\n      case Object:\n      case Array:\n        return JSON.parse(value!);\n    }\n    return value;\n  }\n\n};\n\nexport interface HasChanged {\n  (value: unknown, old: unknown): boolean;\n}\n\n/**\n * Change function that returns true if `value` is different from `oldValue`.\n * This method is used as the default for a property's `hasChanged` function.\n */\nexport const notEqual: HasChanged = (value: unknown, old: unknown): boolean => {\n  // This ensures (old==NaN, value==NaN) always returns false\n  return old !== value && (old === old || value === value);\n};\n\nconst defaultPropertyDeclaration: PropertyDeclaration = {\n  attribute: true,\n  type: String,\n  converter: defaultConverter,\n  reflect: false,\n  hasChanged: notEqual\n};\n\nconst microtaskPromise = Promise.resolve(true);\n\nconst STATE_HAS_UPDATED = 1;\nconst STATE_UPDATE_REQUESTED = 1 << 2;\nconst STATE_IS_REFLECTING_TO_ATTRIBUTE = 1 << 3;\nconst STATE_IS_REFLECTING_TO_PROPERTY = 1 << 4;\nconst STATE_HAS_CONNECTED = 1 << 5;\ntype UpdateState = typeof STATE_HAS_UPDATED|typeof STATE_UPDATE_REQUESTED|\n    typeof STATE_IS_REFLECTING_TO_ATTRIBUTE|\n    typeof STATE_IS_REFLECTING_TO_PROPERTY|typeof STATE_HAS_CONNECTED;\n\n/**\n * The Closure JS Compiler doesn't currently have good support for static\n * property semantics where \"this\" is dynamic (e.g.\n * https://github.com/google/closure-compiler/issues/3177 and others) so we use\n * this hack to bypass any rewriting by the compiler.\n */\nconst finalized = 'finalized';\n\n/**\n * Base element class which manages element properties and attributes. When\n * properties change, the `update` method is asynchronously called. This method\n * should be supplied by subclassers to render updates as desired.\n */\nexport abstract class UpdatingElement extends HTMLElement {\n  /*\n   * Due to closure compiler ES6 compilation bugs, @nocollapse is required on\n   * all static methods and properties with initializers.  Reference:\n   * - https://github.com/google/closure-compiler/issues/1776\n   */\n\n  /**\n   * Maps attribute names to properties; for example `foobar` attribute to\n   * `fooBar` property. Created lazily on user subclasses when finalizing the\n   * class.\n   */\n  private static _attributeToPropertyMap: AttributeMap;\n\n  /**\n   * Marks class as having finished creating properties.\n   */\n  protected static[finalized] = true;\n\n  /**\n   * Memoized list of all class properties, including any superclass properties.\n   * Created lazily on user subclasses when finalizing the class.\n   */\n  private static _classProperties?: PropertyDeclarationMap;\n\n  /**\n   * User-supplied object that maps property names to `PropertyDeclaration`\n   * objects containing options for configuring the property.\n   */\n  static properties: PropertyDeclarations;\n\n  /**\n   * Returns a list of attributes corresponding to the registered properties.\n   * @nocollapse\n   */\n  static get observedAttributes() {\n    // note: piggy backing on this to ensure we're finalized.\n    this.finalize();\n    const attributes: string[] = [];\n    // Use forEach so this works even if for/of loops are compiled to for loops\n    // expecting arrays\n    this._classProperties!.forEach((v, p) => {\n      const attr = this._attributeNameForProperty(p, v);\n      if (attr !== undefined) {\n        this._attributeToPropertyMap.set(attr, p);\n        attributes.push(attr);\n      }\n    });\n    return attributes;\n  }\n\n  /**\n   * Ensures the private `_classProperties` property metadata is created.\n   * In addition to `finalize` this is also called in `createProperty` to\n   * ensure the `@property` decorator can add property metadata.\n   */\n  /** @nocollapse */\n  private static _ensureClassProperties() {\n    // ensure private storage for property declarations.\n    if (!this.hasOwnProperty(\n            JSCompiler_renameProperty('_classProperties', this))) {\n      this._classProperties = new Map();\n      // NOTE: Workaround IE11 not supporting Map constructor argument.\n      const superProperties: PropertyDeclarationMap =\n          Object.getPrototypeOf(this)._classProperties;\n      if (superProperties !== undefined) {\n        superProperties.forEach(\n            (v: PropertyDeclaration, k: PropertyKey) =>\n                this._classProperties!.set(k, v));\n      }\n    }\n  }\n\n  /**\n   * Creates a property accessor on the element prototype if one does not exist.\n   * The property setter calls the property's `hasChanged` property option\n   * or uses a strict identity check to determine whether or not to request\n   * an update.\n   * @nocollapse\n   */\n  static createProperty(\n      name: PropertyKey,\n      options: PropertyDeclaration = defaultPropertyDeclaration) {\n    // Note, since this can be called by the `@property` decorator which\n    // is called before `finalize`, we ensure storage exists for property\n    // metadata.\n    this._ensureClassProperties();\n    this._classProperties!.set(name, options);\n    // Do not generate an accessor if the prototype already has one, since\n    // it would be lost otherwise and that would never be the user's intention;\n    // Instead, we expect users to call `requestUpdate` themselves from\n    // user-defined accessors. Note that if the super has an accessor we will\n    // still overwrite it\n    if (options.noAccessor || this.prototype.hasOwnProperty(name)) {\n      return;\n    }\n    const key = typeof name === 'symbol' ? Symbol() : `__${name}`;\n    Object.defineProperty(this.prototype, name, {\n      // tslint:disable-next-line:no-any no symbol in index\n      get(): any {\n        return (this as {[key: string]: unknown})[key as string];\n      },\n      set(this: UpdatingElement, value: unknown) {\n        const oldValue =\n            (this as {} as {[key: string]: unknown})[name as string];\n        (this as {} as {[key: string]: unknown})[key as string] = value;\n        (this as unknown as UpdatingElement)._requestUpdate(name, oldValue);\n      },\n      configurable: true,\n      enumerable: true\n    });\n  }\n\n  /**\n   * Creates property accessors for registered properties and ensures\n   * any superclasses are also finalized.\n   * @nocollapse\n   */\n  protected static finalize() {\n    // finalize any superclasses\n    const superCtor = Object.getPrototypeOf(this);\n    if (!superCtor.hasOwnProperty(finalized)) {\n      superCtor.finalize();\n    }\n    this[finalized] = true;\n    this._ensureClassProperties();\n    // initialize Map populated in observedAttributes\n    this._attributeToPropertyMap = new Map();\n    // make any properties\n    // Note, only process \"own\" properties since this element will inherit\n    // any properties defined on the superClass, and finalization ensures\n    // the entire prototype chain is finalized.\n    if (this.hasOwnProperty(JSCompiler_renameProperty('properties', this))) {\n      const props = this.properties;\n      // support symbols in properties (IE11 does not support this)\n      const propKeys = [\n        ...Object.getOwnPropertyNames(props),\n        ...(typeof Object.getOwnPropertySymbols === 'function') ?\n            Object.getOwnPropertySymbols(props) :\n            []\n      ];\n      // This for/of is ok because propKeys is an array\n      for (const p of propKeys) {\n        // note, use of `any` is due to TypeSript lack of support for symbol in\n        // index types\n        // tslint:disable-next-line:no-any no symbol in index\n        this.createProperty(p, (props as any)[p]);\n      }\n    }\n  }\n\n  /**\n   * Returns the property name for the given attribute `name`.\n   * @nocollapse\n   */\n  private static _attributeNameForProperty(\n      name: PropertyKey, options: PropertyDeclaration) {\n    const attribute = options.attribute;\n    return attribute === false ?\n        undefined :\n        (typeof attribute === 'string' ?\n             attribute :\n             (typeof name === 'string' ? name.toLowerCase() : undefined));\n  }\n\n  /**\n   * Returns true if a property should request an update.\n   * Called when a property value is set and uses the `hasChanged`\n   * option for the property if present or a strict identity check.\n   * @nocollapse\n   */\n  private static _valueHasChanged(\n      value: unknown, old: unknown, hasChanged: HasChanged = notEqual) {\n    return hasChanged(value, old);\n  }\n\n  /**\n   * Returns the property value for the given attribute value.\n   * Called via the `attributeChangedCallback` and uses the property's\n   * `converter` or `converter.fromAttribute` property option.\n   * @nocollapse\n   */\n  private static _propertyValueFromAttribute(\n      value: string|null, options: PropertyDeclaration) {\n    const type = options.type;\n    const converter = options.converter || defaultConverter;\n    const fromAttribute =\n        (typeof converter === 'function' ? converter : converter.fromAttribute);\n    return fromAttribute ? fromAttribute(value, type) : value;\n  }\n\n  /**\n   * Returns the attribute value for the given property value. If this\n   * returns undefined, the property will *not* be reflected to an attribute.\n   * If this returns null, the attribute will be removed, otherwise the\n   * attribute will be set to the value.\n   * This uses the property's `reflect` and `type.toAttribute` property options.\n   * @nocollapse\n   */\n  private static _propertyValueToAttribute(\n      value: unknown, options: PropertyDeclaration) {\n    if (options.reflect === undefined) {\n      return;\n    }\n    const type = options.type;\n    const converter = options.converter;\n    const toAttribute =\n        converter && (converter as ComplexAttributeConverter).toAttribute ||\n        defaultConverter.toAttribute;\n    return toAttribute!(value, type);\n  }\n\n  private _updateState: UpdateState = 0;\n  private _instanceProperties: PropertyValues|undefined = undefined;\n  private _updatePromise: Promise<unknown> = microtaskPromise;\n  private _hasConnectedResolver: (() => void)|undefined = undefined;\n\n  /**\n   * Map with keys for any properties that have changed since the last\n   * update cycle with previous values.\n   */\n  private _changedProperties: PropertyValues = new Map();\n\n  /**\n   * Map with keys of properties that should be reflected when updated.\n   */\n  private _reflectingProperties: Map<PropertyKey, PropertyDeclaration>|\n      undefined = undefined;\n\n  constructor() {\n    super();\n    this.initialize();\n  }\n\n  /**\n   * Performs element initialization. By default captures any pre-set values for\n   * registered properties.\n   */\n  protected initialize() {\n    this._saveInstanceProperties();\n    // ensures first update will be caught by an early access of\n    // `updateComplete`\n    this._requestUpdate();\n  }\n\n  /**\n   * Fixes any properties set on the instance before upgrade time.\n   * Otherwise these would shadow the accessor and break these properties.\n   * The properties are stored in a Map which is played back after the\n   * constructor runs. Note, on very old versions of Safari (<=9) or Chrome\n   * (<=41), properties created for native platform properties like (`id` or\n   * `name`) may not have default values set in the element constructor. On\n   * these browsers native properties appear on instances and therefore their\n   * default value will overwrite any element default (e.g. if the element sets\n   * this.id = 'id' in the constructor, the 'id' will become '' since this is\n   * the native platform default).\n   */\n  private _saveInstanceProperties() {\n    // Use forEach so this works even if for/of loops are compiled to for loops\n    // expecting arrays\n    (this.constructor as typeof UpdatingElement)\n        ._classProperties!.forEach((_v, p) => {\n          if (this.hasOwnProperty(p)) {\n            const value = this[p as keyof this];\n            delete this[p as keyof this];\n            if (!this._instanceProperties) {\n              this._instanceProperties = new Map();\n            }\n            this._instanceProperties.set(p, value);\n          }\n        });\n  }\n\n  /**\n   * Applies previously saved instance properties.\n   */\n  private _applyInstanceProperties() {\n    // Use forEach so this works even if for/of loops are compiled to for loops\n    // expecting arrays\n    // tslint:disable-next-line:no-any\n    this._instanceProperties!.forEach((v, p) => (this as any)[p] = v);\n    this._instanceProperties = undefined;\n  }\n\n  connectedCallback() {\n    this._updateState = this._updateState | STATE_HAS_CONNECTED;\n    // Ensure first connection completes an update. Updates cannot complete\n    // before connection and if one is pending connection the\n    // `_hasConnectionResolver` will exist. If so, resolve it to complete the\n    // update, otherwise requestUpdate.\n    if (this._hasConnectedResolver) {\n      this._hasConnectedResolver();\n      this._hasConnectedResolver = undefined;\n    }\n  }\n\n  /**\n   * Allows for `super.disconnectedCallback()` in extensions while\n   * reserving the possibility of making non-breaking feature additions\n   * when disconnecting at some point in the future.\n   */\n  disconnectedCallback() {\n  }\n\n  /**\n   * Synchronizes property values when attributes change.\n   */\n  attributeChangedCallback(name: string, old: string|null, value: string|null) {\n    if (old !== value) {\n      this._attributeToProperty(name, value);\n    }\n  }\n\n  private _propertyToAttribute(\n      name: PropertyKey, value: unknown,\n      options: PropertyDeclaration = defaultPropertyDeclaration) {\n    const ctor = (this.constructor as typeof UpdatingElement);\n    const attr = ctor._attributeNameForProperty(name, options);\n    if (attr !== undefined) {\n      const attrValue = ctor._propertyValueToAttribute(value, options);\n      // an undefined value does not change the attribute.\n      if (attrValue === undefined) {\n        return;\n      }\n      // Track if the property is being reflected to avoid\n      // setting the property again via `attributeChangedCallback`. Note:\n      // 1. this takes advantage of the fact that the callback is synchronous.\n      // 2. will behave incorrectly if multiple attributes are in the reaction\n      // stack at time of calling. However, since we process attributes\n      // in `update` this should not be possible (or an extreme corner case\n      // that we'd like to discover).\n      // mark state reflecting\n      this._updateState = this._updateState | STATE_IS_REFLECTING_TO_ATTRIBUTE;\n      if (attrValue == null) {\n        this.removeAttribute(attr);\n      } else {\n        this.setAttribute(attr, attrValue as string);\n      }\n      // mark state not reflecting\n      this._updateState = this._updateState & ~STATE_IS_REFLECTING_TO_ATTRIBUTE;\n    }\n  }\n\n  private _attributeToProperty(name: string, value: string|null) {\n    // Use tracking info to avoid deserializing attribute value if it was\n    // just set from a property setter.\n    if (this._updateState & STATE_IS_REFLECTING_TO_ATTRIBUTE) {\n      return;\n    }\n    const ctor = (this.constructor as typeof UpdatingElement);\n    const propName = ctor._attributeToPropertyMap.get(name);\n    if (propName !== undefined) {\n      const options =\n          ctor._classProperties!.get(propName) || defaultPropertyDeclaration;\n      // mark state reflecting\n      this._updateState = this._updateState | STATE_IS_REFLECTING_TO_PROPERTY;\n      this[propName as keyof this] =\n          // tslint:disable-next-line:no-any\n          ctor._propertyValueFromAttribute(value, options) as any;\n      // mark state not reflecting\n      this._updateState = this._updateState & ~STATE_IS_REFLECTING_TO_PROPERTY;\n    }\n  }\n\n  /**\n   * This private version of `requestUpdate` does not access or return the\n   * `updateComplete` promise. This promise can be overridden and is therefore\n   * not free to access.\n   */\n  private _requestUpdate(name?: PropertyKey, oldValue?: unknown) {\n    let shouldRequestUpdate = true;\n    // If we have a property key, perform property update steps.\n    if (name !== undefined) {\n      const ctor = this.constructor as typeof UpdatingElement;\n      const options =\n          ctor._classProperties!.get(name) || defaultPropertyDeclaration;\n      if (ctor._valueHasChanged(\n              this[name as keyof this], oldValue, options.hasChanged)) {\n        if (!this._changedProperties.has(name)) {\n          this._changedProperties.set(name, oldValue);\n        }\n        // Add to reflecting properties set.\n        // Note, it's important that every change has a chance to add the\n        // property to `_reflectingProperties`. This ensures setting\n        // attribute + property reflects correctly.\n        if (options.reflect === true &&\n            !(this._updateState & STATE_IS_REFLECTING_TO_PROPERTY)) {\n          if (this._reflectingProperties === undefined) {\n            this._reflectingProperties = new Map();\n          }\n          this._reflectingProperties.set(name, options);\n        }\n      } else {\n        // Abort the request if the property should not be considered changed.\n        shouldRequestUpdate = false;\n      }\n    }\n    if (!this._hasRequestedUpdate && shouldRequestUpdate) {\n      this._enqueueUpdate();\n    }\n  }\n\n  /**\n   * Requests an update which is processed asynchronously. This should\n   * be called when an element should update based on some state not triggered\n   * by setting a property. In this case, pass no arguments. It should also be\n   * called when manually implementing a property setter. In this case, pass the\n   * property `name` and `oldValue` to ensure that any configured property\n   * options are honored. Returns the `updateComplete` Promise which is resolved\n   * when the update completes.\n   *\n   * @param name {PropertyKey} (optional) name of requesting property\n   * @param oldValue {any} (optional) old value of requesting property\n   * @returns {Promise} A Promise that is resolved when the update completes.\n   */\n  requestUpdate(name?: PropertyKey, oldValue?: unknown) {\n    this._requestUpdate(name, oldValue);\n    return this.updateComplete;\n  }\n\n  /**\n   * Sets up the element to asynchronously update.\n   */\n  private async _enqueueUpdate() {\n    // Mark state updating...\n    this._updateState = this._updateState | STATE_UPDATE_REQUESTED;\n    let resolve!: (r: boolean) => void;\n    let reject!: (e: Error) => void;\n    const previousUpdatePromise = this._updatePromise;\n    this._updatePromise = new Promise((res, rej) => {\n      resolve = res;\n      reject = rej;\n    });\n    try {\n      // Ensure any previous update has resolved before updating.\n      // This `await` also ensures that property changes are batched.\n      await previousUpdatePromise;\n    } catch (e) {\n      // Ignore any previous errors. We only care that the previous cycle is\n      // done. Any error should have been handled in the previous update.\n    }\n    // Make sure the element has connected before updating.\n    if (!this._hasConnected) {\n      await new Promise((res) => this._hasConnectedResolver = res);\n    }\n    try {\n      const result = this.performUpdate();\n      // If `performUpdate` returns a Promise, we await it. This is done to\n      // enable coordinating updates with a scheduler. Note, the result is\n      // checked to avoid delaying an additional microtask unless we need to.\n      if (result != null) {\n        await result;\n      }\n    } catch (e) {\n      reject(e);\n    }\n    resolve(!this._hasRequestedUpdate);\n  }\n\n  private get _hasConnected() {\n    return (this._updateState & STATE_HAS_CONNECTED);\n  }\n\n  private get _hasRequestedUpdate() {\n    return (this._updateState & STATE_UPDATE_REQUESTED);\n  }\n\n  protected get hasUpdated() {\n    return (this._updateState & STATE_HAS_UPDATED);\n  }\n\n  /**\n   * Performs an element update. Note, if an exception is thrown during the\n   * update, `firstUpdated` and `updated` will not be called.\n   *\n   * You can override this method to change the timing of updates. If this\n   * method is overridden, `super.performUpdate()` must be called.\n   *\n   * For instance, to schedule updates to occur just before the next frame:\n   *\n   * ```\n   * protected async performUpdate(): Promise<unknown> {\n   *   await new Promise((resolve) => requestAnimationFrame(() => resolve()));\n   *   super.performUpdate();\n   * }\n   * ```\n   */\n  protected performUpdate(): void|Promise<unknown> {\n    // Mixin instance properties once, if they exist.\n    if (this._instanceProperties) {\n      this._applyInstanceProperties();\n    }\n    let shouldUpdate = false;\n    const changedProperties = this._changedProperties;\n    try {\n      shouldUpdate = this.shouldUpdate(changedProperties);\n      if (shouldUpdate) {\n        this.update(changedProperties);\n      }\n    } catch (e) {\n      // Prevent `firstUpdated` and `updated` from running when there's an\n      // update exception.\n      shouldUpdate = false;\n      throw e;\n    } finally {\n      // Ensure element can accept additional updates after an exception.\n      this._markUpdated();\n    }\n    if (shouldUpdate) {\n      if (!(this._updateState & STATE_HAS_UPDATED)) {\n        this._updateState = this._updateState | STATE_HAS_UPDATED;\n        this.firstUpdated(changedProperties);\n      }\n      this.updated(changedProperties);\n    }\n  }\n\n  private _markUpdated() {\n    this._changedProperties = new Map();\n    this._updateState = this._updateState & ~STATE_UPDATE_REQUESTED;\n  }\n\n  /**\n   * Returns a Promise that resolves when the element has completed updating.\n   * The Promise value is a boolean that is `true` if the element completed the\n   * update without triggering another update. The Promise result is `false` if\n   * a property was set inside `updated()`. If the Promise is rejected, an\n   * exception was thrown during the update.\n   *\n   * To await additional asynchronous work, override the `_getUpdateComplete`\n   * method. For example, it is sometimes useful to await a rendered element\n   * before fulfilling this Promise. To do this, first await\n   * `super._getUpdateComplete()`, then any subsequent state.\n   *\n   * @returns {Promise} The Promise returns a boolean that indicates if the\n   * update resolved without triggering another update.\n   */\n  get updateComplete() {\n    return this._getUpdateComplete();\n  }\n\n  /**\n   * Override point for the `updateComplete` promise.\n   *\n   * It is not safe to override the `updateComplete` getter directly due to a\n   * limitation in TypeScript which means it is not possible to call a\n   * superclass getter (e.g. `super.updateComplete.then(...)`) when the target\n   * language is ES5 (https://github.com/microsoft/TypeScript/issues/338).\n   * This method should be overridden instead. For example:\n   *\n   *   class MyElement extends LitElement {\n   *     async _getUpdateComplete() {\n   *       await super._getUpdateComplete();\n   *       await this._myChild.updateComplete;\n   *     }\n   *   }\n   */\n  protected _getUpdateComplete() {\n    return this._updatePromise;\n  }\n\n  /**\n   * Controls whether or not `update` should be called when the element requests\n   * an update. By default, this method always returns `true`, but this can be\n   * customized to control when to update.\n   *\n   * * @param _changedProperties Map of changed properties with old values\n   */\n  protected shouldUpdate(_changedProperties: PropertyValues): boolean {\n    return true;\n  }\n\n  /**\n   * Updates the element. This method reflects property values to attributes.\n   * It can be overridden to render and keep updated element DOM.\n   * Setting properties inside this method will *not* trigger\n   * another update.\n   *\n   * * @param _changedProperties Map of changed properties with old values\n   */\n  protected update(_changedProperties: PropertyValues) {\n    if (this._reflectingProperties !== undefined &&\n        this._reflectingProperties.size > 0) {\n      // Use forEach so this works even if for/of loops are compiled to for\n      // loops expecting arrays\n      this._reflectingProperties.forEach(\n          (v, k) => this._propertyToAttribute(k, this[k as keyof this], v));\n      this._reflectingProperties = undefined;\n    }\n  }\n\n  /**\n   * Invoked whenever the element is updated. Implement to perform\n   * post-updating tasks via DOM APIs, for example, focusing an element.\n   *\n   * Setting properties inside this method will trigger the element to update\n   * again after this update cycle completes.\n   *\n   * * @param _changedProperties Map of changed properties with old values\n   */\n  protected updated(_changedProperties: PropertyValues) {\n  }\n\n  /**\n   * Invoked when the element is first updated. Implement to perform one time\n   * work on the element after update.\n   *\n   * Setting properties inside this method will trigger the element to update\n   * again after this update cycle completes.\n   *\n   * * @param _changedProperties Map of changed properties with old values\n   */\n  protected firstUpdated(_changedProperties: PropertyValues) {\n  }\n}\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\nimport {LitElement} from '../lit-element.js';\n\nimport {PropertyDeclaration, UpdatingElement} from './updating-element.js';\n\nexport type Constructor<T> = {\n  new (...args: unknown[]): T\n};\n\n// From the TC39 Decorators proposal\ninterface ClassDescriptor {\n  kind: 'class';\n  elements: ClassElement[];\n  finisher?: <T>(clazz: Constructor<T>) => undefined | Constructor<T>;\n}\n\n// From the TC39 Decorators proposal\ninterface ClassElement {\n  kind: 'field'|'method';\n  key: PropertyKey;\n  placement: 'static'|'prototype'|'own';\n  initializer?: Function;\n  extras?: ClassElement[];\n  finisher?: <T>(clazz: Constructor<T>) => undefined | Constructor<T>;\n  descriptor?: PropertyDescriptor;\n}\n\nconst legacyCustomElement =\n    (tagName: string, clazz: Constructor<HTMLElement>) => {\n      window.customElements.define(tagName, clazz);\n      // Cast as any because TS doesn't recognize the return type as being a\n      // subtype of the decorated class when clazz is typed as\n      // `Constructor<HTMLElement>` for some reason.\n      // `Constructor<HTMLElement>` is helpful to make sure the decorator is\n      // applied to elements however.\n      // tslint:disable-next-line:no-any\n      return clazz as any;\n    };\n\nconst standardCustomElement =\n    (tagName: string, descriptor: ClassDescriptor) => {\n      const {kind, elements} = descriptor;\n      return {\n        kind,\n        elements,\n        // This callback is called once the class is otherwise fully defined\n        finisher(clazz: Constructor<HTMLElement>) {\n          window.customElements.define(tagName, clazz);\n        }\n      };\n    };\n\n/**\n * Class decorator factory that defines the decorated class as a custom element.\n *\n * @param tagName the name of the custom element to define\n */\nexport const customElement = (tagName: string) =>\n    (classOrDescriptor: Constructor<HTMLElement>|ClassDescriptor) =>\n        (typeof classOrDescriptor === 'function') ?\n    legacyCustomElement(tagName, classOrDescriptor) :\n    standardCustomElement(tagName, classOrDescriptor);\n\nconst standardProperty =\n    (options: PropertyDeclaration, element: ClassElement) => {\n      // When decorating an accessor, pass it through and add property metadata.\n      // Note, the `hasOwnProperty` check in `createProperty` ensures we don't\n      // stomp over the user's accessor.\n      if (element.kind === 'method' && element.descriptor &&\n          !('value' in element.descriptor)) {\n        return {\n          ...element,\n          finisher(clazz: typeof UpdatingElement) {\n            clazz.createProperty(element.key, options);\n          }\n        };\n      } else {\n        // createProperty() takes care of defining the property, but we still\n        // must return some kind of descriptor, so return a descriptor for an\n        // unused prototype field. The finisher calls createProperty().\n        return {\n          kind: 'field',\n          key: Symbol(),\n          placement: 'own',\n          descriptor: {},\n          // When @babel/plugin-proposal-decorators implements initializers,\n          // do this instead of the initializer below. See:\n          // https://github.com/babel/babel/issues/9260 extras: [\n          //   {\n          //     kind: 'initializer',\n          //     placement: 'own',\n          //     initializer: descriptor.initializer,\n          //   }\n          // ],\n          initializer(this: {[key: string]: unknown}) {\n            if (typeof element.initializer === 'function') {\n              this[element.key as string] = element.initializer.call(this);\n            }\n          },\n          finisher(clazz: typeof UpdatingElement) {\n            clazz.createProperty(element.key, options);\n          }\n        };\n      }\n    };\n\nconst legacyProperty =\n    (options: PropertyDeclaration, proto: Object, name: PropertyKey) => {\n      (proto.constructor as typeof UpdatingElement)\n          .createProperty(name, options);\n    };\n\n/**\n * A property decorator which creates a LitElement property which reflects a\n * corresponding attribute value. A `PropertyDeclaration` may optionally be\n * supplied to configure property features.\n *\n * @ExportDecoratedItems\n */\nexport function property(options?: PropertyDeclaration) {\n  // tslint:disable-next-line:no-any decorator\n  return (protoOrDescriptor: Object|ClassElement, name?: PropertyKey): any =>\n             (name !== undefined) ?\n      legacyProperty(options!, protoOrDescriptor as Object, name) :\n      standardProperty(options!, protoOrDescriptor as ClassElement);\n}\n\n/**\n * A property decorator that converts a class property into a getter that\n * executes a querySelector on the element's renderRoot.\n *\n * @ExportDecoratedItems\n */\nexport function query(selector: string) {\n  return (protoOrDescriptor: Object|ClassElement,\n          // tslint:disable-next-line:no-any decorator\n          name?: PropertyKey): any => {\n    const descriptor = {\n      get(this: LitElement) {\n        return this.renderRoot.querySelector(selector);\n      },\n      enumerable: true,\n      configurable: true,\n    };\n    return (name !== undefined) ?\n        legacyQuery(descriptor, protoOrDescriptor as Object, name) :\n        standardQuery(descriptor, protoOrDescriptor as ClassElement);\n  };\n}\n\n/**\n * A property decorator that converts a class property into a getter\n * that executes a querySelectorAll on the element's renderRoot.\n *\n * @ExportDecoratedItems\n */\nexport function queryAll(selector: string) {\n  return (protoOrDescriptor: Object|ClassElement,\n          // tslint:disable-next-line:no-any decorator\n          name?: PropertyKey): any => {\n    const descriptor = {\n      get(this: LitElement) {\n        return this.renderRoot.querySelectorAll(selector);\n      },\n      enumerable: true,\n      configurable: true,\n    };\n    return (name !== undefined) ?\n        legacyQuery(descriptor, protoOrDescriptor as Object, name) :\n        standardQuery(descriptor, protoOrDescriptor as ClassElement);\n  };\n}\n\nconst legacyQuery =\n    (descriptor: PropertyDescriptor, proto: Object, name: PropertyKey) => {\n      Object.defineProperty(proto, name, descriptor);\n    };\n\nconst standardQuery = (descriptor: PropertyDescriptor, element: ClassElement) =>\n    ({\n      kind: 'method',\n      placement: 'prototype',\n      key: element.key,\n      descriptor,\n    });\n\nconst standardEventOptions =\n    (options: AddEventListenerOptions, element: ClassElement) => {\n      return {\n        ...element,\n        finisher(clazz: typeof UpdatingElement) {\n          Object.assign(\n              clazz.prototype[element.key as keyof UpdatingElement], options);\n        }\n      };\n    };\n\nconst legacyEventOptions =\n    // tslint:disable-next-line:no-any legacy decorator\n    (options: AddEventListenerOptions, proto: any, name: PropertyKey) => {\n      Object.assign(proto[name], options);\n    };\n\n/**\n * Adds event listener options to a method used as an event listener in a\n * lit-html template.\n *\n * @param options An object that specifis event listener options as accepted by\n * `EventTarget#addEventListener` and `EventTarget#removeEventListener`.\n *\n * Current browsers support the `capture`, `passive`, and `once` options. See:\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Parameters\n *\n * @example\n *\n *     class MyElement {\n *\n *       clicked = false;\n *\n *       render() {\n *         return html`<div @click=${this._onClick}`><button></button></div>`;\n *       }\n *\n *       @eventOptions({capture: true})\n *       _onClick(e) {\n *         this.clicked = true;\n *       }\n *     }\n */\nexport const eventOptions = (options: AddEventListenerOptions) =>\n    // Return value typed as any to prevent TypeScript from complaining that\n    // standard decorator function signature does not match TypeScript decorator\n    // signature\n    // TODO(kschaaf): unclear why it was only failing on this decorator and not\n    // the others\n    ((protoOrDescriptor: Object|ClassElement, name?: string) =>\n         (name !== undefined) ?\n         legacyEventOptions(options, protoOrDescriptor as Object, name) :\n         standardEventOptions(options, protoOrDescriptor as ClassElement)) as\n        // tslint:disable-next-line:no-any decorator\n        any;\n","/**\n@license\nCopyright (c) 2019 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at\nhttp://polymer.github.io/LICENSE.txt The complete set of authors may be found at\nhttp://polymer.github.io/AUTHORS.txt The complete set of contributors may be\nfound at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as\npart of the polymer project is also subject to an additional IP rights grant\nfound at http://polymer.github.io/PATENTS.txt\n*/\n\nexport const supportsAdoptingStyleSheets =\n    ('adoptedStyleSheets' in Document.prototype) &&\n    ('replace' in CSSStyleSheet.prototype);\n\nconst constructionToken = Symbol();\n\nexport class CSSResult {\n  _styleSheet?: CSSStyleSheet|null;\n\n  readonly cssText: string;\n\n  constructor(cssText: string, safeToken: symbol) {\n    if (safeToken !== constructionToken) {\n      throw new Error(\n          'CSSResult is not constructable. Use `unsafeCSS` or `css` instead.');\n    }\n    this.cssText = cssText;\n  }\n\n  // Note, this is a getter so that it's lazy. In practice, this means\n  // stylesheets are not created until the first element instance is made.\n  get styleSheet(): CSSStyleSheet|null {\n    if (this._styleSheet === undefined) {\n      // Note, if `adoptedStyleSheets` is supported then we assume CSSStyleSheet\n      // is constructable.\n      if (supportsAdoptingStyleSheets) {\n        this._styleSheet = new CSSStyleSheet();\n        this._styleSheet.replaceSync(this.cssText);\n      } else {\n        this._styleSheet = null;\n      }\n    }\n    return this._styleSheet;\n  }\n\n  toString(): string {\n    return this.cssText;\n  }\n}\n\n/**\n * Wrap a value for interpolation in a css tagged template literal.\n *\n * This is unsafe because untrusted CSS text can be used to phone home\n * or exfiltrate data to an attacker controlled site. Take care to only use\n * this with trusted input.\n */\nexport const unsafeCSS = (value: unknown) => {\n  return new CSSResult(String(value), constructionToken);\n};\n\nconst textFromCSSResult = (value: CSSResult|number) => {\n  if (value instanceof CSSResult) {\n    return value.cssText;\n  } else if (typeof value === 'number') {\n    return value;\n  } else {\n    throw new Error(\n        `Value passed to 'css' function must be a 'css' function result: ${\n            value}. Use 'unsafeCSS' to pass non-literal values, but\n            take care to ensure page security.`);\n  }\n};\n\n/**\n * Template tag which which can be used with LitElement's `style` property to\n * set element styles. For security reasons, only literal string values may be\n * used. To incorporate non-literal values `unsafeCSS` may be used inside a\n * template string part.\n */\nexport const css =\n    (strings: TemplateStringsArray, ...values: (CSSResult|number)[]) => {\n      const cssText = values.reduce(\n          (acc, v, idx) => acc + textFromCSSResult(v) + strings[idx + 1],\n          strings[0]);\n      return new CSSResult(cssText, constructionToken);\n    };\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nimport {TemplateResult} from 'lit-html';\nimport {render} from 'lit-html/lib/shady-render.js';\n\nimport {PropertyValues, UpdatingElement} from './lib/updating-element.js';\n\nexport * from './lib/updating-element.js';\nexport * from './lib/decorators.js';\nexport {html, svg, TemplateResult, SVGTemplateResult} from 'lit-html/lit-html.js';\nimport {supportsAdoptingStyleSheets, CSSResult} from './lib/css-tag.js';\nexport * from './lib/css-tag.js';\n\ndeclare global {\n  interface Window {\n    litElementVersions: string[];\n  }\n}\n\n// IMPORTANT: do not change the property name or the assignment expression.\n// This line will be used in regexes to search for LitElement usage.\n// TODO(justinfagnani): inject version number at build time\n(window['litElementVersions'] || (window['litElementVersions'] = []))\n    .push('2.2.1');\n\nexport interface CSSResultArray extends Array<CSSResult|CSSResultArray> {}\n\n/**\n * Minimal implementation of Array.prototype.flat\n * @param arr the array to flatten\n * @param result the accumlated result\n */\nfunction arrayFlat(\n    styles: CSSResultArray, result: CSSResult[] = []): CSSResult[] {\n  for (let i = 0, length = styles.length; i < length; i++) {\n    const value = styles[i];\n    if (Array.isArray(value)) {\n      arrayFlat(value, result);\n    } else {\n      result.push(value);\n    }\n  }\n  return result;\n}\n\n/** Deeply flattens styles array. Uses native flat if available. */\nconst flattenStyles = (styles: CSSResultArray): CSSResult[] =>\n    styles.flat ? styles.flat(Infinity) : arrayFlat(styles);\n\nexport class LitElement extends UpdatingElement {\n\n  /**\n   * Ensure this class is marked as `finalized` as an optimization ensuring\n   * it will not needlessly try to `finalize`.\n   *\n   * Note this property name is a string to prevent breaking Closure JS Compiler\n   * optimizations. See updating-element.ts for more information.\n   */\n  protected static['finalized'] = true;\n  /**\n   * Render method used to render the lit-html TemplateResult to the element's\n   * DOM.\n   * @param {TemplateResult} Template to render.\n   * @param {Element|DocumentFragment} Node into which to render.\n   * @param {String} Element name.\n   * @nocollapse\n   */\n  static render = render;\n\n  /**\n   * Array of styles to apply to the element. The styles should be defined\n   * using the `css` tag function.\n   */\n  static styles?: CSSResult|CSSResultArray;\n\n  private static _styles: CSSResult[]|undefined;\n\n  /** @nocollapse */\n  protected static finalize() {\n    // The Closure JS Compiler does not always preserve the correct \"this\"\n    // when calling static super methods (b/137460243), so explicitly bind.\n    super.finalize.call(this);\n    // Prepare styling that is stamped at first render time. Styling\n    // is built from user provided `styles` or is inherited from the superclass.\n    this._styles =\n        this.hasOwnProperty(JSCompiler_renameProperty('styles', this)) ?\n        this._getUniqueStyles() :\n        this._styles || [];\n  }\n\n  /** @nocollapse */\n  private static _getUniqueStyles(): CSSResult[] {\n    // Take care not to call `this.styles` multiple times since this generates\n    // new CSSResults each time.\n    // TODO(sorvell): Since we do not cache CSSResults by input, any\n    // shared styles will generate new stylesheet objects, which is wasteful.\n    // This should be addressed when a browser ships constructable\n    // stylesheets.\n    const userStyles = this.styles;\n    const styles: CSSResult[] = [];\n    if (Array.isArray(userStyles)) {\n      const flatStyles = flattenStyles(userStyles);\n      // As a performance optimization to avoid duplicated styling that can\n      // occur especially when composing via subclassing, de-duplicate styles\n      // preserving the last item in the list. The last item is kept to\n      // try to preserve cascade order with the assumption that it's most\n      // important that last added styles override previous styles.\n      const styleSet = flatStyles.reduceRight((set, s) => {\n        set.add(s);\n        // on IE set.add does not return the set.\n        return set;\n      }, new Set<CSSResult>());\n      // Array.from does not work on Set in IE\n      styleSet.forEach((v) => styles.unshift(v));\n    } else if (userStyles) {\n      styles.push(userStyles);\n    }\n    return styles;\n  }\n\n  private _needsShimAdoptedStyleSheets?: boolean;\n\n  /**\n   * Node or ShadowRoot into which element DOM should be rendered. Defaults\n   * to an open shadowRoot.\n   */\n  readonly renderRoot!: Element|DocumentFragment;\n\n  /**\n   * Performs element initialization. By default this calls `createRenderRoot`\n   * to create the element `renderRoot` node and captures any pre-set values for\n   * registered properties.\n   */\n  protected initialize() {\n    super.initialize();\n    (this as {renderRoot: Element | DocumentFragment}).renderRoot =\n        this.createRenderRoot();\n    // Note, if renderRoot is not a shadowRoot, styles would/could apply to the\n    // element's getRootNode(). While this could be done, we're choosing not to\n    // support this now since it would require different logic around de-duping.\n    if (window.ShadowRoot && this.renderRoot instanceof window.ShadowRoot) {\n      this.adoptStyles();\n    }\n  }\n\n  /**\n   * Returns the node into which the element should render and by default\n   * creates and returns an open shadowRoot. Implement to customize where the\n   * element's DOM is rendered. For example, to render into the element's\n   * childNodes, return `this`.\n   * @returns {Element|DocumentFragment} Returns a node into which to render.\n   */\n  protected createRenderRoot(): Element|ShadowRoot {\n    return this.attachShadow({mode: 'open'});\n  }\n\n  /**\n   * Applies styling to the element shadowRoot using the `static get styles`\n   * property. Styling will apply using `shadowRoot.adoptedStyleSheets` where\n   * available and will fallback otherwise. When Shadow DOM is polyfilled,\n   * ShadyCSS scopes styles and adds them to the document. When Shadow DOM\n   * is available but `adoptedStyleSheets` is not, styles are appended to the\n   * end of the `shadowRoot` to [mimic spec\n   * behavior](https://wicg.github.io/construct-stylesheets/#using-constructed-stylesheets).\n   */\n  protected adoptStyles() {\n    const styles = (this.constructor as typeof LitElement)._styles!;\n    if (styles.length === 0) {\n      return;\n    }\n    // There are three separate cases here based on Shadow DOM support.\n    // (1) shadowRoot polyfilled: use ShadyCSS\n    // (2) shadowRoot.adoptedStyleSheets available: use it.\n    // (3) shadowRoot.adoptedStyleSheets polyfilled: append styles after\n    // rendering\n    if (window.ShadyCSS !== undefined && !window.ShadyCSS.nativeShadow) {\n      window.ShadyCSS.ScopingShim!.prepareAdoptedCssText(\n          styles.map((s) => s.cssText), this.localName);\n    } else if (supportsAdoptingStyleSheets) {\n      (this.renderRoot as ShadowRoot).adoptedStyleSheets =\n          styles.map((s) => s.styleSheet!);\n    } else {\n      // This must be done after rendering so the actual style insertion is done\n      // in `update`.\n      this._needsShimAdoptedStyleSheets = true;\n    }\n  }\n\n  connectedCallback() {\n    super.connectedCallback();\n    // Note, first update/render handles styleElement so we only call this if\n    // connected after first update.\n    if (this.hasUpdated && window.ShadyCSS !== undefined) {\n      window.ShadyCSS.styleElement(this);\n    }\n  }\n\n  /**\n   * Updates the element. This method reflects property values to attributes\n   * and calls `render` to render DOM via lit-html. Setting properties inside\n   * this method will *not* trigger another update.\n   * * @param _changedProperties Map of changed properties with old values\n   */\n  protected update(changedProperties: PropertyValues) {\n    super.update(changedProperties);\n    const templateResult = this.render() as unknown;\n    if (templateResult instanceof TemplateResult) {\n      (this.constructor as typeof LitElement)\n          .render(\n              templateResult,\n              this.renderRoot,\n              {scopeName: this.localName, eventContext: this});\n    }\n    // When native Shadow DOM is used but adoptedStyles are not supported,\n    // insert styling after rendering to ensure adoptedStyles have highest\n    // priority.\n    if (this._needsShimAdoptedStyleSheets) {\n      this._needsShimAdoptedStyleSheets = false;\n      (this.constructor as typeof LitElement)._styles!.forEach((s) => {\n        const style = document.createElement('style');\n        style.textContent = s.cssText;\n        this.renderRoot.appendChild(style);\n      });\n    }\n  }\n\n  /**\n   * Invoked on each update to perform rendering tasks. This method must return\n   * a lit-html TemplateResult. Setting properties inside this method will *not*\n   * trigger the element to update.\n   */\n  protected render(): TemplateResult|void {\n  }\n}\n","/**\n * @license\n * Copyright (c) 2018 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\nimport {AttributePart, directive, Part, PropertyPart} from '../lit-html.js';\n\n\nexport interface ClassInfo {\n  readonly [name: string]: string|boolean|number;\n}\n\n/**\n * Stores the ClassInfo object applied to a given AttributePart.\n * Used to unset existing values when a new ClassInfo object is applied.\n */\nconst classMapCache = new WeakMap();\n\n/**\n * A directive that applies CSS classes. This must be used in the `class`\n * attribute and must be the only part used in the attribute. It takes each\n * property in the `classInfo` argument and adds the property name to the\n * element's `classList` if the property value is truthy; if the property value\n * is falsey, the property name is removed from the element's `classList`. For\n * example\n * `{foo: bar}` applies the class `foo` if the value of `bar` is truthy.\n * @param classInfo {ClassInfo}\n */\nexport const classMap = directive((classInfo: ClassInfo) => (part: Part) => {\n  if (!(part instanceof AttributePart) || (part instanceof PropertyPart) ||\n      part.committer.name !== 'class' || part.committer.parts.length > 1) {\n    throw new Error(\n        'The `classMap` directive must be used in the `class` attribute ' +\n        'and must be the only part in the attribute.');\n  }\n\n  const {committer} = part;\n  const {element} = committer;\n\n  // handle static classes\n  if (!classMapCache.has(part)) {\n    element.className = committer.strings.join(' ');\n  }\n\n  const {classList} = element;\n\n  // remove old classes that no longer apply\n  const oldInfo = classMapCache.get(part);\n  for (const name in oldInfo) {\n    if (!(name in classInfo)) {\n      classList.remove(name);\n    }\n  }\n\n  // add new classes\n  for (const name in classInfo) {\n    const value = classInfo[name];\n    if (!oldInfo || value !== oldInfo[name]) {\n      // We explicitly want a loose truthy check here because\n      // it seems more convenient that '' and 0 are skipped.\n      const method = value ? 'add' : 'remove';\n      classList[method](name);\n    }\n  }\n  classMapCache.set(part, classInfo);\n});\n","/**\n * @license\n * Copyright (c) 2018 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\nimport {AttributePart, directive, Part, PropertyPart} from '../lit-html.js';\n\nexport interface StyleInfo {\n  readonly [name: string]: string;\n}\n\n/**\n * Stores the StyleInfo object applied to a given AttributePart.\n * Used to unset existing values when a new StyleInfo object is applied.\n */\nconst styleMapCache = new WeakMap<AttributePart, StyleInfo>();\n\n/**\n * A directive that applies CSS properties to an element.\n *\n * `styleMap` can only be used in the `style` attribute and must be the only\n * expression in the attribute. It takes the property names in the `styleInfo`\n * object and adds the property values as CSS propertes. Property names with\n * dashes (`-`) are assumed to be valid CSS property names and set on the\n * element's style object using `setProperty()`. Names without dashes are\n * assumed to be camelCased JavaScript property names and set on the element's\n * style object using property assignment, allowing the style object to\n * translate JavaScript-style names to CSS property names.\n *\n * For example `styleMap({backgroundColor: 'red', 'border-top': '5px', '--size':\n * '0'})` sets the `background-color`, `border-top` and `--size` properties.\n *\n * @param styleInfo {StyleInfo}\n */\nexport const styleMap = directive((styleInfo: StyleInfo) => (part: Part) => {\n  if (!(part instanceof AttributePart) || (part instanceof PropertyPart) ||\n      part.committer.name !== 'style' || part.committer.parts.length > 1) {\n    throw new Error(\n        'The `styleMap` directive must be used in the style attribute ' +\n        'and must be the only part in the attribute.');\n  }\n\n  const {committer} = part;\n  const {style} = committer.element as HTMLElement;\n\n  // Handle static styles the first time we see a Part\n  if (!styleMapCache.has(part)) {\n    style.cssText = committer.strings.join(' ');\n  }\n\n  // Remove old properties that no longer exist in styleInfo\n  const oldInfo = styleMapCache.get(part);\n  for (const name in oldInfo) {\n    if (!(name in styleInfo)) {\n      if (name.indexOf('-') === -1) {\n        // tslint:disable-next-line:no-any\n        (style as any)[name] = null;\n      } else {\n        style.removeProperty(name);\n      }\n    }\n  }\n\n  // Add or update properties\n  for (const name in styleInfo) {\n    if (name.indexOf('-') === -1) {\n      // tslint:disable-next-line:no-any\n      (style as any)[name] = styleInfo[name];\n    } else {\n      style.setProperty(name, styleInfo[name]);\n    }\n  }\n  styleMapCache.set(part, styleInfo);\n});\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\nimport {DirectiveFn} from '../lib/directive.js';\nimport {createMarker, directive, NodePart, Part, removeNodes, reparentNodes} from '../lit-html.js';\n\nexport type KeyFn<T> = (item: T, index: number) => unknown;\nexport type ItemTemplate<T> = (item: T, index: number) => unknown;\n\n// Helper functions for manipulating parts\n// TODO(kschaaf): Refactor into Part API?\nconst createAndInsertPart =\n    (containerPart: NodePart, beforePart?: NodePart): NodePart => {\n      const container = containerPart.startNode.parentNode as Node;\n      const beforeNode = beforePart === undefined ? containerPart.endNode :\n                                                    beforePart.startNode;\n      const startNode = container.insertBefore(createMarker(), beforeNode);\n      container.insertBefore(createMarker(), beforeNode);\n      const newPart = new NodePart(containerPart.options);\n      newPart.insertAfterNode(startNode);\n      return newPart;\n    };\n\nconst updatePart = (part: NodePart, value: unknown) => {\n  part.setValue(value);\n  part.commit();\n  return part;\n};\n\nconst insertPartBefore =\n    (containerPart: NodePart, part: NodePart, ref?: NodePart) => {\n      const container = containerPart.startNode.parentNode as Node;\n      const beforeNode = ref ? ref.startNode : containerPart.endNode;\n      const endNode = part.endNode.nextSibling;\n      if (endNode !== beforeNode) {\n        reparentNodes(container, part.startNode, endNode, beforeNode);\n      }\n    };\n\nconst removePart = (part: NodePart) => {\n  removeNodes(\n      part.startNode.parentNode!, part.startNode, part.endNode.nextSibling);\n};\n\n// Helper for generating a map of array item to its index over a subset\n// of an array (used to lazily generate `newKeyToIndexMap` and\n// `oldKeyToIndexMap`)\nconst generateMap = (list: unknown[], start: number, end: number) => {\n  const map = new Map();\n  for (let i = start; i <= end; i++) {\n    map.set(list[i], i);\n  }\n  return map;\n};\n\n// Stores previous ordered list of parts and map of key to index\nconst partListCache = new WeakMap<NodePart, (NodePart | null)[]>();\nconst keyListCache = new WeakMap<NodePart, unknown[]>();\n\n/**\n * A directive that repeats a series of values (usually `TemplateResults`)\n * generated from an iterable, and updates those items efficiently when the\n * iterable changes based on user-provided `keys` associated with each item.\n *\n * Note that if a `keyFn` is provided, strict key-to-DOM mapping is maintained,\n * meaning previous DOM for a given key is moved into the new position if\n * needed, and DOM will never be reused with values for different keys (new DOM\n * will always be created for new keys). This is generally the most efficient\n * way to use `repeat` since it performs minimum unnecessary work for insertions\n * amd removals.\n *\n * IMPORTANT: If providing a `keyFn`, keys *must* be unique for all items in a\n * given call to `repeat`. The behavior when two or more items have the same key\n * is undefined.\n *\n * If no `keyFn` is provided, this directive will perform similar to mapping\n * items to values, and DOM will be reused against potentially different items.\n */\nexport const repeat =\n    directive(\n        <T>(items: Iterable<T>,\n            keyFnOrTemplate: KeyFn<T>|ItemTemplate<T>,\n            template?: ItemTemplate<T>):\n            DirectiveFn => {\n              let keyFn: KeyFn<T>;\n              if (template === undefined) {\n                template = keyFnOrTemplate;\n              } else if (keyFnOrTemplate !== undefined) {\n                keyFn = keyFnOrTemplate as KeyFn<T>;\n              }\n\n              return (containerPart: Part): void => {\n                if (!(containerPart instanceof NodePart)) {\n                  throw new Error('repeat can only be used in text bindings');\n                }\n                // Old part & key lists are retrieved from the last update\n                // (associated with the part for this instance of the directive)\n                const oldParts = partListCache.get(containerPart) || [];\n                const oldKeys = keyListCache.get(containerPart) || [];\n\n                // New part list will be built up as we go (either reused from\n                // old parts or created for new keys in this update). This is\n                // saved in the above cache at the end of the update.\n                const newParts: NodePart[] = [];\n\n                // New value list is eagerly generated from items along with a\n                // parallel array indicating its key.\n                const newValues: unknown[] = [];\n                const newKeys: unknown[] = [];\n                let index = 0;\n                for (const item of items) {\n                  newKeys[index] = keyFn ? keyFn(item, index) : index;\n                  newValues[index] = template !(item, index);\n                  index++;\n                }\n\n                // Maps from key to index for current and previous update; these\n                // are generated lazily only when needed as a performance\n                // optimization, since they are only required for multiple\n                // non-contiguous changes in the list, which are less common.\n                let newKeyToIndexMap!: Map<unknown, number>;\n                let oldKeyToIndexMap!: Map<unknown, number>;\n\n                // Head and tail pointers to old parts and new values\n                let oldHead = 0;\n                let oldTail = oldParts.length - 1;\n                let newHead = 0;\n                let newTail = newValues.length - 1;\n\n                // Overview of O(n) reconciliation algorithm (general approach\n                // based on ideas found in ivi, vue, snabbdom, etc.):\n                //\n                // * We start with the list of old parts and new values (and\n                //   arrays of their respective keys), head/tail pointers into\n                //   each, and we build up the new list of parts by updating\n                //   (and when needed, moving) old parts or creating new ones.\n                //   The initial scenario might look like this (for brevity of\n                //   the diagrams, the numbers in the array reflect keys\n                //   associated with the old parts or new values, although keys\n                //   and parts/values are actually stored in parallel arrays\n                //   indexed using the same head/tail pointers):\n                //\n                //      oldHead v                 v oldTail\n                //   oldKeys:  [0, 1, 2, 3, 4, 5, 6]\n                //   newParts: [ ,  ,  ,  ,  ,  ,  ]\n                //   newKeys:  [0, 2, 1, 4, 3, 7, 6] <- reflects the user's new\n                //                                      item order\n                //      newHead ^                 ^ newTail\n                //\n                // * Iterate old & new lists from both sides, updating,\n                //   swapping, or removing parts at the head/tail locations\n                //   until neither head nor tail can move.\n                //\n                // * Example below: keys at head pointers match, so update old\n                //   part 0 in-place (no need to move it) and record part 0 in\n                //   the `newParts` list. The last thing we do is advance the\n                //   `oldHead` and `newHead` pointers (will be reflected in the\n                //   next diagram).\n                //\n                //      oldHead v                 v oldTail\n                //   oldKeys:  [0, 1, 2, 3, 4, 5, 6]\n                //   newParts: [0,  ,  ,  ,  ,  ,  ] <- heads matched: update 0\n                //   newKeys:  [0, 2, 1, 4, 3, 7, 6]    and advance both oldHead\n                //                                      & newHead\n                //      newHead ^                 ^ newTail\n                //\n                // * Example below: head pointers don't match, but tail\n                //   pointers do, so update part 6 in place (no need to move\n                //   it), and record part 6 in the `newParts` list. Last,\n                //   advance the `oldTail` and `oldHead` pointers.\n                //\n                //         oldHead v              v oldTail\n                //   oldKeys:  [0, 1, 2, 3, 4, 5, 6]\n                //   newParts: [0,  ,  ,  ,  ,  , 6] <- tails matched: update 6\n                //   newKeys:  [0, 2, 1, 4, 3, 7, 6]    and advance both oldTail\n                //                                      & newTail\n                //         newHead ^              ^ newTail\n                //\n                // * If neither head nor tail match; next check if one of the\n                //   old head/tail items was removed. We first need to generate\n                //   the reverse map of new keys to index (`newKeyToIndexMap`),\n                //   which is done once lazily as a performance optimization,\n                //   since we only hit this case if multiple non-contiguous\n                //   changes were made. Note that for contiguous removal\n                //   anywhere in the list, the head and tails would advance\n                //   from either end and pass each other before we get to this\n                //   case and removals would be handled in the final while loop\n                //   without needing to generate the map.\n                //\n                // * Example below: The key at `oldTail` was removed (no longer\n                //   in the `newKeyToIndexMap`), so remove that part from the\n                //   DOM and advance just the `oldTail` pointer.\n                //\n                //         oldHead v           v oldTail\n                //   oldKeys:  [0, 1, 2, 3, 4, 5, 6]\n                //   newParts: [0,  ,  ,  ,  ,  , 6] <- 5 not in new map: remove\n                //   newKeys:  [0, 2, 1, 4, 3, 7, 6]    5 and advance oldTail\n                //         newHead ^           ^ newTail\n                //\n                // * Once head and tail cannot move, any mismatches are due to\n                //   either new or moved items; if a new key is in the previous\n                //   \"old key to old index\" map, move the old part to the new\n                //   location, otherwise create and insert a new part. Note\n                //   that when moving an old part we null its position in the\n                //   oldParts array if it lies between the head and tail so we\n                //   know to skip it when the pointers get there.\n                //\n                // * Example below: neither head nor tail match, and neither\n                //   were removed; so find the `newHead` key in the\n                //   `oldKeyToIndexMap`, and move that old part's DOM into the\n                //   next head position (before `oldParts[oldHead]`). Last,\n                //   null the part in the `oldPart` array since it was\n                //   somewhere in the remaining oldParts still to be scanned\n                //   (between the head and tail pointers) so that we know to\n                //   skip that old part on future iterations.\n                //\n                //         oldHead v        v oldTail\n                //   oldKeys:  [0, 1, -, 3, 4, 5, 6]\n                //   newParts: [0, 2,  ,  ,  ,  , 6] <- stuck: update & move 2\n                //   newKeys:  [0, 2, 1, 4, 3, 7, 6]    into place and advance\n                //                                      newHead\n                //         newHead ^           ^ newTail\n                //\n                // * Note that for moves/insertions like the one above, a part\n                //   inserted at the head pointer is inserted before the\n                //   current `oldParts[oldHead]`, and a part inserted at the\n                //   tail pointer is inserted before `newParts[newTail+1]`. The\n                //   seeming asymmetry lies in the fact that new parts are\n                //   moved into place outside in, so to the right of the head\n                //   pointer are old parts, and to the right of the tail\n                //   pointer are new parts.\n                //\n                // * We always restart back from the top of the algorithm,\n                //   allowing matching and simple updates in place to\n                //   continue...\n                //\n                // * Example below: the head pointers once again match, so\n                //   simply update part 1 and record it in the `newParts`\n                //   array.  Last, advance both head pointers.\n                //\n                //         oldHead v        v oldTail\n                //   oldKeys:  [0, 1, -, 3, 4, 5, 6]\n                //   newParts: [0, 2, 1,  ,  ,  , 6] <- heads matched: update 1\n                //   newKeys:  [0, 2, 1, 4, 3, 7, 6]    and advance both oldHead\n                //                                      & newHead\n                //            newHead ^        ^ newTail\n                //\n                // * As mentioned above, items that were moved as a result of\n                //   being stuck (the final else clause in the code below) are\n                //   marked with null, so we always advance old pointers over\n                //   these so we're comparing the next actual old value on\n                //   either end.\n                //\n                // * Example below: `oldHead` is null (already placed in\n                //   newParts), so advance `oldHead`.\n                //\n                //            oldHead v     v oldTail\n                //   oldKeys:  [0, 1, -, 3, 4, 5, 6] <- old head already used:\n                //   newParts: [0, 2, 1,  ,  ,  , 6]    advance oldHead\n                //   newKeys:  [0, 2, 1, 4, 3, 7, 6]\n                //               newHead ^     ^ newTail\n                //\n                // * Note it's not critical to mark old parts as null when they\n                //   are moved from head to tail or tail to head, since they\n                //   will be outside the pointer range and never visited again.\n                //\n                // * Example below: Here the old tail key matches the new head\n                //   key, so the part at the `oldTail` position and move its\n                //   DOM to the new head position (before `oldParts[oldHead]`).\n                //   Last, advance `oldTail` and `newHead` pointers.\n                //\n                //               oldHead v  v oldTail\n                //   oldKeys:  [0, 1, -, 3, 4, 5, 6]\n                //   newParts: [0, 2, 1, 4,  ,  , 6] <- old tail matches new\n                //   newKeys:  [0, 2, 1, 4, 3, 7, 6]   head: update & move 4,\n                //                                     advance oldTail & newHead\n                //               newHead ^     ^ newTail\n                //\n                // * Example below: Old and new head keys match, so update the\n                //   old head part in place, and advance the `oldHead` and\n                //   `newHead` pointers.\n                //\n                //               oldHead v oldTail\n                //   oldKeys:  [0, 1, -, 3, 4, 5, 6]\n                //   newParts: [0, 2, 1, 4, 3,   ,6] <- heads match: update 3\n                //   newKeys:  [0, 2, 1, 4, 3, 7, 6]    and advance oldHead &\n                //                                      newHead\n                //                  newHead ^  ^ newTail\n                //\n                // * Once the new or old pointers move past each other then all\n                //   we have left is additions (if old list exhausted) or\n                //   removals (if new list exhausted). Those are handled in the\n                //   final while loops at the end.\n                //\n                // * Example below: `oldHead` exceeded `oldTail`, so we're done\n                //   with the main loop.  Create the remaining part and insert\n                //   it at the new head position, and the update is complete.\n                //\n                //                   (oldHead > oldTail)\n                //   oldKeys:  [0, 1, -, 3, 4, 5, 6]\n                //   newParts: [0, 2, 1, 4, 3, 7 ,6] <- create and insert 7\n                //   newKeys:  [0, 2, 1, 4, 3, 7, 6]\n                //                     newHead ^ newTail\n                //\n                // * Note that the order of the if/else clauses is not\n                //   important to the algorithm, as long as the null checks\n                //   come first (to ensure we're always working on valid old\n                //   parts) and that the final else clause comes last (since\n                //   that's where the expensive moves occur). The order of\n                //   remaining clauses is is just a simple guess at which cases\n                //   will be most common.\n                //\n                // * TODO(kschaaf) Note, we could calculate the longest\n                //   increasing subsequence (LIS) of old items in new position,\n                //   and only move those not in the LIS set. However that costs\n                //   O(nlogn) time and adds a bit more code, and only helps\n                //   make rare types of mutations require fewer moves. The\n                //   above handles removes, adds, reversal, swaps, and single\n                //   moves of contiguous items in linear time, in the minimum\n                //   number of moves. As the number of multiple moves where LIS\n                //   might help approaches a random shuffle, the LIS\n                //   optimization becomes less helpful, so it seems not worth\n                //   the code at this point. Could reconsider if a compelling\n                //   case arises.\n\n                while (oldHead <= oldTail && newHead <= newTail) {\n                  if (oldParts[oldHead] === null) {\n                    // `null` means old part at head has already been used\n                    // below; skip\n                    oldHead++;\n                  } else if (oldParts[oldTail] === null) {\n                    // `null` means old part at tail has already been used\n                    // below; skip\n                    oldTail--;\n                  } else if (oldKeys[oldHead] === newKeys[newHead]) {\n                    // Old head matches new head; update in place\n                    newParts[newHead] =\n                        updatePart(oldParts[oldHead]!, newValues[newHead]);\n                    oldHead++;\n                    newHead++;\n                  } else if (oldKeys[oldTail] === newKeys[newTail]) {\n                    // Old tail matches new tail; update in place\n                    newParts[newTail] =\n                        updatePart(oldParts[oldTail]!, newValues[newTail]);\n                    oldTail--;\n                    newTail--;\n                  } else if (oldKeys[oldHead] === newKeys[newTail]) {\n                    // Old head matches new tail; update and move to new tail\n                    newParts[newTail] =\n                        updatePart(oldParts[oldHead]!, newValues[newTail]);\n                    insertPartBefore(\n                        containerPart,\n                        oldParts[oldHead]!,\n                        newParts[newTail + 1]);\n                    oldHead++;\n                    newTail--;\n                  } else if (oldKeys[oldTail] === newKeys[newHead]) {\n                    // Old tail matches new head; update and move to new head\n                    newParts[newHead] =\n                        updatePart(oldParts[oldTail]!, newValues[newHead]);\n                    insertPartBefore(\n                        containerPart, oldParts[oldTail]!, oldParts[oldHead]!);\n                    oldTail--;\n                    newHead++;\n                  } else {\n                    if (newKeyToIndexMap === undefined) {\n                      // Lazily generate key-to-index maps, used for removals &\n                      // moves below\n                      newKeyToIndexMap = generateMap(newKeys, newHead, newTail);\n                      oldKeyToIndexMap = generateMap(oldKeys, oldHead, oldTail);\n                    }\n                    if (!newKeyToIndexMap.has(oldKeys[oldHead])) {\n                      // Old head is no longer in new list; remove\n                      removePart(oldParts[oldHead]!);\n                      oldHead++;\n                    } else if (!newKeyToIndexMap.has(oldKeys[oldTail])) {\n                      // Old tail is no longer in new list; remove\n                      removePart(oldParts[oldTail]!);\n                      oldTail--;\n                    } else {\n                      // Any mismatches at this point are due to additions or\n                      // moves; see if we have an old part we can reuse and move\n                      // into place\n                      const oldIndex = oldKeyToIndexMap.get(newKeys[newHead]);\n                      const oldPart =\n                          oldIndex !== undefined ? oldParts[oldIndex] : null;\n                      if (oldPart === null) {\n                        // No old part for this value; create a new one and\n                        // insert it\n                        const newPart = createAndInsertPart(\n                            containerPart, oldParts[oldHead]!);\n                        updatePart(newPart, newValues[newHead]);\n                        newParts[newHead] = newPart;\n                      } else {\n                        // Reuse old part\n                        newParts[newHead] =\n                            updatePart(oldPart, newValues[newHead]);\n                        insertPartBefore(\n                            containerPart, oldPart, oldParts[oldHead]!);\n                        // This marks the old part as having been used, so that\n                        // it will be skipped in the first two checks above\n                        oldParts[oldIndex as number] = null;\n                      }\n                      newHead++;\n                    }\n                  }\n                }\n                // Add parts for any remaining new values\n                while (newHead <= newTail) {\n                  // For all remaining additions, we insert before last new\n                  // tail, since old pointers are no longer valid\n                  const newPart =\n                      createAndInsertPart(containerPart, newParts[newTail + 1]);\n                  updatePart(newPart, newValues[newHead]);\n                  newParts[newHead++] = newPart;\n                }\n                // Remove any remaining unused old parts\n                while (oldHead <= oldTail) {\n                  const oldPart = oldParts[oldHead++];\n                  if (oldPart !== null) {\n                    removePart(oldPart);\n                  }\n                }\n                // Save order of new parts for next round\n                partListCache.set(containerPart, newParts);\n                keyListCache.set(containerPart, newKeys);\n              };\n            }) as\n    <T>(items: Iterable<T>,\n        keyFnOrTemplate: KeyFn<T>|ItemTemplate<T>,\n        template?: ItemTemplate<T>) => DirectiveFn;\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\nimport {isPrimitive} from '../lib/parts.js';\nimport {directive, NodePart, Part} from '../lit-html.js';\n\ninterface PreviousValue {\n  readonly value: unknown;\n  readonly fragment: DocumentFragment;\n}\n\n// For each part, remember the value that was last rendered to the part by the\n// unsafeHTML directive, and the DocumentFragment that was last set as a value.\n// The DocumentFragment is used as a unique key to check if the last value\n// rendered to the part was with unsafeHTML. If not, we'll always re-render the\n// value passed to unsafeHTML.\nconst previousValues = new WeakMap<NodePart, PreviousValue>();\n\n/**\n * Renders the result as HTML, rather than text.\n *\n * Note, this is unsafe to use with any user-provided input that hasn't been\n * sanitized or escaped, as it may lead to cross-site-scripting\n * vulnerabilities.\n */\nexport const unsafeHTML = directive((value: unknown) => (part: Part): void => {\n  if (!(part instanceof NodePart)) {\n    throw new Error('unsafeHTML can only be used in text bindings');\n  }\n\n  const previousValue = previousValues.get(part);\n\n  if (previousValue !== undefined && isPrimitive(value) &&\n      value === previousValue.value && part.value === previousValue.fragment) {\n    return;\n  }\n\n  const template = document.createElement('template');\n  template.innerHTML = value as string;  // innerHTML casts to string internally\n  const fragment = document.importNode(template.content, true);\n  part.setValue(fragment);\n  previousValues.set(part, {value, fragment});\n});\n","/**\n * @license\n * Copyright (c) 2018 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\nimport {AttributePart, directive, Part} from '../lit-html.js';\n\n/**\n * For AttributeParts, sets the attribute if the value is defined and removes\n * the attribute if the value is undefined.\n *\n * For other part types, this directive is a no-op.\n */\nexport const ifDefined = directive((value: unknown) => (part: Part) => {\n  if (value === undefined && part instanceof AttributePart) {\n    if (value !== part.value) {\n      const name = part.committer.name;\n      part.committer.element.removeAttribute(name);\n    }\n  } else {\n    part.setValue(value);\n  }\n});\n","/*\nCopyright 2018 Adobe. All rights reserved.\nThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License. You may obtain a copy\nof the License at http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software distributed under\nthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\nOF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.\n*/\n\nimport { UpdatingElement } from 'lit-element';\nimport { Reaction } from 'mobx';\n\nconst reaction = Symbol('LitMobxRenderReaction');\nconst cachedRequestUpdate = Symbol('LitMobxRequestUpdate');\nconst cachedPerformUpdate = Symbol('LitMobxPerformUpdate');\n\ntype UpdatingElementConstructor = new (...args: any[]) => UpdatingElement;\n\n/**\n * A class mixin which can be applied to lit-element's\n * [UpdatingElement](https://lit-element.polymer-project.org/api/classes/_lib_updating_element_.updatingelement.html)\n * derived classes. This mixin adds a mobx reaction which tracks the update method of UpdatingElement.\n *\n * Any observables used in the render template of the element will be tracked by a reaction\n * and cause an update of the element upon change.\n *\n * @param constructor the constructor to extend from to add the mobx reaction, must be derived from UpdatingElement.\n */\nexport function MobxReactionUpdate<T extends UpdatingElementConstructor>(\n    constructor: T\n): T {\n    return class MobxReactingElement extends constructor {\n        // NOTE: using a symbol here to avoid potential name collisions in derived classes\n        private [reaction]: Reaction | undefined;\n\n        private [cachedRequestUpdate] = () => this.requestUpdate();\n        private [cachedPerformUpdate] = () => super.performUpdate();\n\n        public connectedCallback(): void {\n            super.connectedCallback();\n            /* istanbul ignore next */\n            const name = this.constructor.name || this.nodeName;\n            this[reaction] = new Reaction(\n                `${name}.update()`,\n                this[cachedRequestUpdate]\n            );\n            if (this.hasUpdated) this.requestUpdate();\n        }\n\n        public disconnectedCallback(): void {\n            super.disconnectedCallback();\n            /* istanbul ignore else */\n            if (this[reaction]) {\n                this[reaction]!.dispose();\n                this[reaction] = undefined;\n            }\n        }\n\n        protected performUpdate(): void {\n            if (this[reaction]) {\n                this[reaction]!.track(this[cachedPerformUpdate]!);\n            } else {\n                super.performUpdate();\n            }\n        }\n    };\n}\n","/*\r\nCopyright 2018 Adobe. All rights reserved.\r\nThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\r\nyou may not use this file except in compliance with the License. You may obtain a copy\r\nof the License at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nUnless required by applicable law or agreed to in writing, software distributed under\r\nthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\r\nOF ANY KIND, either express or implied. See the License for the specific language\r\ngoverning permissions and limitations under the License.\r\n*/\r\n\r\nimport { MobxReactionUpdate } from './lib/mixin.js';\r\nimport { LitElement } from 'lit-element';\r\n\r\nexport * from './lib/mixin.js';\r\n\r\n/**\r\n * A LitElement derived class which uses the MobxReactionUpdate mixin to create a mobx\r\n * reactive implementation of LitElement.\r\n *\r\n * Any observables used in the render template of the element will be tracked by a reaction\r\n * and cause an update of the element upon change.\r\n */\r\nexport class MobxLitElement extends MobxReactionUpdate(LitElement) {}\r\n","const orphanMap = {}\n\nconst resolved = Promise.resolve()\n\nconst orphanResolveQueue = {\n  contexts: new Set(),\n  running: false,\n  add (context) {\n    this.contexts.add(context)\n    if (!this.running) {\n      this.running = true\n      resolved.then(() => {\n        this.contexts.forEach(context => {\n          const orphans = orphanMap[context]\n          orphans.forEach(orphan => {\n            const event = sendContextEvent(orphan, context)\n            if (event.detail.handled) {\n              orphans.delete(orphan)\n            }\n          })\n        })\n        this.contexts.clear()\n        this.running = false\n      })\n    }\n  }\n}\n\nfunction addOrphan (el, name) {\n  const orphans = orphanMap[name] || (orphanMap[name] = new Set())\n  orphans.add(el)\n}\n\nfunction removeOrphan (el, name) {\n  const orphans = orphanMap[name]\n  if (orphans) {\n    orphans.delete(el)\n  }\n}\n\nfunction sendContextEvent (el, name) {\n  const event = new CustomEvent(`context-request-${name}`, {\n    detail: {},\n    bubbles: true,\n    cancelable: true,\n    composed: true\n  })\n  el.dispatchEvent(event)\n  return event\n}\n\nfunction registerProvidedContext (el, name, providedContexts) {\n  const observerMap = el.__wcContextObserverMap || (el.__wcContextObserverMap = {})\n  const observers = observerMap[name] || (observerMap[name] = [])\n  const orphans = orphanMap[name]\n  el.addEventListener(`context-request-${name}`, (event) => {\n    event.stopPropagation()\n    const targetEl = event.target\n    const value = providedContexts[name]\n    const context = targetEl.context\n    const oldValue = context[name]\n    if (oldValue !== value) {\n      context[name] = value\n      if (targetEl.contextChangedCallback) {\n        targetEl.contextChangedCallback(name, oldValue, value)\n      }\n    }\n    observers.push(targetEl)\n    event.detail.handled = true\n  })\n  if (orphans && orphans.size) {\n    orphanResolveQueue.add(name)\n  }\n}\n\nfunction observeContext (el, name) {\n  const event = sendContextEvent(el, name)\n  if (!event.detail.handled) {\n    addOrphan(el, name)\n  }\n}\n\nfunction unobserveContext (el, name) {\n  removeOrphan(el, name)\n}\n\nfunction notifyContextChange (el, name, value) {\n  const observerMap = el.__wcContextObserverMap\n  const observers = observerMap && observerMap[name]\n  if (observers) {\n    observers.forEach(observer => {\n      const context = observer.context\n      const oldValue = context[name]\n      if (oldValue !== value) {\n        context[name] = value\n        if (observer.contextChangedCallback) {\n          observer.contextChangedCallback(name, oldValue, value)\n        }\n      }\n    })\n  }\n}\n\nexport {registerProvidedContext, observeContext, unobserveContext, notifyContextChange}\n","\nimport { observeContext, unobserveContext, registerProvidedContext, notifyContextChange } from './core.js'\n\nconst initializedElements = new WeakSet()\n\nconst withContext = (Base) => {\n  return class extends Base {    \n\n    get context () {\n      return this.__wcContext || (this.__wcContext = {})\n    }\n\n    connectedCallback () {\n      super.connectedCallback()\n      const observedContexts = this.constructor.observedContexts\n      if (observedContexts) {\n        observedContexts.forEach(context => observeContext(this, context))\n      }\n\n      if (!initializedElements.has(this)) {\n        const providedContextConfigs = this.constructor.providedContexts\n        if (providedContextConfigs) {\n          const providedContexts = this.__wcProvidedContexts || (this.__wcProvidedContexts = {})\n          const mappedProps = this.__wcMappedProps || (this.__wcMappedProps = {})\n          Object.keys(providedContextConfigs).forEach(name => {\n            const config = providedContextConfigs[name]\n            const property = typeof config === 'string' ? config : config.property\n            providedContexts[name] = property ? this[property] : config.value\n            if (property) {\n              mappedProps[name] = property\n            }\n            registerProvidedContext(this, name, providedContexts)\n          })\n        }\n        initializedElements.add(this)\n      }\n    }\n\n    disconnectedCallback () {\n      super.disconnectedCallback()\n      const observedContexts = this.constructor.observedContexts\n      if (observedContexts) {\n        observedContexts.forEach(context => unobserveContext(this, context))\n      }\n    }\n\n    shouldUpdate(changedProperties) {\n      const shouldChange = super.shouldUpdate(changedProperties)\n      const mappedProps = this.__wcMappedProps\n      if (mappedProps) {\n        const providedContexts = this.__wcProvidedContexts || (this.__wcProvidedContexts = {})\n        Object.keys(mappedProps).forEach(contextName => {\n          const property = mappedProps[contextName]\n          if (changedProperties.has(property)) {\n            const value = this[property]\n            providedContexts[contextName] = value\n            notifyContextChange(this, contextName, value)            \n          }\n        })        \n      }      \n      return shouldChange\n    }\n  }\n}\n\nexport { withContext }\n","import { LitElement, html } from 'lit-element'\r\nimport { classMap } from 'lit-html/directives/class-map'\r\nimport { styleMap } from 'lit-html/directives/style-map'\r\nimport { repeat } from 'lit-html/directives/repeat'\r\nimport { unsafeHTML } from 'lit-html/directives/unsafe-html'\r\nimport { ifDefined } from 'lit-html/directives/if-defined'\r\nimport { MobxReactionUpdate } from '@adobe/lit-mobx'\r\nimport { withContext } from 'wc-context/lit-element'\r\n\r\nclass Component extends withContext(MobxReactionUpdate(LitElement)) {\r\n  createRenderRoot() {\r\n    return this\r\n  }\r\n}\r\n\r\nexport { Component, html, styleMap, classMap, repeat, unsafeHTML, ifDefined }\r\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n/**\n * @module lit-html\n */\n\nimport {Part} from './part.js';\nimport {AttributeCommitter, BooleanAttributePart, EventPart, NodePart, PropertyCommitter} from './parts.js';\nimport {RenderOptions} from './render-options.js';\nimport {TemplateProcessor} from './template-processor.js';\n\n/**\n * Creates Parts when a template is instantiated.\n */\nexport class DefaultTemplateProcessor implements TemplateProcessor {\n  /**\n   * Create parts for an attribute-position binding, given the event, attribute\n   * name, and string literals.\n   *\n   * @param element The element containing the binding\n   * @param name  The attribute name\n   * @param strings The string literals. There are always at least two strings,\n   *   event for fully-controlled bindings with a single expression.\n   */\n  handleAttributeExpressions(\n      element: Element, name: string, strings: string[],\n      options: RenderOptions): ReadonlyArray<Part> {\n    const prefix = name[0];\n    if (prefix === '.') {\n      const committer = new PropertyCommitter(element, name.slice(1), strings);\n      return committer.parts;\n    }\n    if (prefix === '@') {\n      return [new EventPart(element, name.slice(1), options.eventContext)];\n    }\n    if (prefix === '?') {\n      return [new BooleanAttributePart(element, name.slice(1), strings)];\n    }\n    const committer = new AttributeCommitter(element, name, strings);\n    return committer.parts;\n  }\n  /**\n   * Create parts for a text-position binding.\n   * @param templateFactory\n   */\n  handleTextExpression(options: RenderOptions) {\n    return new NodePart(options);\n  }\n}\n\nexport const defaultTemplateProcessor = new DefaultTemplateProcessor();\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n/**\n *\n * Main lit-html module.\n *\n * Main exports:\n *\n * -  [[html]]\n * -  [[svg]]\n * -  [[render]]\n *\n * @module lit-html\n * @preferred\n */\n\n/**\n * Do not remove this comment; it keeps typedoc from misplacing the module\n * docs.\n */\nimport {defaultTemplateProcessor} from './lib/default-template-processor.js';\nimport {SVGTemplateResult, TemplateResult} from './lib/template-result.js';\n\nexport {DefaultTemplateProcessor, defaultTemplateProcessor} from './lib/default-template-processor.js';\nexport {directive, DirectiveFn, isDirective} from './lib/directive.js';\n// TODO(justinfagnani): remove line when we get NodePart moving methods\nexport {removeNodes, reparentNodes} from './lib/dom.js';\nexport {noChange, nothing, Part} from './lib/part.js';\nexport {AttributeCommitter, AttributePart, BooleanAttributePart, EventPart, isIterable, isPrimitive, NodePart, PropertyCommitter, PropertyPart} from './lib/parts.js';\nexport {RenderOptions} from './lib/render-options.js';\nexport {parts, render} from './lib/render.js';\nexport {templateCaches, templateFactory} from './lib/template-factory.js';\nexport {TemplateInstance} from './lib/template-instance.js';\nexport {TemplateProcessor} from './lib/template-processor.js';\nexport {SVGTemplateResult, TemplateResult} from './lib/template-result.js';\nexport {createMarker, isTemplatePartActive, Template} from './lib/template.js';\n\ndeclare global {\n  interface Window {\n    litHtmlVersions: string[];\n  }\n}\n\n// IMPORTANT: do not change the property name or the assignment expression.\n// This line will be used in regexes to search for lit-html usage.\n// TODO(justinfagnani): inject version number at build time\n(window['litHtmlVersions'] || (window['litHtmlVersions'] = [])).push('1.1.2');\n\n/**\n * Interprets a template literal as an HTML template that can efficiently\n * render to and update a container.\n */\nexport const html = (strings: TemplateStringsArray, ...values: unknown[]) =>\n    new TemplateResult(strings, values, 'html', defaultTemplateProcessor);\n\n/**\n * Interprets a template literal as an SVG template that can efficiently\n * render to and update a container.\n */\nexport const svg = (strings: TemplateStringsArray, ...values: unknown[]) =>\n    new SVGTemplateResult(strings, values, 'svg', defaultTemplateProcessor);\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n/**\n * @module lit-html\n */\n\nimport {TemplateResult} from './template-result.js';\n\n/**\n * An expression marker with embedded unique key to avoid collision with\n * possible text in templates.\n */\nexport const marker = `{{lit-${String(Math.random()).slice(2)}}}`;\n\n/**\n * An expression marker used text-positions, multi-binding attributes, and\n * attributes with markup-like text values.\n */\nexport const nodeMarker = `<!--${marker}-->`;\n\nexport const markerRegex = new RegExp(`${marker}|${nodeMarker}`);\n\n/**\n * Suffix appended to all bound attribute names.\n */\nexport const boundAttributeSuffix = '$lit$';\n\n/**\n * An updateable Template that tracks the location of dynamic parts.\n */\nexport class Template {\n  readonly parts: TemplatePart[] = [];\n  readonly element: HTMLTemplateElement;\n\n  constructor(result: TemplateResult, element: HTMLTemplateElement) {\n    this.element = element;\n\n    const nodesToRemove: Node[] = [];\n    const stack: Node[] = [];\n    // Edge needs all 4 parameters present; IE11 needs 3rd parameter to be null\n    const walker = document.createTreeWalker(\n        element.content,\n        133 /* NodeFilter.SHOW_{ELEMENT|COMMENT|TEXT} */,\n        null,\n        false);\n    // Keeps track of the last index associated with a part. We try to delete\n    // unnecessary nodes, but we never want to associate two different parts\n    // to the same index. They must have a constant node between.\n    let lastPartIndex = 0;\n    let index = -1;\n    let partIndex = 0;\n    const {strings, values: {length}} = result;\n    while (partIndex < length) {\n      const node = walker.nextNode() as Element | Comment | Text | null;\n      if (node === null) {\n        // We've exhausted the content inside a nested template element.\n        // Because we still have parts (the outer for-loop), we know:\n        // - There is a template in the stack\n        // - The walker will find a nextNode outside the template\n        walker.currentNode = stack.pop()!;\n        continue;\n      }\n      index++;\n\n      if (node.nodeType === 1 /* Node.ELEMENT_NODE */) {\n        if ((node as Element).hasAttributes()) {\n          const attributes = (node as Element).attributes;\n          const {length} = attributes;\n          // Per\n          // https://developer.mozilla.org/en-US/docs/Web/API/NamedNodeMap,\n          // attributes are not guaranteed to be returned in document order.\n          // In particular, Edge/IE can return them out of order, so we cannot\n          // assume a correspondence between part index and attribute index.\n          let count = 0;\n          for (let i = 0; i < length; i++) {\n            if (endsWith(attributes[i].name, boundAttributeSuffix)) {\n              count++;\n            }\n          }\n          while (count-- > 0) {\n            // Get the template literal section leading up to the first\n            // expression in this attribute\n            const stringForPart = strings[partIndex];\n            // Find the attribute name\n            const name = lastAttributeNameRegex.exec(stringForPart)![2];\n            // Find the corresponding attribute\n            // All bound attributes have had a suffix added in\n            // TemplateResult#getHTML to opt out of special attribute\n            // handling. To look up the attribute value we also need to add\n            // the suffix.\n            const attributeLookupName =\n                name.toLowerCase() + boundAttributeSuffix;\n            const attributeValue =\n                (node as Element).getAttribute(attributeLookupName)!;\n            (node as Element).removeAttribute(attributeLookupName);\n            const statics = attributeValue.split(markerRegex);\n            this.parts.push({type: 'attribute', index, name, strings: statics});\n            partIndex += statics.length - 1;\n          }\n        }\n        if ((node as Element).tagName === 'TEMPLATE') {\n          stack.push(node);\n          walker.currentNode = (node as HTMLTemplateElement).content;\n        }\n      } else if (node.nodeType === 3 /* Node.TEXT_NODE */) {\n        const data = (node as Text).data;\n        if (data.indexOf(marker) >= 0) {\n          const parent = node.parentNode!;\n          const strings = data.split(markerRegex);\n          const lastIndex = strings.length - 1;\n          // Generate a new text node for each literal section\n          // These nodes are also used as the markers for node parts\n          for (let i = 0; i < lastIndex; i++) {\n            let insert: Node;\n            let s = strings[i];\n            if (s === '') {\n              insert = createMarker();\n            } else {\n              const match = lastAttributeNameRegex.exec(s);\n              if (match !== null && endsWith(match[2], boundAttributeSuffix)) {\n                s = s.slice(0, match.index) + match[1] +\n                    match[2].slice(0, -boundAttributeSuffix.length) + match[3];\n              }\n              insert = document.createTextNode(s);\n            }\n            parent.insertBefore(insert, node);\n            this.parts.push({type: 'node', index: ++index});\n          }\n          // If there's no text, we must insert a comment to mark our place.\n          // Else, we can trust it will stick around after cloning.\n          if (strings[lastIndex] === '') {\n            parent.insertBefore(createMarker(), node);\n            nodesToRemove.push(node);\n          } else {\n            (node as Text).data = strings[lastIndex];\n          }\n          // We have a part for each match found\n          partIndex += lastIndex;\n        }\n      } else if (node.nodeType === 8 /* Node.COMMENT_NODE */) {\n        if ((node as Comment).data === marker) {\n          const parent = node.parentNode!;\n          // Add a new marker node to be the startNode of the Part if any of\n          // the following are true:\n          //  * We don't have a previousSibling\n          //  * The previousSibling is already the start of a previous part\n          if (node.previousSibling === null || index === lastPartIndex) {\n            index++;\n            parent.insertBefore(createMarker(), node);\n          }\n          lastPartIndex = index;\n          this.parts.push({type: 'node', index});\n          // If we don't have a nextSibling, keep this node so we have an end.\n          // Else, we can remove it to save future costs.\n          if (node.nextSibling === null) {\n            (node as Comment).data = '';\n          } else {\n            nodesToRemove.push(node);\n            index--;\n          }\n          partIndex++;\n        } else {\n          let i = -1;\n          while ((i = (node as Comment).data.indexOf(marker, i + 1)) !== -1) {\n            // Comment node has a binding marker inside, make an inactive part\n            // The binding won't work, but subsequent bindings will\n            // TODO (justinfagnani): consider whether it's even worth it to\n            // make bindings in comments work\n            this.parts.push({type: 'node', index: -1});\n            partIndex++;\n          }\n        }\n      }\n    }\n\n    // Remove text binding nodes after the walk to not disturb the TreeWalker\n    for (const n of nodesToRemove) {\n      n.parentNode!.removeChild(n);\n    }\n  }\n}\n\nconst endsWith = (str: string, suffix: string): boolean => {\n  const index = str.length - suffix.length;\n  return index >= 0 && str.slice(index) === suffix;\n};\n\n/**\n * A placeholder for a dynamic expression in an HTML template.\n *\n * There are two built-in part types: AttributePart and NodePart. NodeParts\n * always represent a single dynamic expression, while AttributeParts may\n * represent as many expressions are contained in the attribute.\n *\n * A Template's parts are mutable, so parts can be replaced or modified\n * (possibly to implement different template semantics). The contract is that\n * parts can only be replaced, not removed, added or reordered, and parts must\n * always consume the correct number of values in their `update()` method.\n *\n * TODO(justinfagnani): That requirement is a little fragile. A\n * TemplateInstance could instead be more careful about which values it gives\n * to Part.update().\n */\nexport type TemplatePart = {\n  readonly type: 'node',\n  index: number\n}|{readonly type: 'attribute', index: number, readonly name: string, readonly strings: ReadonlyArray<string>};\n\nexport const isTemplatePartActive = (part: TemplatePart) => part.index !== -1;\n\n// Allows `document.createComment('')` to be renamed for a\n// small manual size-savings.\nexport const createMarker = () => document.createComment('');\n\n/**\n * This regex extracts the attribute name preceding an attribute-position\n * expression. It does this by matching the syntax allowed for attributes\n * against the string literal directly preceding the expression, assuming that\n * the expression is in an attribute-value position.\n *\n * See attributes in the HTML spec:\n * https://www.w3.org/TR/html5/syntax.html#elements-attributes\n *\n * \" \\x09\\x0a\\x0c\\x0d\" are HTML space characters:\n * https://www.w3.org/TR/html5/infrastructure.html#space-characters\n *\n * \"\\0-\\x1F\\x7F-\\x9F\" are Unicode control characters, which includes every\n * space character except \" \".\n *\n * So an attribute is:\n *  * The name: any character except a control character, space character, ('),\n *    (\"), \">\", \"=\", or \"/\"\n *  * Followed by zero or more space characters\n *  * Followed by \"=\"\n *  * Followed by zero or more space characters\n *  * Followed by:\n *    * Any character except space, ('), (\"), \"<\", \">\", \"=\", (`), or\n *    * (\") then any non-(\"), or\n *    * (') then any non-(')\n */\nexport const lastAttributeNameRegex =\n    /([ \\x09\\x0a\\x0c\\x0d])([^\\0-\\x1F\\x7F-\\x9F \"'>=/]+)([ \\x09\\x0a\\x0c\\x0d]*=[ \\x09\\x0a\\x0c\\x0d]*(?:[^ \\x09\\x0a\\x0c\\x0d\"'`<>=]*|\"[^\"]*|'[^']*))$/;\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n/**\n * @module lit-html\n */\n\nimport {isDirective} from './directive.js';\nimport {removeNodes} from './dom.js';\nimport {noChange, nothing, Part} from './part.js';\nimport {RenderOptions} from './render-options.js';\nimport {TemplateInstance} from './template-instance.js';\nimport {TemplateResult} from './template-result.js';\nimport {createMarker} from './template.js';\n\n// https://tc39.github.io/ecma262/#sec-typeof-operator\nexport type Primitive = null|undefined|boolean|number|string|Symbol|bigint;\nexport const isPrimitive = (value: unknown): value is Primitive => {\n  return (\n      value === null ||\n      !(typeof value === 'object' || typeof value === 'function'));\n};\nexport const isIterable = (value: unknown): value is Iterable<unknown> => {\n  return Array.isArray(value) ||\n      // tslint:disable-next-line:no-any\n      !!(value && (value as any)[Symbol.iterator]);\n};\n\n/**\n * Writes attribute values to the DOM for a group of AttributeParts bound to a\n * single attibute. The value is only set once even if there are multiple parts\n * for an attribute.\n */\nexport class AttributeCommitter {\n  readonly element: Element;\n  readonly name: string;\n  readonly strings: ReadonlyArray<string>;\n  readonly parts: ReadonlyArray<AttributePart>;\n  dirty = true;\n\n  constructor(element: Element, name: string, strings: ReadonlyArray<string>) {\n    this.element = element;\n    this.name = name;\n    this.strings = strings;\n    this.parts = [];\n    for (let i = 0; i < strings.length - 1; i++) {\n      (this.parts as AttributePart[])[i] = this._createPart();\n    }\n  }\n\n  /**\n   * Creates a single part. Override this to create a differnt type of part.\n   */\n  protected _createPart(): AttributePart {\n    return new AttributePart(this);\n  }\n\n  protected _getValue(): unknown {\n    const strings = this.strings;\n    const l = strings.length - 1;\n    let text = '';\n\n    for (let i = 0; i < l; i++) {\n      text += strings[i];\n      const part = this.parts[i];\n      if (part !== undefined) {\n        const v = part.value;\n        if (isPrimitive(v) || !isIterable(v)) {\n          text += typeof v === 'string' ? v : String(v);\n        } else {\n          for (const t of v) {\n            text += typeof t === 'string' ? t : String(t);\n          }\n        }\n      }\n    }\n\n    text += strings[l];\n    return text;\n  }\n\n  commit(): void {\n    if (this.dirty) {\n      this.dirty = false;\n      this.element.setAttribute(this.name, this._getValue() as string);\n    }\n  }\n}\n\n/**\n * A Part that controls all or part of an attribute value.\n */\nexport class AttributePart implements Part {\n  readonly committer: AttributeCommitter;\n  value: unknown = undefined;\n\n  constructor(committer: AttributeCommitter) {\n    this.committer = committer;\n  }\n\n  setValue(value: unknown): void {\n    if (value !== noChange && (!isPrimitive(value) || value !== this.value)) {\n      this.value = value;\n      // If the value is a not a directive, dirty the committer so that it'll\n      // call setAttribute. If the value is a directive, it'll dirty the\n      // committer if it calls setValue().\n      if (!isDirective(value)) {\n        this.committer.dirty = true;\n      }\n    }\n  }\n\n  commit() {\n    while (isDirective(this.value)) {\n      const directive = this.value;\n      this.value = noChange;\n      directive(this);\n    }\n    if (this.value === noChange) {\n      return;\n    }\n    this.committer.commit();\n  }\n}\n\n/**\n * A Part that controls a location within a Node tree. Like a Range, NodePart\n * has start and end locations and can set and update the Nodes between those\n * locations.\n *\n * NodeParts support several value types: primitives, Nodes, TemplateResults,\n * as well as arrays and iterables of those types.\n */\nexport class NodePart implements Part {\n  readonly options: RenderOptions;\n  startNode!: Node;\n  endNode!: Node;\n  value: unknown = undefined;\n  private __pendingValue: unknown = undefined;\n\n  constructor(options: RenderOptions) {\n    this.options = options;\n  }\n\n  /**\n   * Appends this part into a container.\n   *\n   * This part must be empty, as its contents are not automatically moved.\n   */\n  appendInto(container: Node) {\n    this.startNode = container.appendChild(createMarker());\n    this.endNode = container.appendChild(createMarker());\n  }\n\n  /**\n   * Inserts this part after the `ref` node (between `ref` and `ref`'s next\n   * sibling). Both `ref` and its next sibling must be static, unchanging nodes\n   * such as those that appear in a literal section of a template.\n   *\n   * This part must be empty, as its contents are not automatically moved.\n   */\n  insertAfterNode(ref: Node) {\n    this.startNode = ref;\n    this.endNode = ref.nextSibling!;\n  }\n\n  /**\n   * Appends this part into a parent part.\n   *\n   * This part must be empty, as its contents are not automatically moved.\n   */\n  appendIntoPart(part: NodePart) {\n    part.__insert(this.startNode = createMarker());\n    part.__insert(this.endNode = createMarker());\n  }\n\n  /**\n   * Inserts this part after the `ref` part.\n   *\n   * This part must be empty, as its contents are not automatically moved.\n   */\n  insertAfterPart(ref: NodePart) {\n    ref.__insert(this.startNode = createMarker());\n    this.endNode = ref.endNode;\n    ref.endNode = this.startNode;\n  }\n\n  setValue(value: unknown): void {\n    this.__pendingValue = value;\n  }\n\n  commit() {\n    while (isDirective(this.__pendingValue)) {\n      const directive = this.__pendingValue;\n      this.__pendingValue = noChange;\n      directive(this);\n    }\n    const value = this.__pendingValue;\n    if (value === noChange) {\n      return;\n    }\n    if (isPrimitive(value)) {\n      if (value !== this.value) {\n        this.__commitText(value);\n      }\n    } else if (value instanceof TemplateResult) {\n      this.__commitTemplateResult(value);\n    } else if (value instanceof Node) {\n      this.__commitNode(value);\n    } else if (isIterable(value)) {\n      this.__commitIterable(value);\n    } else if (value === nothing) {\n      this.value = nothing;\n      this.clear();\n    } else {\n      // Fallback, will render the string representation\n      this.__commitText(value);\n    }\n  }\n\n  private __insert(node: Node) {\n    this.endNode.parentNode!.insertBefore(node, this.endNode);\n  }\n\n  private __commitNode(value: Node): void {\n    if (this.value === value) {\n      return;\n    }\n    this.clear();\n    this.__insert(value);\n    this.value = value;\n  }\n\n  private __commitText(value: unknown): void {\n    const node = this.startNode.nextSibling!;\n    value = value == null ? '' : value;\n    // If `value` isn't already a string, we explicitly convert it here in case\n    // it can't be implicitly converted - i.e. it's a symbol.\n    const valueAsString: string =\n        typeof value === 'string' ? value : String(value);\n    if (node === this.endNode.previousSibling &&\n        node.nodeType === 3 /* Node.TEXT_NODE */) {\n      // If we only have a single text node between the markers, we can just\n      // set its value, rather than replacing it.\n      // TODO(justinfagnani): Can we just check if this.value is primitive?\n      (node as Text).data = valueAsString;\n    } else {\n      this.__commitNode(document.createTextNode(valueAsString));\n    }\n    this.value = value;\n  }\n\n  private __commitTemplateResult(value: TemplateResult): void {\n    const template = this.options.templateFactory(value);\n    if (this.value instanceof TemplateInstance &&\n        this.value.template === template) {\n      this.value.update(value.values);\n    } else {\n      // Make sure we propagate the template processor from the TemplateResult\n      // so that we use its syntax extension, etc. The template factory comes\n      // from the render function options so that it can control template\n      // caching and preprocessing.\n      const instance =\n          new TemplateInstance(template, value.processor, this.options);\n      const fragment = instance._clone();\n      instance.update(value.values);\n      this.__commitNode(fragment);\n      this.value = instance;\n    }\n  }\n\n  private __commitIterable(value: Iterable<unknown>): void {\n    // For an Iterable, we create a new InstancePart per item, then set its\n    // value to the item. This is a little bit of overhead for every item in\n    // an Iterable, but it lets us recurse easily and efficiently update Arrays\n    // of TemplateResults that will be commonly returned from expressions like:\n    // array.map((i) => html`${i}`), by reusing existing TemplateInstances.\n\n    // If _value is an array, then the previous render was of an\n    // iterable and _value will contain the NodeParts from the previous\n    // render. If _value is not an array, clear this part and make a new\n    // array for NodeParts.\n    if (!Array.isArray(this.value)) {\n      this.value = [];\n      this.clear();\n    }\n\n    // Lets us keep track of how many items we stamped so we can clear leftover\n    // items from a previous render\n    const itemParts = this.value as NodePart[];\n    let partIndex = 0;\n    let itemPart: NodePart|undefined;\n\n    for (const item of value) {\n      // Try to reuse an existing part\n      itemPart = itemParts[partIndex];\n\n      // If no existing part, create a new one\n      if (itemPart === undefined) {\n        itemPart = new NodePart(this.options);\n        itemParts.push(itemPart);\n        if (partIndex === 0) {\n          itemPart.appendIntoPart(this);\n        } else {\n          itemPart.insertAfterPart(itemParts[partIndex - 1]);\n        }\n      }\n      itemPart.setValue(item);\n      itemPart.commit();\n      partIndex++;\n    }\n\n    if (partIndex < itemParts.length) {\n      // Truncate the parts array so _value reflects the current state\n      itemParts.length = partIndex;\n      this.clear(itemPart && itemPart.endNode);\n    }\n  }\n\n  clear(startNode: Node = this.startNode) {\n    removeNodes(\n        this.startNode.parentNode!, startNode.nextSibling!, this.endNode);\n  }\n}\n\n/**\n * Implements a boolean attribute, roughly as defined in the HTML\n * specification.\n *\n * If the value is truthy, then the attribute is present with a value of\n * ''. If the value is falsey, the attribute is removed.\n */\nexport class BooleanAttributePart implements Part {\n  readonly element: Element;\n  readonly name: string;\n  readonly strings: ReadonlyArray<string>;\n  value: unknown = undefined;\n  private __pendingValue: unknown = undefined;\n\n  constructor(element: Element, name: string, strings: ReadonlyArray<string>) {\n    if (strings.length !== 2 || strings[0] !== '' || strings[1] !== '') {\n      throw new Error(\n          'Boolean attributes can only contain a single expression');\n    }\n    this.element = element;\n    this.name = name;\n    this.strings = strings;\n  }\n\n  setValue(value: unknown): void {\n    this.__pendingValue = value;\n  }\n\n  commit() {\n    while (isDirective(this.__pendingValue)) {\n      const directive = this.__pendingValue;\n      this.__pendingValue = noChange;\n      directive(this);\n    }\n    if (this.__pendingValue === noChange) {\n      return;\n    }\n    const value = !!this.__pendingValue;\n    if (this.value !== value) {\n      if (value) {\n        this.element.setAttribute(this.name, '');\n      } else {\n        this.element.removeAttribute(this.name);\n      }\n      this.value = value;\n    }\n    this.__pendingValue = noChange;\n  }\n}\n\n/**\n * Sets attribute values for PropertyParts, so that the value is only set once\n * even if there are multiple parts for a property.\n *\n * If an expression controls the whole property value, then the value is simply\n * assigned to the property under control. If there are string literals or\n * multiple expressions, then the strings are expressions are interpolated into\n * a string first.\n */\nexport class PropertyCommitter extends AttributeCommitter {\n  readonly single: boolean;\n\n  constructor(element: Element, name: string, strings: ReadonlyArray<string>) {\n    super(element, name, strings);\n    this.single =\n        (strings.length === 2 && strings[0] === '' && strings[1] === '');\n  }\n\n  protected _createPart(): PropertyPart {\n    return new PropertyPart(this);\n  }\n\n  protected _getValue() {\n    if (this.single) {\n      return this.parts[0].value;\n    }\n    return super._getValue();\n  }\n\n  commit(): void {\n    if (this.dirty) {\n      this.dirty = false;\n      // tslint:disable-next-line:no-any\n      (this.element as any)[this.name] = this._getValue();\n    }\n  }\n}\n\nexport class PropertyPart extends AttributePart {}\n\n// Detect event listener options support. If the `capture` property is read\n// from the options object, then options are supported. If not, then the thrid\n// argument to add/removeEventListener is interpreted as the boolean capture\n// value so we should only pass the `capture` property.\nlet eventOptionsSupported = false;\n\ntry {\n  const options = {\n    get capture() {\n      eventOptionsSupported = true;\n      return false;\n    }\n  };\n  // tslint:disable-next-line:no-any\n  window.addEventListener('test', options as any, options);\n  // tslint:disable-next-line:no-any\n  window.removeEventListener('test', options as any, options);\n} catch (_e) {\n}\n\n\ntype EventHandlerWithOptions =\n    EventListenerOrEventListenerObject&Partial<AddEventListenerOptions>;\nexport class EventPart implements Part {\n  readonly element: Element;\n  readonly eventName: string;\n  readonly eventContext?: EventTarget;\n  value: undefined|EventHandlerWithOptions = undefined;\n  private __options?: AddEventListenerOptions;\n  private __pendingValue: undefined|EventHandlerWithOptions = undefined;\n  private readonly __boundHandleEvent: (event: Event) => void;\n\n  constructor(element: Element, eventName: string, eventContext?: EventTarget) {\n    this.element = element;\n    this.eventName = eventName;\n    this.eventContext = eventContext;\n    this.__boundHandleEvent = (e) => this.handleEvent(e);\n  }\n\n  setValue(value: undefined|EventHandlerWithOptions): void {\n    this.__pendingValue = value;\n  }\n\n  commit() {\n    while (isDirective(this.__pendingValue)) {\n      const directive = this.__pendingValue;\n      this.__pendingValue = noChange as EventHandlerWithOptions;\n      directive(this);\n    }\n    if (this.__pendingValue === noChange) {\n      return;\n    }\n\n    const newListener = this.__pendingValue;\n    const oldListener = this.value;\n    const shouldRemoveListener = newListener == null ||\n        oldListener != null &&\n            (newListener.capture !== oldListener.capture ||\n             newListener.once !== oldListener.once ||\n             newListener.passive !== oldListener.passive);\n    const shouldAddListener =\n        newListener != null && (oldListener == null || shouldRemoveListener);\n\n    if (shouldRemoveListener) {\n      this.element.removeEventListener(\n          this.eventName, this.__boundHandleEvent, this.__options);\n    }\n    if (shouldAddListener) {\n      this.__options = getOptions(newListener);\n      this.element.addEventListener(\n          this.eventName, this.__boundHandleEvent, this.__options);\n    }\n    this.value = newListener;\n    this.__pendingValue = noChange as EventHandlerWithOptions;\n  }\n\n  handleEvent(event: Event) {\n    if (typeof this.value === 'function') {\n      this.value.call(this.eventContext || this.element, event);\n    } else {\n      (this.value as EventListenerObject).handleEvent(event);\n    }\n  }\n}\n\n// We copy options because of the inconsistent behavior of browsers when reading\n// the third argument of add/removeEventListener. IE11 doesn't support options\n// at all. Chrome 41 only reads `capture` if the argument is an object.\nconst getOptions = (o: AddEventListenerOptions|undefined) => o &&\n    (eventOptionsSupported ?\n         {capture: o.capture, passive: o.passive, once: o.once} :\n         o.capture as AddEventListenerOptions);\n","/**\n * @license\n * Copyright (c) 2018 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n/**\n * @module lit-html\n */\n\n/**\n * The Part interface represents a dynamic part of a template instance rendered\n * by lit-html.\n */\nexport interface Part {\n  readonly value: unknown;\n\n  /**\n   * Sets the current part value, but does not write it to the DOM.\n   * @param value The value that will be committed.\n   */\n  setValue(value: unknown): void;\n\n  /**\n   * Commits the current part value, causing it to actually be written to the\n   * DOM.\n   *\n   * Directives are run at the start of `commit`, so that if they call\n   * `part.setValue(...)` synchronously that value will be used in the current\n   * commit, and there's no need to call `part.commit()` within the directive.\n   * If directives set a part value asynchronously, then they must call\n   * `part.commit()` manually.\n   */\n  commit(): void;\n}\n\n/**\n * A sentinel value that signals that a value was handled by a directive and\n * should not be written to the DOM.\n */\nexport const noChange = {};\n\n/**\n * A sentinel value that signals a NodePart to fully clear its content.\n */\nexport const nothing = {};\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n/**\n * @module lit-html\n */\n\ninterface MaybePolyfilledCe extends CustomElementRegistry {\n  readonly polyfillWrapFlushCallback?: object;\n}\n\n/**\n * True if the custom elements polyfill is in use.\n */\nexport const isCEPolyfill = window.customElements !== undefined &&\n    (window.customElements as MaybePolyfilledCe).polyfillWrapFlushCallback !==\n        undefined;\n\n/**\n * Reparents nodes, starting from `start` (inclusive) to `end` (exclusive),\n * into another container (could be the same container), before `before`. If\n * `before` is null, it appends the nodes to the container.\n */\nexport const reparentNodes =\n    (container: Node,\n     start: Node|null,\n     end: Node|null = null,\n     before: Node|null = null): void => {\n      while (start !== end) {\n        const n = start!.nextSibling;\n        container.insertBefore(start!, before);\n        start = n;\n      }\n    };\n\n/**\n * Removes nodes, starting from `start` (inclusive) to `end` (exclusive), from\n * `container`.\n */\nexport const removeNodes =\n    (container: Node, start: Node|null, end: Node|null = null): void => {\n      while (start !== end) {\n        const n = start!.nextSibling;\n        container.removeChild(start!);\n        start = n;\n      }\n    };\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n/**\n * @module lit-html\n */\n\nimport {TemplateResult} from './template-result.js';\nimport {marker, Template} from './template.js';\n\n/**\n * A function type that creates a Template from a TemplateResult.\n *\n * This is a hook into the template-creation process for rendering that\n * requires some modification of templates before they're used, like ShadyCSS,\n * which must add classes to elements and remove styles.\n *\n * Templates should be cached as aggressively as possible, so that many\n * TemplateResults produced from the same expression only do the work of\n * creating the Template the first time.\n *\n * Templates are usually cached by TemplateResult.strings and\n * TemplateResult.type, but may be cached by other keys if this function\n * modifies the template.\n *\n * Note that currently TemplateFactories must not add, remove, or reorder\n * expressions, because there is no way to describe such a modification\n * to render() so that values are interpolated to the correct place in the\n * template instances.\n */\nexport type TemplateFactory = (result: TemplateResult) => Template;\n\n/**\n * The default TemplateFactory which caches Templates keyed on\n * result.type and result.strings.\n */\nexport function templateFactory(result: TemplateResult) {\n  let templateCache = templateCaches.get(result.type);\n  if (templateCache === undefined) {\n    templateCache = {\n      stringsArray: new WeakMap<TemplateStringsArray, Template>(),\n      keyString: new Map<string, Template>()\n    };\n    templateCaches.set(result.type, templateCache);\n  }\n\n  let template = templateCache.stringsArray.get(result.strings);\n  if (template !== undefined) {\n    return template;\n  }\n\n  // If the TemplateStringsArray is new, generate a key from the strings\n  // This key is shared between all templates with identical content\n  const key = result.strings.join(marker);\n\n  // Check if we already have a Template for this key\n  template = templateCache.keyString.get(key);\n  if (template === undefined) {\n    // If we have not seen this key before, create a new Template\n    template = new Template(result, result.getTemplateElement());\n    // Cache the Template for this key\n    templateCache.keyString.set(key, template);\n  }\n\n  // Cache all future queries for this TemplateStringsArray\n  templateCache.stringsArray.set(result.strings, template);\n  return template;\n}\n\n/**\n * The first argument to JS template tags retain identity across multiple\n * calls to a tag for the same literal, so we can cache work done per literal\n * in a Map.\n *\n * Safari currently has a bug which occasionally breaks this behaviour, so we\n * need to cache the Template at two levels. We first cache the\n * TemplateStringsArray, and if that fails, we cache a key constructed by\n * joining the strings array.\n */\nexport type templateCache = {\n  readonly stringsArray: WeakMap<TemplateStringsArray, Template>; //\n  readonly keyString: Map<string, Template>;\n};\n\nexport const templateCaches = new Map<string, templateCache>();\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n/**\n * @module lit-html\n */\n\nimport {Part} from './part.js';\n\nconst directives = new WeakMap<object, true>();\n\n// tslint:disable-next-line:no-any\nexport type DirectiveFactory = (...args: any[]) => object;\n\nexport type DirectiveFn = (part: Part) => void;\n\n/**\n * Brands a function as a directive factory function so that lit-html will call\n * the function during template rendering, rather than passing as a value.\n *\n * A _directive_ is a function that takes a Part as an argument. It has the\n * signature: `(part: Part) => void`.\n *\n * A directive _factory_ is a function that takes arguments for data and\n * configuration and returns a directive. Users of directive usually refer to\n * the directive factory as the directive. For example, \"The repeat directive\".\n *\n * Usually a template author will invoke a directive factory in their template\n * with relevant arguments, which will then return a directive function.\n *\n * Here's an example of using the `repeat()` directive factory that takes an\n * array and a function to render an item:\n *\n * ```js\n * html`<ul><${repeat(items, (item) => html`<li>${item}</li>`)}</ul>`\n * ```\n *\n * When `repeat` is invoked, it returns a directive function that closes over\n * `items` and the template function. When the outer template is rendered, the\n * return directive function is called with the Part for the expression.\n * `repeat` then performs it's custom logic to render multiple items.\n *\n * @param f The directive factory function. Must be a function that returns a\n * function of the signature `(part: Part) => void`. The returned function will\n * be called with the part object.\n *\n * @example\n *\n * import {directive, html} from 'lit-html';\n *\n * const immutable = directive((v) => (part) => {\n *   if (part.value !== v) {\n *     part.setValue(v)\n *   }\n * });\n */\nexport const directive = <F extends DirectiveFactory>(f: F): F =>\n    ((...args: unknown[]) => {\n      const d = f(...args);\n      directives.set(d, true);\n      return d;\n    }) as F;\n\nexport const isDirective = (o: unknown): o is DirectiveFn => {\n  return typeof o === 'function' && directives.has(o);\n};\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n/**\n * @module lit-html\n */\n\nimport {removeNodes} from './dom.js';\nimport {NodePart} from './parts.js';\nimport {RenderOptions} from './render-options.js';\nimport {templateFactory} from './template-factory.js';\n\nexport const parts = new WeakMap<Node, NodePart>();\n\n/**\n * Renders a template result or other value to a container.\n *\n * To update a container with new values, reevaluate the template literal and\n * call `render` with the new result.\n *\n * @param result Any value renderable by NodePart - typically a TemplateResult\n *     created by evaluating a template tag like `html` or `svg`.\n * @param container A DOM parent to render to. The entire contents are either\n *     replaced, or efficiently updated if the same result type was previous\n *     rendered there.\n * @param options RenderOptions for the entire render tree rendered to this\n *     container. Render options must *not* change between renders to the same\n *     container, as those changes will not effect previously rendered DOM.\n */\nexport const render =\n    (result: unknown,\n     container: Element|DocumentFragment,\n     options?: Partial<RenderOptions>) => {\n      let part = parts.get(container);\n      if (part === undefined) {\n        removeNodes(container, container.firstChild);\n        parts.set(container, part = new NodePart({\n                               templateFactory,\n                               ...options,\n                             }));\n        part.appendInto(container);\n      }\n      part.setValue(result);\n      part.commit();\n    };\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n/**\n * @module lit-html\n */\n\nimport {reparentNodes} from './dom.js';\nimport {TemplateProcessor} from './template-processor.js';\nimport {boundAttributeSuffix, lastAttributeNameRegex, marker, nodeMarker} from './template.js';\n\nconst commentMarker = ` ${marker} `;\n\n/**\n * The return type of `html`, which holds a Template and the values from\n * interpolated expressions.\n */\nexport class TemplateResult {\n  readonly strings: TemplateStringsArray;\n  readonly values: ReadonlyArray<unknown>;\n  readonly type: string;\n  readonly processor: TemplateProcessor;\n\n  constructor(\n      strings: TemplateStringsArray, values: ReadonlyArray<unknown>,\n      type: string, processor: TemplateProcessor) {\n    this.strings = strings;\n    this.values = values;\n    this.type = type;\n    this.processor = processor;\n  }\n\n  /**\n   * Returns a string of HTML used to create a `<template>` element.\n   */\n  getHTML(): string {\n    const l = this.strings.length - 1;\n    let html = '';\n    let isCommentBinding = false;\n\n    for (let i = 0; i < l; i++) {\n      const s = this.strings[i];\n      // For each binding we want to determine the kind of marker to insert\n      // into the template source before it's parsed by the browser's HTML\n      // parser. The marker type is based on whether the expression is in an\n      // attribute, text, or comment poisition.\n      //   * For node-position bindings we insert a comment with the marker\n      //     sentinel as its text content, like <!--{{lit-guid}}-->.\n      //   * For attribute bindings we insert just the marker sentinel for the\n      //     first binding, so that we support unquoted attribute bindings.\n      //     Subsequent bindings can use a comment marker because multi-binding\n      //     attributes must be quoted.\n      //   * For comment bindings we insert just the marker sentinel so we don't\n      //     close the comment.\n      //\n      // The following code scans the template source, but is *not* an HTML\n      // parser. We don't need to track the tree structure of the HTML, only\n      // whether a binding is inside a comment, and if not, if it appears to be\n      // the first binding in an attribute.\n      const commentOpen = s.lastIndexOf('<!--');\n      // We're in comment position if we have a comment open with no following\n      // comment close. Because <-- can appear in an attribute value there can\n      // be false positives.\n      isCommentBinding = (commentOpen > -1 || isCommentBinding) &&\n          s.indexOf('-->', commentOpen + 1) === -1;\n      // Check to see if we have an attribute-like sequence preceeding the\n      // expression. This can match \"name=value\" like structures in text,\n      // comments, and attribute values, so there can be false-positives.\n      const attributeMatch = lastAttributeNameRegex.exec(s);\n      if (attributeMatch === null) {\n        // We're only in this branch if we don't have a attribute-like\n        // preceeding sequence. For comments, this guards against unusual\n        // attribute values like <div foo=\"<!--${'bar'}\">. Cases like\n        // <!-- foo=${'bar'}--> are handled correctly in the attribute branch\n        // below.\n        html += s + (isCommentBinding ? commentMarker : nodeMarker);\n      } else {\n        // For attributes we use just a marker sentinel, and also append a\n        // $lit$ suffix to the name to opt-out of attribute-specific parsing\n        // that IE and Edge do for style and certain SVG attributes.\n        html += s.substr(0, attributeMatch.index) + attributeMatch[1] +\n            attributeMatch[2] + boundAttributeSuffix + attributeMatch[3] +\n            marker;\n      }\n    }\n    html += this.strings[l];\n    return html;\n  }\n\n  getTemplateElement(): HTMLTemplateElement {\n    const template = document.createElement('template');\n    template.innerHTML = this.getHTML();\n    return template;\n  }\n}\n\n/**\n * A TemplateResult for SVG fragments.\n *\n * This class wraps HTML in an `<svg>` tag in order to parse its contents in the\n * SVG namespace, then modifies the template to remove the `<svg>` tag so that\n * clones only container the original fragment.\n */\nexport class SVGTemplateResult extends TemplateResult {\n  getHTML(): string {\n    return `<svg>${super.getHTML()}</svg>`;\n  }\n\n  getTemplateElement(): HTMLTemplateElement {\n    const template = super.getTemplateElement();\n    const content = template.content;\n    const svgElement = content.firstChild!;\n    content.removeChild(svgElement);\n    reparentNodes(content, svgElement.firstChild);\n    return template;\n  }\n}\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n/**\n * @module lit-html\n */\n\nimport {isCEPolyfill} from './dom.js';\nimport {Part} from './part.js';\nimport {RenderOptions} from './render-options.js';\nimport {TemplateProcessor} from './template-processor.js';\nimport {isTemplatePartActive, Template, TemplatePart} from './template.js';\n\n/**\n * An instance of a `Template` that can be attached to the DOM and updated\n * with new values.\n */\nexport class TemplateInstance {\n  private readonly __parts: Array<Part|undefined> = [];\n  readonly processor: TemplateProcessor;\n  readonly options: RenderOptions;\n  readonly template: Template;\n\n  constructor(\n      template: Template, processor: TemplateProcessor,\n      options: RenderOptions) {\n    this.template = template;\n    this.processor = processor;\n    this.options = options;\n  }\n\n  update(values: ReadonlyArray<unknown>) {\n    let i = 0;\n    for (const part of this.__parts) {\n      if (part !== undefined) {\n        part.setValue(values[i]);\n      }\n      i++;\n    }\n    for (const part of this.__parts) {\n      if (part !== undefined) {\n        part.commit();\n      }\n    }\n  }\n\n  _clone(): DocumentFragment {\n    // There are a number of steps in the lifecycle of a template instance's\n    // DOM fragment:\n    //  1. Clone - create the instance fragment\n    //  2. Adopt - adopt into the main document\n    //  3. Process - find part markers and create parts\n    //  4. Upgrade - upgrade custom elements\n    //  5. Update - set node, attribute, property, etc., values\n    //  6. Connect - connect to the document. Optional and outside of this\n    //     method.\n    //\n    // We have a few constraints on the ordering of these steps:\n    //  * We need to upgrade before updating, so that property values will pass\n    //    through any property setters.\n    //  * We would like to process before upgrading so that we're sure that the\n    //    cloned fragment is inert and not disturbed by self-modifying DOM.\n    //  * We want custom elements to upgrade even in disconnected fragments.\n    //\n    // Given these constraints, with full custom elements support we would\n    // prefer the order: Clone, Process, Adopt, Upgrade, Update, Connect\n    //\n    // But Safari dooes not implement CustomElementRegistry#upgrade, so we\n    // can not implement that order and still have upgrade-before-update and\n    // upgrade disconnected fragments. So we instead sacrifice the\n    // process-before-upgrade constraint, since in Custom Elements v1 elements\n    // must not modify their light DOM in the constructor. We still have issues\n    // when co-existing with CEv0 elements like Polymer 1, and with polyfills\n    // that don't strictly adhere to the no-modification rule because shadow\n    // DOM, which may be created in the constructor, is emulated by being placed\n    // in the light DOM.\n    //\n    // The resulting order is on native is: Clone, Adopt, Upgrade, Process,\n    // Update, Connect. document.importNode() performs Clone, Adopt, and Upgrade\n    // in one step.\n    //\n    // The Custom Elements v1 polyfill supports upgrade(), so the order when\n    // polyfilled is the more ideal: Clone, Process, Adopt, Upgrade, Update,\n    // Connect.\n\n    const fragment = isCEPolyfill ?\n        this.template.element.content.cloneNode(true) as DocumentFragment :\n        document.importNode(this.template.element.content, true);\n\n    const stack: Node[] = [];\n    const parts = this.template.parts;\n    // Edge needs all 4 parameters present; IE11 needs 3rd parameter to be null\n    const walker = document.createTreeWalker(\n        fragment,\n        133 /* NodeFilter.SHOW_{ELEMENT|COMMENT|TEXT} */,\n        null,\n        false);\n    let partIndex = 0;\n    let nodeIndex = 0;\n    let part: TemplatePart;\n    let node = walker.nextNode();\n    // Loop through all the nodes and parts of a template\n    while (partIndex < parts.length) {\n      part = parts[partIndex];\n      if (!isTemplatePartActive(part)) {\n        this.__parts.push(undefined);\n        partIndex++;\n        continue;\n      }\n\n      // Progress the tree walker until we find our next part's node.\n      // Note that multiple parts may share the same node (attribute parts\n      // on a single element), so this loop may not run at all.\n      while (nodeIndex < part.index) {\n        nodeIndex++;\n        if (node!.nodeName === 'TEMPLATE') {\n          stack.push(node!);\n          walker.currentNode = (node as HTMLTemplateElement).content;\n        }\n        if ((node = walker.nextNode()) === null) {\n          // We've exhausted the content inside a nested template element.\n          // Because we still have parts (the outer for-loop), we know:\n          // - There is a template in the stack\n          // - The walker will find a nextNode outside the template\n          walker.currentNode = stack.pop()!;\n          node = walker.nextNode();\n        }\n      }\n\n      // We've arrived at our part's node.\n      if (part.type === 'node') {\n        const part = this.processor.handleTextExpression(this.options);\n        part.insertAfterNode(node!.previousSibling!);\n        this.__parts.push(part);\n      } else {\n        this.__parts.push(...this.processor.handleAttributeExpressions(\n            node as Element, part.name, part.strings, this.options));\n      }\n      partIndex++;\n    }\n\n    if (isCEPolyfill) {\n      document.adoptNode(fragment);\n      customElements.upgrade(fragment);\n    }\n    return fragment;\n  }\n}\n","/**\n * Root reference for iframes.\n */\n\nlet root;\nif (typeof window !== 'undefined') {\n  // Browser window\n  root = window;\n} else if (typeof self === 'undefined') {\n  // Other environments\n  console.warn(\n    'Using browser-only version of superagent in non-browser environment'\n  );\n  root = this;\n} else {\n  // Web Worker\n  root = self;\n}\n\nconst Emitter = require('component-emitter');\nconst safeStringify = require('fast-safe-stringify');\nconst RequestBase = require('./request-base');\nconst isObject = require('./is-object');\nconst ResponseBase = require('./response-base');\nconst Agent = require('./agent-base');\n\n/**\n * Noop.\n */\n\nfunction noop() {}\n\n/**\n * Expose `request`.\n */\n\nmodule.exports = function(method, url) {\n  // callback\n  if (typeof url === 'function') {\n    return new exports.Request('GET', method).end(url);\n  }\n\n  // url first\n  if (arguments.length === 1) {\n    return new exports.Request('GET', method);\n  }\n\n  return new exports.Request(method, url);\n};\n\nexports = module.exports;\n\nconst request = exports;\n\nexports.Request = Request;\n\n/**\n * Determine XHR.\n */\n\nrequest.getXHR = () => {\n  if (\n    root.XMLHttpRequest &&\n    (!root.location ||\n      root.location.protocol !== 'file:' ||\n      !root.ActiveXObject)\n  ) {\n    return new XMLHttpRequest();\n  }\n\n  try {\n    return new ActiveXObject('Microsoft.XMLHTTP');\n  } catch {}\n\n  try {\n    return new ActiveXObject('Msxml2.XMLHTTP.6.0');\n  } catch {}\n\n  try {\n    return new ActiveXObject('Msxml2.XMLHTTP.3.0');\n  } catch {}\n\n  try {\n    return new ActiveXObject('Msxml2.XMLHTTP');\n  } catch {}\n\n  throw new Error('Browser-only version of superagent could not find XHR');\n};\n\n/**\n * Removes leading and trailing whitespace, added to support IE.\n *\n * @param {String} s\n * @return {String}\n * @api private\n */\n\nconst trim = ''.trim ? s => s.trim() : s => s.replace(/(^\\s*|\\s*$)/g, '');\n\n/**\n * Serialize the given `obj`.\n *\n * @param {Object} obj\n * @return {String}\n * @api private\n */\n\nfunction serialize(obj) {\n  if (!isObject(obj)) return obj;\n  const pairs = [];\n  for (const key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key))\n      pushEncodedKeyValuePair(pairs, key, obj[key]);\n  }\n\n  return pairs.join('&');\n}\n\n/**\n * Helps 'serialize' with serializing arrays.\n * Mutates the pairs array.\n *\n * @param {Array} pairs\n * @param {String} key\n * @param {Mixed} val\n */\n\nfunction pushEncodedKeyValuePair(pairs, key, val) {\n  if (val === undefined) return;\n  if (val === null) {\n    pairs.push(encodeURIComponent(key));\n    return;\n  }\n\n  if (Array.isArray(val)) {\n    val.forEach(v => {\n      pushEncodedKeyValuePair(pairs, key, v);\n    });\n  } else if (isObject(val)) {\n    for (const subkey in val) {\n      if (Object.prototype.hasOwnProperty.call(val, subkey))\n        pushEncodedKeyValuePair(pairs, `${key}[${subkey}]`, val[subkey]);\n    }\n  } else {\n    pairs.push(encodeURIComponent(key) + '=' + encodeURIComponent(val));\n  }\n}\n\n/**\n * Expose serialization method.\n */\n\nrequest.serializeObject = serialize;\n\n/**\n * Parse the given x-www-form-urlencoded `str`.\n *\n * @param {String} str\n * @return {Object}\n * @api private\n */\n\nfunction parseString(str) {\n  const obj = {};\n  const pairs = str.split('&');\n  let pair;\n  let pos;\n\n  for (let i = 0, len = pairs.length; i < len; ++i) {\n    pair = pairs[i];\n    pos = pair.indexOf('=');\n    if (pos === -1) {\n      obj[decodeURIComponent(pair)] = '';\n    } else {\n      obj[decodeURIComponent(pair.slice(0, pos))] = decodeURIComponent(\n        pair.slice(pos + 1)\n      );\n    }\n  }\n\n  return obj;\n}\n\n/**\n * Expose parser.\n */\n\nrequest.parseString = parseString;\n\n/**\n * Default MIME type map.\n *\n *     superagent.types.xml = 'application/xml';\n *\n */\n\nrequest.types = {\n  html: 'text/html',\n  json: 'application/json',\n  xml: 'text/xml',\n  urlencoded: 'application/x-www-form-urlencoded',\n  form: 'application/x-www-form-urlencoded',\n  'form-data': 'application/x-www-form-urlencoded'\n};\n\n/**\n * Default serialization map.\n *\n *     superagent.serialize['application/xml'] = function(obj){\n *       return 'generated xml here';\n *     };\n *\n */\n\nrequest.serialize = {\n  'application/x-www-form-urlencoded': serialize,\n  'application/json': safeStringify\n};\n\n/**\n * Default parsers.\n *\n *     superagent.parse['application/xml'] = function(str){\n *       return { object parsed from str };\n *     };\n *\n */\n\nrequest.parse = {\n  'application/x-www-form-urlencoded': parseString,\n  'application/json': JSON.parse\n};\n\n/**\n * Parse the given header `str` into\n * an object containing the mapped fields.\n *\n * @param {String} str\n * @return {Object}\n * @api private\n */\n\nfunction parseHeader(str) {\n  const lines = str.split(/\\r?\\n/);\n  const fields = {};\n  let index;\n  let line;\n  let field;\n  let val;\n\n  for (let i = 0, len = lines.length; i < len; ++i) {\n    line = lines[i];\n    index = line.indexOf(':');\n    if (index === -1) {\n      // could be empty line, just skip it\n      continue;\n    }\n\n    field = line.slice(0, index).toLowerCase();\n    val = trim(line.slice(index + 1));\n    fields[field] = val;\n  }\n\n  return fields;\n}\n\n/**\n * Check if `mime` is json or has +json structured syntax suffix.\n *\n * @param {String} mime\n * @return {Boolean}\n * @api private\n */\n\nfunction isJSON(mime) {\n  // should match /json or +json\n  // but not /json-seq\n  return /[/+]json($|[^-\\w])/.test(mime);\n}\n\n/**\n * Initialize a new `Response` with the given `xhr`.\n *\n *  - set flags (.ok, .error, etc)\n *  - parse header\n *\n * Examples:\n *\n *  Aliasing `superagent` as `request` is nice:\n *\n *      request = superagent;\n *\n *  We can use the promise-like API, or pass callbacks:\n *\n *      request.get('/').end(function(res){});\n *      request.get('/', function(res){});\n *\n *  Sending data can be chained:\n *\n *      request\n *        .post('/user')\n *        .send({ name: 'tj' })\n *        .end(function(res){});\n *\n *  Or passed to `.send()`:\n *\n *      request\n *        .post('/user')\n *        .send({ name: 'tj' }, function(res){});\n *\n *  Or passed to `.post()`:\n *\n *      request\n *        .post('/user', { name: 'tj' })\n *        .end(function(res){});\n *\n * Or further reduced to a single call for simple cases:\n *\n *      request\n *        .post('/user', { name: 'tj' }, function(res){});\n *\n * @param {XMLHTTPRequest} xhr\n * @param {Object} options\n * @api private\n */\n\nfunction Response(req) {\n  this.req = req;\n  this.xhr = this.req.xhr;\n  // responseText is accessible only if responseType is '' or 'text' and on older browsers\n  this.text =\n    (this.req.method !== 'HEAD' &&\n      (this.xhr.responseType === '' || this.xhr.responseType === 'text')) ||\n    typeof this.xhr.responseType === 'undefined'\n      ? this.xhr.responseText\n      : null;\n  this.statusText = this.req.xhr.statusText;\n  let { status } = this.xhr;\n  // handle IE9 bug: http://stackoverflow.com/questions/10046972/msie-returns-status-code-of-1223-for-ajax-request\n  if (status === 1223) {\n    status = 204;\n  }\n\n  this._setStatusProperties(status);\n  this.headers = parseHeader(this.xhr.getAllResponseHeaders());\n  this.header = this.headers;\n  // getAllResponseHeaders sometimes falsely returns \"\" for CORS requests, but\n  // getResponseHeader still works. so we get content-type even if getting\n  // other headers fails.\n  this.header['content-type'] = this.xhr.getResponseHeader('content-type');\n  this._setHeaderProperties(this.header);\n\n  if (this.text === null && req._responseType) {\n    this.body = this.xhr.response;\n  } else {\n    this.body =\n      this.req.method === 'HEAD'\n        ? null\n        : this._parseBody(this.text ? this.text : this.xhr.response);\n  }\n}\n\n// eslint-disable-next-line new-cap\nResponseBase(Response.prototype);\n\n/**\n * Parse the given body `str`.\n *\n * Used for auto-parsing of bodies. Parsers\n * are defined on the `superagent.parse` object.\n *\n * @param {String} str\n * @return {Mixed}\n * @api private\n */\n\nResponse.prototype._parseBody = function(str) {\n  let parse = request.parse[this.type];\n  if (this.req._parser) {\n    return this.req._parser(this, str);\n  }\n\n  if (!parse && isJSON(this.type)) {\n    parse = request.parse['application/json'];\n  }\n\n  return parse && str && (str.length > 0 || str instanceof Object)\n    ? parse(str)\n    : null;\n};\n\n/**\n * Return an `Error` representative of this response.\n *\n * @return {Error}\n * @api public\n */\n\nResponse.prototype.toError = function() {\n  const { req } = this;\n  const { method } = req;\n  const { url } = req;\n\n  const msg = `cannot ${method} ${url} (${this.status})`;\n  const err = new Error(msg);\n  err.status = this.status;\n  err.method = method;\n  err.url = url;\n\n  return err;\n};\n\n/**\n * Expose `Response`.\n */\n\nrequest.Response = Response;\n\n/**\n * Initialize a new `Request` with the given `method` and `url`.\n *\n * @param {String} method\n * @param {String} url\n * @api public\n */\n\nfunction Request(method, url) {\n  const self = this;\n  this._query = this._query || [];\n  this.method = method;\n  this.url = url;\n  this.header = {}; // preserves header name case\n  this._header = {}; // coerces header names to lowercase\n  this.on('end', () => {\n    let err = null;\n    let res = null;\n\n    try {\n      res = new Response(self);\n    } catch (err_) {\n      err = new Error('Parser is unable to parse the response');\n      err.parse = true;\n      err.original = err_;\n      // issue #675: return the raw response if the response parsing fails\n      if (self.xhr) {\n        // ie9 doesn't have 'response' property\n        err.rawResponse =\n          typeof self.xhr.responseType === 'undefined'\n            ? self.xhr.responseText\n            : self.xhr.response;\n        // issue #876: return the http status code if the response parsing fails\n        err.status = self.xhr.status ? self.xhr.status : null;\n        err.statusCode = err.status; // backwards-compat only\n      } else {\n        err.rawResponse = null;\n        err.status = null;\n      }\n\n      return self.callback(err);\n    }\n\n    self.emit('response', res);\n\n    let new_err;\n    try {\n      if (!self._isResponseOK(res)) {\n        new_err = new Error(\n          res.statusText || res.text || 'Unsuccessful HTTP response'\n        );\n      }\n    } catch (err_) {\n      new_err = err_; // ok() callback can throw\n    }\n\n    // #1000 don't catch errors from the callback to avoid double calling it\n    if (new_err) {\n      new_err.original = err;\n      new_err.response = res;\n      new_err.status = res.status;\n      self.callback(new_err, res);\n    } else {\n      self.callback(null, res);\n    }\n  });\n}\n\n/**\n * Mixin `Emitter` and `RequestBase`.\n */\n\n// eslint-disable-next-line new-cap\nEmitter(Request.prototype);\n// eslint-disable-next-line new-cap\nRequestBase(Request.prototype);\n\n/**\n * Set Content-Type to `type`, mapping values from `request.types`.\n *\n * Examples:\n *\n *      superagent.types.xml = 'application/xml';\n *\n *      request.post('/')\n *        .type('xml')\n *        .send(xmlstring)\n *        .end(callback);\n *\n *      request.post('/')\n *        .type('application/xml')\n *        .send(xmlstring)\n *        .end(callback);\n *\n * @param {String} type\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.type = function(type) {\n  this.set('Content-Type', request.types[type] || type);\n  return this;\n};\n\n/**\n * Set Accept to `type`, mapping values from `request.types`.\n *\n * Examples:\n *\n *      superagent.types.json = 'application/json';\n *\n *      request.get('/agent')\n *        .accept('json')\n *        .end(callback);\n *\n *      request.get('/agent')\n *        .accept('application/json')\n *        .end(callback);\n *\n * @param {String} accept\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.accept = function(type) {\n  this.set('Accept', request.types[type] || type);\n  return this;\n};\n\n/**\n * Set Authorization field value with `user` and `pass`.\n *\n * @param {String} user\n * @param {String} [pass] optional in case of using 'bearer' as type\n * @param {Object} options with 'type' property 'auto', 'basic' or 'bearer' (default 'basic')\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.auth = function(user, pass, options) {\n  if (arguments.length === 1) pass = '';\n  if (typeof pass === 'object' && pass !== null) {\n    // pass is optional and can be replaced with options\n    options = pass;\n    pass = '';\n  }\n\n  if (!options) {\n    options = {\n      type: typeof btoa === 'function' ? 'basic' : 'auto'\n    };\n  }\n\n  const encoder = string => {\n    if (typeof btoa === 'function') {\n      return btoa(string);\n    }\n\n    throw new Error('Cannot use basic auth, btoa is not a function');\n  };\n\n  return this._auth(user, pass, options, encoder);\n};\n\n/**\n * Add query-string `val`.\n *\n * Examples:\n *\n *   request.get('/shoes')\n *     .query('size=10')\n *     .query({ color: 'blue' })\n *\n * @param {Object|String} val\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.query = function(val) {\n  if (typeof val !== 'string') val = serialize(val);\n  if (val) this._query.push(val);\n  return this;\n};\n\n/**\n * Queue the given `file` as an attachment to the specified `field`,\n * with optional `options` (or filename).\n *\n * ``` js\n * request.post('/upload')\n *   .attach('content', new Blob(['<a id=\"a\"><b id=\"b\">hey!</b></a>'], { type: \"text/html\"}))\n *   .end(callback);\n * ```\n *\n * @param {String} field\n * @param {Blob|File} file\n * @param {String|Object} options\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.attach = function(field, file, options) {\n  if (file) {\n    if (this._data) {\n      throw new Error(\"superagent can't mix .send() and .attach()\");\n    }\n\n    this._getFormData().append(field, file, options || file.name);\n  }\n\n  return this;\n};\n\nRequest.prototype._getFormData = function() {\n  if (!this._formData) {\n    this._formData = new root.FormData();\n  }\n\n  return this._formData;\n};\n\n/**\n * Invoke the callback with `err` and `res`\n * and handle arity check.\n *\n * @param {Error} err\n * @param {Response} res\n * @api private\n */\n\nRequest.prototype.callback = function(err, res) {\n  if (this._shouldRetry(err, res)) {\n    return this._retry();\n  }\n\n  const fn = this._callback;\n  this.clearTimeout();\n\n  if (err) {\n    if (this._maxRetries) err.retries = this._retries - 1;\n    this.emit('error', err);\n  }\n\n  fn(err, res);\n};\n\n/**\n * Invoke callback with x-domain error.\n *\n * @api private\n */\n\nRequest.prototype.crossDomainError = function() {\n  const err = new Error(\n    'Request has been terminated\\nPossible causes: the network is offline, Origin is not allowed by Access-Control-Allow-Origin, the page is being unloaded, etc.'\n  );\n  err.crossDomain = true;\n\n  err.status = this.status;\n  err.method = this.method;\n  err.url = this.url;\n\n  this.callback(err);\n};\n\n// This only warns, because the request is still likely to work\nRequest.prototype.agent = function() {\n  console.warn('This is not supported in browser version of superagent');\n  return this;\n};\n\nRequest.prototype.ca = Request.prototype.agent;\nRequest.prototype.buffer = Request.prototype.ca;\n\n// This throws, because it can't send/receive data as expected\nRequest.prototype.write = () => {\n  throw new Error(\n    'Streaming is not supported in browser version of superagent'\n  );\n};\n\nRequest.prototype.pipe = Request.prototype.write;\n\n/**\n * Check if `obj` is a host object,\n * we don't want to serialize these :)\n *\n * @param {Object} obj host object\n * @return {Boolean} is a host object\n * @api private\n */\nRequest.prototype._isHost = function(obj) {\n  // Native objects stringify to [object File], [object Blob], [object FormData], etc.\n  return (\n    obj &&\n    typeof obj === 'object' &&\n    !Array.isArray(obj) &&\n    Object.prototype.toString.call(obj) !== '[object Object]'\n  );\n};\n\n/**\n * Initiate request, invoking callback `fn(res)`\n * with an instanceof `Response`.\n *\n * @param {Function} fn\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.end = function(fn) {\n  if (this._endCalled) {\n    console.warn(\n      'Warning: .end() was called twice. This is not supported in superagent'\n    );\n  }\n\n  this._endCalled = true;\n\n  // store callback\n  this._callback = fn || noop;\n\n  // querystring\n  this._finalizeQueryString();\n\n  this._end();\n};\n\nRequest.prototype._setUploadTimeout = function() {\n  const self = this;\n\n  // upload timeout it's wokrs only if deadline timeout is off\n  if (this._uploadTimeout && !this._uploadTimeoutTimer) {\n    this._uploadTimeoutTimer = setTimeout(() => {\n      self._timeoutError(\n        'Upload timeout of ',\n        self._uploadTimeout,\n        'ETIMEDOUT'\n      );\n    }, this._uploadTimeout);\n  }\n};\n\n// eslint-disable-next-line complexity\nRequest.prototype._end = function() {\n  if (this._aborted)\n    return this.callback(\n      new Error('The request has been aborted even before .end() was called')\n    );\n\n  const self = this;\n  this.xhr = request.getXHR();\n  const { xhr } = this;\n  let data = this._formData || this._data;\n\n  this._setTimeouts();\n\n  // state change\n  xhr.onreadystatechange = () => {\n    const { readyState } = xhr;\n    if (readyState >= 2 && self._responseTimeoutTimer) {\n      clearTimeout(self._responseTimeoutTimer);\n    }\n\n    if (readyState !== 4) {\n      return;\n    }\n\n    // In IE9, reads to any property (e.g. status) off of an aborted XHR will\n    // result in the error \"Could not complete the operation due to error c00c023f\"\n    let status;\n    try {\n      status = xhr.status;\n    } catch {\n      status = 0;\n    }\n\n    if (!status) {\n      if (self.timedout || self._aborted) return;\n      return self.crossDomainError();\n    }\n\n    self.emit('end');\n  };\n\n  // progress\n  const handleProgress = (direction, e) => {\n    if (e.total > 0) {\n      e.percent = (e.loaded / e.total) * 100;\n\n      if (e.percent === 100) {\n        clearTimeout(self._uploadTimeoutTimer);\n      }\n    }\n\n    e.direction = direction;\n    self.emit('progress', e);\n  };\n\n  if (this.hasListeners('progress')) {\n    try {\n      xhr.addEventListener('progress', handleProgress.bind(null, 'download'));\n      if (xhr.upload) {\n        xhr.upload.addEventListener(\n          'progress',\n          handleProgress.bind(null, 'upload')\n        );\n      }\n    } catch {\n      // Accessing xhr.upload fails in IE from a web worker, so just pretend it doesn't exist.\n      // Reported here:\n      // https://connect.microsoft.com/IE/feedback/details/837245/xmlhttprequest-upload-throws-invalid-argument-when-used-from-web-worker-context\n    }\n  }\n\n  if (xhr.upload) {\n    this._setUploadTimeout();\n  }\n\n  // initiate request\n  try {\n    if (this.username && this.password) {\n      xhr.open(this.method, this.url, true, this.username, this.password);\n    } else {\n      xhr.open(this.method, this.url, true);\n    }\n  } catch (err) {\n    // see #1149\n    return this.callback(err);\n  }\n\n  // CORS\n  if (this._withCredentials) xhr.withCredentials = true;\n\n  // body\n  if (\n    !this._formData &&\n    this.method !== 'GET' &&\n    this.method !== 'HEAD' &&\n    typeof data !== 'string' &&\n    !this._isHost(data)\n  ) {\n    // serialize stuff\n    const contentType = this._header['content-type'];\n    let serialize =\n      this._serializer ||\n      request.serialize[contentType ? contentType.split(';')[0] : ''];\n    if (!serialize && isJSON(contentType)) {\n      serialize = request.serialize['application/json'];\n    }\n\n    if (serialize) data = serialize(data);\n  }\n\n  // set header fields\n  for (const field in this.header) {\n    if (this.header[field] === null) continue;\n\n    if (Object.prototype.hasOwnProperty.call(this.header, field))\n      xhr.setRequestHeader(field, this.header[field]);\n  }\n\n  if (this._responseType) {\n    xhr.responseType = this._responseType;\n  }\n\n  // send stuff\n  this.emit('request', this);\n\n  // IE11 xhr.send(undefined) sends 'undefined' string as POST payload (instead of nothing)\n  // We need null here if data is undefined\n  xhr.send(typeof data === 'undefined' ? null : data);\n};\n\nrequest.agent = () => new Agent();\n\n['GET', 'POST', 'OPTIONS', 'PATCH', 'PUT', 'DELETE'].forEach(method => {\n  Agent.prototype[method.toLowerCase()] = function(url, fn) {\n    const req = new request.Request(method, url);\n    this._setDefaults(req);\n    if (fn) {\n      req.end(fn);\n    }\n\n    return req;\n  };\n});\n\nAgent.prototype.del = Agent.prototype.delete;\n\n/**\n * GET `url` with optional callback `fn(res)`.\n *\n * @param {String} url\n * @param {Mixed|Function} [data] or fn\n * @param {Function} [fn]\n * @return {Request}\n * @api public\n */\n\nrequest.get = (url, data, fn) => {\n  const req = request('GET', url);\n  if (typeof data === 'function') {\n    fn = data;\n    data = null;\n  }\n\n  if (data) req.query(data);\n  if (fn) req.end(fn);\n  return req;\n};\n\n/**\n * HEAD `url` with optional callback `fn(res)`.\n *\n * @param {String} url\n * @param {Mixed|Function} [data] or fn\n * @param {Function} [fn]\n * @return {Request}\n * @api public\n */\n\nrequest.head = (url, data, fn) => {\n  const req = request('HEAD', url);\n  if (typeof data === 'function') {\n    fn = data;\n    data = null;\n  }\n\n  if (data) req.query(data);\n  if (fn) req.end(fn);\n  return req;\n};\n\n/**\n * OPTIONS query to `url` with optional callback `fn(res)`.\n *\n * @param {String} url\n * @param {Mixed|Function} [data] or fn\n * @param {Function} [fn]\n * @return {Request}\n * @api public\n */\n\nrequest.options = (url, data, fn) => {\n  const req = request('OPTIONS', url);\n  if (typeof data === 'function') {\n    fn = data;\n    data = null;\n  }\n\n  if (data) req.send(data);\n  if (fn) req.end(fn);\n  return req;\n};\n\n/**\n * DELETE `url` with optional `data` and callback `fn(res)`.\n *\n * @param {String} url\n * @param {Mixed} [data]\n * @param {Function} [fn]\n * @return {Request}\n * @api public\n */\n\nfunction del(url, data, fn) {\n  const req = request('DELETE', url);\n  if (typeof data === 'function') {\n    fn = data;\n    data = null;\n  }\n\n  if (data) req.send(data);\n  if (fn) req.end(fn);\n  return req;\n}\n\nrequest.del = del;\nrequest.delete = del;\n\n/**\n * PATCH `url` with optional `data` and callback `fn(res)`.\n *\n * @param {String} url\n * @param {Mixed} [data]\n * @param {Function} [fn]\n * @return {Request}\n * @api public\n */\n\nrequest.patch = (url, data, fn) => {\n  const req = request('PATCH', url);\n  if (typeof data === 'function') {\n    fn = data;\n    data = null;\n  }\n\n  if (data) req.send(data);\n  if (fn) req.end(fn);\n  return req;\n};\n\n/**\n * POST `url` with optional `data` and callback `fn(res)`.\n *\n * @param {String} url\n * @param {Mixed} [data]\n * @param {Function} [fn]\n * @return {Request}\n * @api public\n */\n\nrequest.post = (url, data, fn) => {\n  const req = request('POST', url);\n  if (typeof data === 'function') {\n    fn = data;\n    data = null;\n  }\n\n  if (data) req.send(data);\n  if (fn) req.end(fn);\n  return req;\n};\n\n/**\n * PUT `url` with optional `data` and callback `fn(res)`.\n *\n * @param {String} url\n * @param {Mixed|Function} [data] or fn\n * @param {Function} [fn]\n * @return {Request}\n * @api public\n */\n\nrequest.put = (url, data, fn) => {\n  const req = request('PUT', url);\n  if (typeof data === 'function') {\n    fn = data;\n    data = null;\n  }\n\n  if (data) req.send(data);\n  if (fn) req.end(fn);\n  return req;\n};\n","import { Component, html } from './base'\r\n\r\nclass ListErrors extends Component {\r\n  static properties = {\r\n    errors: {}\r\n  }\r\n  render() {\r\n    const errors = this.errors\r\n    if (errors) {\r\n      return html`\r\n        <ul class=\"error-messages\">\r\n          ${Object.keys(errors).map(key => {\r\n            return html`\r\n              <li>${key} ${errors[key]}</li>\r\n            `\r\n          })}\r\n        </ul>\r\n      `\r\n    } else {\r\n      return null\r\n    }\r\n  }\r\n}\r\n\r\ncustomElements.define('list-errors', ListErrors)\r\n","/**\n * Check if `obj` is an object.\n *\n * @param {Object} obj\n * @return {Boolean}\n * @api private\n */\n\nfunction isObject(obj) {\n  return obj !== null && typeof obj === 'object';\n}\n\nmodule.exports = isObject;\n","import { styleMap, html, Component } from './base'\r\n\r\nconst wrapperStyle = {\r\n  display: 'flex',\r\n  justifyContent: 'center'\r\n}\r\n\r\nconst errorStyle = {\r\n  display: 'inline-block',\r\n  margin: '20px auto',\r\n  borderRadius: '4px',\r\n  padding: '8px 15px',\r\n  color: 'rgb(240, 45, 45)',\r\n  fontWeight: 'bold',\r\n  backgroundColor: 'rgba(240, 45, 45, 0.1)'\r\n}\r\n\r\nexport default class RedError extends Component {\r\n  static properties = {\r\n    message: { type: String }\r\n  }\r\n\r\n  render() {\r\n    return html`\r\n      <div style=${styleMap(wrapperStyle)}>\r\n        <div style=\"${styleMap(errorStyle)}\">${this.message}</div>\r\n      </div>\r\n    `\r\n  }\r\n}\r\n\r\ncustomElements.define('red-error', RedError)\r\n","(function () {\n  if (typeof Promise.prototype.finally === 'function') {\n    return\n  }\n  Promise.prototype.finally = function (fn) {\n    return this\n      .then(value => this.constructor.resolve(fn()).then(() => value))\n      .catch(reason => this.constructor.resolve(fn()).then(() => { throw reason }))\n  }\n})()\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","\r\n/**\r\n * Expose `Emitter`.\r\n */\r\n\r\nif (typeof module !== 'undefined') {\r\n  module.exports = Emitter;\r\n}\r\n\r\n/**\r\n * Initialize a new `Emitter`.\r\n *\r\n * @api public\r\n */\r\n\r\nfunction Emitter(obj) {\r\n  if (obj) return mixin(obj);\r\n};\r\n\r\n/**\r\n * Mixin the emitter properties.\r\n *\r\n * @param {Object} obj\r\n * @return {Object}\r\n * @api private\r\n */\r\n\r\nfunction mixin(obj) {\r\n  for (var key in Emitter.prototype) {\r\n    obj[key] = Emitter.prototype[key];\r\n  }\r\n  return obj;\r\n}\r\n\r\n/**\r\n * Listen on the given `event` with `fn`.\r\n *\r\n * @param {String} event\r\n * @param {Function} fn\r\n * @return {Emitter}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.on =\r\nEmitter.prototype.addEventListener = function(event, fn){\r\n  this._callbacks = this._callbacks || {};\r\n  (this._callbacks['$' + event] = this._callbacks['$' + event] || [])\r\n    .push(fn);\r\n  return this;\r\n};\r\n\r\n/**\r\n * Adds an `event` listener that will be invoked a single\r\n * time then automatically removed.\r\n *\r\n * @param {String} event\r\n * @param {Function} fn\r\n * @return {Emitter}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.once = function(event, fn){\r\n  function on() {\r\n    this.off(event, on);\r\n    fn.apply(this, arguments);\r\n  }\r\n\r\n  on.fn = fn;\r\n  this.on(event, on);\r\n  return this;\r\n};\r\n\r\n/**\r\n * Remove the given callback for `event` or all\r\n * registered callbacks.\r\n *\r\n * @param {String} event\r\n * @param {Function} fn\r\n * @return {Emitter}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.off =\r\nEmitter.prototype.removeListener =\r\nEmitter.prototype.removeAllListeners =\r\nEmitter.prototype.removeEventListener = function(event, fn){\r\n  this._callbacks = this._callbacks || {};\r\n\r\n  // all\r\n  if (0 == arguments.length) {\r\n    this._callbacks = {};\r\n    return this;\r\n  }\r\n\r\n  // specific event\r\n  var callbacks = this._callbacks['$' + event];\r\n  if (!callbacks) return this;\r\n\r\n  // remove all handlers\r\n  if (1 == arguments.length) {\r\n    delete this._callbacks['$' + event];\r\n    return this;\r\n  }\r\n\r\n  // remove specific handler\r\n  var cb;\r\n  for (var i = 0; i < callbacks.length; i++) {\r\n    cb = callbacks[i];\r\n    if (cb === fn || cb.fn === fn) {\r\n      callbacks.splice(i, 1);\r\n      break;\r\n    }\r\n  }\r\n\r\n  // Remove event specific arrays for event types that no\r\n  // one is subscribed for to avoid memory leak.\r\n  if (callbacks.length === 0) {\r\n    delete this._callbacks['$' + event];\r\n  }\r\n\r\n  return this;\r\n};\r\n\r\n/**\r\n * Emit `event` with the given args.\r\n *\r\n * @param {String} event\r\n * @param {Mixed} ...\r\n * @return {Emitter}\r\n */\r\n\r\nEmitter.prototype.emit = function(event){\r\n  this._callbacks = this._callbacks || {};\r\n\r\n  var args = new Array(arguments.length - 1)\r\n    , callbacks = this._callbacks['$' + event];\r\n\r\n  for (var i = 1; i < arguments.length; i++) {\r\n    args[i - 1] = arguments[i];\r\n  }\r\n\r\n  if (callbacks) {\r\n    callbacks = callbacks.slice(0);\r\n    for (var i = 0, len = callbacks.length; i < len; ++i) {\r\n      callbacks[i].apply(this, args);\r\n    }\r\n  }\r\n\r\n  return this;\r\n};\r\n\r\n/**\r\n * Return array of callbacks for `event`.\r\n *\r\n * @param {String} event\r\n * @return {Array}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.listeners = function(event){\r\n  this._callbacks = this._callbacks || {};\r\n  return this._callbacks['$' + event] || [];\r\n};\r\n\r\n/**\r\n * Check if this emitter has `event` handlers.\r\n *\r\n * @param {String} event\r\n * @return {Boolean}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.hasListeners = function(event){\r\n  return !! this.listeners(event).length;\r\n};\r\n","module.exports = stringify\nstringify.default = stringify\nstringify.stable = deterministicStringify\nstringify.stableStringify = deterministicStringify\n\nvar arr = []\nvar replacerStack = []\n\n// Regular stringify\nfunction stringify (obj, replacer, spacer) {\n  decirc(obj, '', [], undefined)\n  var res\n  if (replacerStack.length === 0) {\n    res = JSON.stringify(obj, replacer, spacer)\n  } else {\n    res = JSON.stringify(obj, replaceGetterValues(replacer), spacer)\n  }\n  while (arr.length !== 0) {\n    var part = arr.pop()\n    if (part.length === 4) {\n      Object.defineProperty(part[0], part[1], part[3])\n    } else {\n      part[0][part[1]] = part[2]\n    }\n  }\n  return res\n}\nfunction decirc (val, k, stack, parent) {\n  var i\n  if (typeof val === 'object' && val !== null) {\n    for (i = 0; i < stack.length; i++) {\n      if (stack[i] === val) {\n        var propertyDescriptor = Object.getOwnPropertyDescriptor(parent, k)\n        if (propertyDescriptor.get !== undefined) {\n          if (propertyDescriptor.configurable) {\n            Object.defineProperty(parent, k, { value: '[Circular]' })\n            arr.push([parent, k, val, propertyDescriptor])\n          } else {\n            replacerStack.push([val, k])\n          }\n        } else {\n          parent[k] = '[Circular]'\n          arr.push([parent, k, val])\n        }\n        return\n      }\n    }\n    stack.push(val)\n    // Optimize for Arrays. Big arrays could kill the performance otherwise!\n    if (Array.isArray(val)) {\n      for (i = 0; i < val.length; i++) {\n        decirc(val[i], i, stack, val)\n      }\n    } else {\n      var keys = Object.keys(val)\n      for (i = 0; i < keys.length; i++) {\n        var key = keys[i]\n        decirc(val[key], key, stack, val)\n      }\n    }\n    stack.pop()\n  }\n}\n\n// Stable-stringify\nfunction compareFunction (a, b) {\n  if (a < b) {\n    return -1\n  }\n  if (a > b) {\n    return 1\n  }\n  return 0\n}\n\nfunction deterministicStringify (obj, replacer, spacer) {\n  var tmp = deterministicDecirc(obj, '', [], undefined) || obj\n  var res\n  if (replacerStack.length === 0) {\n    res = JSON.stringify(tmp, replacer, spacer)\n  } else {\n    res = JSON.stringify(tmp, replaceGetterValues(replacer), spacer)\n  }\n  while (arr.length !== 0) {\n    var part = arr.pop()\n    if (part.length === 4) {\n      Object.defineProperty(part[0], part[1], part[3])\n    } else {\n      part[0][part[1]] = part[2]\n    }\n  }\n  return res\n}\n\nfunction deterministicDecirc (val, k, stack, parent) {\n  var i\n  if (typeof val === 'object' && val !== null) {\n    for (i = 0; i < stack.length; i++) {\n      if (stack[i] === val) {\n        var propertyDescriptor = Object.getOwnPropertyDescriptor(parent, k)\n        if (propertyDescriptor.get !== undefined) {\n          if (propertyDescriptor.configurable) {\n            Object.defineProperty(parent, k, { value: '[Circular]' })\n            arr.push([parent, k, val, propertyDescriptor])\n          } else {\n            replacerStack.push([val, k])\n          }\n        } else {\n          parent[k] = '[Circular]'\n          arr.push([parent, k, val])\n        }\n        return\n      }\n    }\n    if (typeof val.toJSON === 'function') {\n      return\n    }\n    stack.push(val)\n    // Optimize for Arrays. Big arrays could kill the performance otherwise!\n    if (Array.isArray(val)) {\n      for (i = 0; i < val.length; i++) {\n        deterministicDecirc(val[i], i, stack, val)\n      }\n    } else {\n      // Create a temporary object in the required way\n      var tmp = {}\n      var keys = Object.keys(val).sort(compareFunction)\n      for (i = 0; i < keys.length; i++) {\n        var key = keys[i]\n        deterministicDecirc(val[key], key, stack, val)\n        tmp[key] = val[key]\n      }\n      if (parent !== undefined) {\n        arr.push([parent, k, val])\n        parent[k] = tmp\n      } else {\n        return tmp\n      }\n    }\n    stack.pop()\n  }\n}\n\n// wraps replacer function to handle values we couldn't replace\n// and mark them as [Circular]\nfunction replaceGetterValues (replacer) {\n  replacer = replacer !== undefined ? replacer : function (k, v) { return v }\n  return function (key, val) {\n    if (replacerStack.length > 0) {\n      for (var i = 0; i < replacerStack.length; i++) {\n        var part = replacerStack[i]\n        if (part[1] === key && part[0] === val) {\n          val = '[Circular]'\n          replacerStack.splice(i, 1)\n          break\n        }\n      }\n    }\n    return replacer.call(this, key, val)\n  }\n}\n","/**\n * Module of mixed-in functions shared between node and client code\n */\nconst isObject = require('./is-object');\n\n/**\n * Expose `RequestBase`.\n */\n\nmodule.exports = RequestBase;\n\n/**\n * Initialize a new `RequestBase`.\n *\n * @api public\n */\n\nfunction RequestBase(obj) {\n  if (obj) return mixin(obj);\n}\n\n/**\n * Mixin the prototype properties.\n *\n * @param {Object} obj\n * @return {Object}\n * @api private\n */\n\nfunction mixin(obj) {\n  for (const key in RequestBase.prototype) {\n    if (Object.prototype.hasOwnProperty.call(RequestBase.prototype, key))\n      obj[key] = RequestBase.prototype[key];\n  }\n\n  return obj;\n}\n\n/**\n * Clear previous timeout.\n *\n * @return {Request} for chaining\n * @api public\n */\n\nRequestBase.prototype.clearTimeout = function() {\n  clearTimeout(this._timer);\n  clearTimeout(this._responseTimeoutTimer);\n  clearTimeout(this._uploadTimeoutTimer);\n  delete this._timer;\n  delete this._responseTimeoutTimer;\n  delete this._uploadTimeoutTimer;\n  return this;\n};\n\n/**\n * Override default response body parser\n *\n * This function will be called to convert incoming data into request.body\n *\n * @param {Function}\n * @api public\n */\n\nRequestBase.prototype.parse = function(fn) {\n  this._parser = fn;\n  return this;\n};\n\n/**\n * Set format of binary response body.\n * In browser valid formats are 'blob' and 'arraybuffer',\n * which return Blob and ArrayBuffer, respectively.\n *\n * In Node all values result in Buffer.\n *\n * Examples:\n *\n *      req.get('/')\n *        .responseType('blob')\n *        .end(callback);\n *\n * @param {String} val\n * @return {Request} for chaining\n * @api public\n */\n\nRequestBase.prototype.responseType = function(val) {\n  this._responseType = val;\n  return this;\n};\n\n/**\n * Override default request body serializer\n *\n * This function will be called to convert data set via .send or .attach into payload to send\n *\n * @param {Function}\n * @api public\n */\n\nRequestBase.prototype.serialize = function(fn) {\n  this._serializer = fn;\n  return this;\n};\n\n/**\n * Set timeouts.\n *\n * - response timeout is time between sending request and receiving the first byte of the response. Includes DNS and connection time.\n * - deadline is the time from start of the request to receiving response body in full. If the deadline is too short large files may not load at all on slow connections.\n * - upload is the time  since last bit of data was sent or received. This timeout works only if deadline timeout is off\n *\n * Value of 0 or false means no timeout.\n *\n * @param {Number|Object} ms or {response, deadline}\n * @return {Request} for chaining\n * @api public\n */\n\nRequestBase.prototype.timeout = function(options) {\n  if (!options || typeof options !== 'object') {\n    this._timeout = options;\n    this._responseTimeout = 0;\n    this._uploadTimeout = 0;\n    return this;\n  }\n\n  for (const option in options) {\n    if (Object.prototype.hasOwnProperty.call(options, option)) {\n      switch (option) {\n        case 'deadline':\n          this._timeout = options.deadline;\n          break;\n        case 'response':\n          this._responseTimeout = options.response;\n          break;\n        case 'upload':\n          this._uploadTimeout = options.upload;\n          break;\n        default:\n          console.warn('Unknown timeout option', option);\n      }\n    }\n  }\n\n  return this;\n};\n\n/**\n * Set number of retry attempts on error.\n *\n * Failed requests will be retried 'count' times if timeout or err.code >= 500.\n *\n * @param {Number} count\n * @param {Function} [fn]\n * @return {Request} for chaining\n * @api public\n */\n\nRequestBase.prototype.retry = function(count, fn) {\n  // Default to 1 if no count passed or true\n  if (arguments.length === 0 || count === true) count = 1;\n  if (count <= 0) count = 0;\n  this._maxRetries = count;\n  this._retries = 0;\n  this._retryCallback = fn;\n  return this;\n};\n\nconst ERROR_CODES = ['ECONNRESET', 'ETIMEDOUT', 'EADDRINFO', 'ESOCKETTIMEDOUT'];\n\n/**\n * Determine if a request should be retried.\n * (Borrowed from segmentio/superagent-retry)\n *\n * @param {Error} err an error\n * @param {Response} [res] response\n * @returns {Boolean} if segment should be retried\n */\nRequestBase.prototype._shouldRetry = function(err, res) {\n  if (!this._maxRetries || this._retries++ >= this._maxRetries) {\n    return false;\n  }\n\n  if (this._retryCallback) {\n    try {\n      const override = this._retryCallback(err, res);\n      if (override === true) return true;\n      if (override === false) return false;\n      // undefined falls back to defaults\n    } catch (err_) {\n      console.error(err_);\n    }\n  }\n\n  if (res && res.status && res.status >= 500 && res.status !== 501) return true;\n  if (err) {\n    if (err.code && ERROR_CODES.includes(err.code)) return true;\n    // Superagent timeout\n    if (err.timeout && err.code === 'ECONNABORTED') return true;\n    if (err.crossDomain) return true;\n  }\n\n  return false;\n};\n\n/**\n * Retry request\n *\n * @return {Request} for chaining\n * @api private\n */\n\nRequestBase.prototype._retry = function() {\n  this.clearTimeout();\n\n  // node\n  if (this.req) {\n    this.req = null;\n    this.req = this.request();\n  }\n\n  this._aborted = false;\n  this.timedout = false;\n  this.timedoutError = null;\n\n  return this._end();\n};\n\n/**\n * Promise support\n *\n * @param {Function} resolve\n * @param {Function} [reject]\n * @return {Request}\n */\n\nRequestBase.prototype.then = function(resolve, reject) {\n  if (!this._fullfilledPromise) {\n    const self = this;\n    if (this._endCalled) {\n      console.warn(\n        'Warning: superagent request was sent twice, because both .end() and .then() were called. Never call .end() if you use promises'\n      );\n    }\n\n    this._fullfilledPromise = new Promise((resolve, reject) => {\n      self.on('abort', () => {\n        if (this.timedout && this.timedoutError) {\n          reject(this.timedoutError);\n          return;\n        }\n\n        const err = new Error('Aborted');\n        err.code = 'ABORTED';\n        err.status = this.status;\n        err.method = this.method;\n        err.url = this.url;\n        reject(err);\n      });\n      self.end((err, res) => {\n        if (err) reject(err);\n        else resolve(res);\n      });\n    });\n  }\n\n  return this._fullfilledPromise.then(resolve, reject);\n};\n\nRequestBase.prototype.catch = function(cb) {\n  return this.then(undefined, cb);\n};\n\n/**\n * Allow for extension\n */\n\nRequestBase.prototype.use = function(fn) {\n  fn(this);\n  return this;\n};\n\nRequestBase.prototype.ok = function(cb) {\n  if (typeof cb !== 'function') throw new Error('Callback required');\n  this._okCallback = cb;\n  return this;\n};\n\nRequestBase.prototype._isResponseOK = function(res) {\n  if (!res) {\n    return false;\n  }\n\n  if (this._okCallback) {\n    return this._okCallback(res);\n  }\n\n  return res.status >= 200 && res.status < 300;\n};\n\n/**\n * Get request header `field`.\n * Case-insensitive.\n *\n * @param {String} field\n * @return {String}\n * @api public\n */\n\nRequestBase.prototype.get = function(field) {\n  return this._header[field.toLowerCase()];\n};\n\n/**\n * Get case-insensitive header `field` value.\n * This is a deprecated internal API. Use `.get(field)` instead.\n *\n * (getHeader is no longer used internally by the superagent code base)\n *\n * @param {String} field\n * @return {String}\n * @api private\n * @deprecated\n */\n\nRequestBase.prototype.getHeader = RequestBase.prototype.get;\n\n/**\n * Set header `field` to `val`, or multiple fields with one object.\n * Case-insensitive.\n *\n * Examples:\n *\n *      req.get('/')\n *        .set('Accept', 'application/json')\n *        .set('X-API-Key', 'foobar')\n *        .end(callback);\n *\n *      req.get('/')\n *        .set({ Accept: 'application/json', 'X-API-Key': 'foobar' })\n *        .end(callback);\n *\n * @param {String|Object} field\n * @param {String} val\n * @return {Request} for chaining\n * @api public\n */\n\nRequestBase.prototype.set = function(field, val) {\n  if (isObject(field)) {\n    for (const key in field) {\n      if (Object.prototype.hasOwnProperty.call(field, key))\n        this.set(key, field[key]);\n    }\n\n    return this;\n  }\n\n  this._header[field.toLowerCase()] = val;\n  this.header[field] = val;\n  return this;\n};\n\n/**\n * Remove header `field`.\n * Case-insensitive.\n *\n * Example:\n *\n *      req.get('/')\n *        .unset('User-Agent')\n *        .end(callback);\n *\n * @param {String} field field name\n */\nRequestBase.prototype.unset = function(field) {\n  delete this._header[field.toLowerCase()];\n  delete this.header[field];\n  return this;\n};\n\n/**\n * Write the field `name` and `val`, or multiple fields with one object\n * for \"multipart/form-data\" request bodies.\n *\n * ``` js\n * request.post('/upload')\n *   .field('foo', 'bar')\n *   .end(callback);\n *\n * request.post('/upload')\n *   .field({ foo: 'bar', baz: 'qux' })\n *   .end(callback);\n * ```\n *\n * @param {String|Object} name name of field\n * @param {String|Blob|File|Buffer|fs.ReadStream} val value of field\n * @return {Request} for chaining\n * @api public\n */\nRequestBase.prototype.field = function(name, val) {\n  // name should be either a string or an object.\n  if (name === null || undefined === name) {\n    throw new Error('.field(name, val) name can not be empty');\n  }\n\n  if (this._data) {\n    throw new Error(\n      \".field() can't be used if .send() is used. Please use only .send() or only .field() & .attach()\"\n    );\n  }\n\n  if (isObject(name)) {\n    for (const key in name) {\n      if (Object.prototype.hasOwnProperty.call(name, key))\n        this.field(key, name[key]);\n    }\n\n    return this;\n  }\n\n  if (Array.isArray(val)) {\n    for (const i in val) {\n      if (Object.prototype.hasOwnProperty.call(val, i))\n        this.field(name, val[i]);\n    }\n\n    return this;\n  }\n\n  // val should be defined now\n  if (val === null || undefined === val) {\n    throw new Error('.field(name, val) val can not be empty');\n  }\n\n  if (typeof val === 'boolean') {\n    val = String(val);\n  }\n\n  this._getFormData().append(name, val);\n  return this;\n};\n\n/**\n * Abort the request, and clear potential timeout.\n *\n * @return {Request} request\n * @api public\n */\nRequestBase.prototype.abort = function() {\n  if (this._aborted) {\n    return this;\n  }\n\n  this._aborted = true;\n  if (this.xhr) this.xhr.abort(); // browser\n  if (this.req) this.req.abort(); // node\n  this.clearTimeout();\n  this.emit('abort');\n  return this;\n};\n\nRequestBase.prototype._auth = function(user, pass, options, base64Encoder) {\n  switch (options.type) {\n    case 'basic':\n      this.set('Authorization', `Basic ${base64Encoder(`${user}:${pass}`)}`);\n      break;\n\n    case 'auto':\n      this.username = user;\n      this.password = pass;\n      break;\n\n    case 'bearer': // usage would be .auth(accessToken, { type: 'bearer' })\n      this.set('Authorization', `Bearer ${user}`);\n      break;\n    default:\n      break;\n  }\n\n  return this;\n};\n\n/**\n * Enable transmission of cookies with x-domain requests.\n *\n * Note that for this to work the origin must not be\n * using \"Access-Control-Allow-Origin\" with a wildcard,\n * and also must set \"Access-Control-Allow-Credentials\"\n * to \"true\".\n *\n * @api public\n */\n\nRequestBase.prototype.withCredentials = function(on) {\n  // This is browser-only functionality. Node side is no-op.\n  if (on === undefined) on = true;\n  this._withCredentials = on;\n  return this;\n};\n\n/**\n * Set the max redirects to `n`. Does nothing in browser XHR implementation.\n *\n * @param {Number} n\n * @return {Request} for chaining\n * @api public\n */\n\nRequestBase.prototype.redirects = function(n) {\n  this._maxRedirects = n;\n  return this;\n};\n\n/**\n * Maximum size of buffered response body, in bytes. Counts uncompressed size.\n * Default 200MB.\n *\n * @param {Number} n number of bytes\n * @return {Request} for chaining\n */\nRequestBase.prototype.maxResponseSize = function(n) {\n  if (typeof n !== 'number') {\n    throw new TypeError('Invalid argument');\n  }\n\n  this._maxResponseSize = n;\n  return this;\n};\n\n/**\n * Convert to a plain javascript object (not JSON string) of scalar properties.\n * Note as this method is designed to return a useful non-this value,\n * it cannot be chained.\n *\n * @return {Object} describing method, url, and data of this request\n * @api public\n */\n\nRequestBase.prototype.toJSON = function() {\n  return {\n    method: this.method,\n    url: this.url,\n    data: this._data,\n    headers: this._header\n  };\n};\n\n/**\n * Send `data` as the request body, defaulting the `.type()` to \"json\" when\n * an object is given.\n *\n * Examples:\n *\n *       // manual json\n *       request.post('/user')\n *         .type('json')\n *         .send('{\"name\":\"tj\"}')\n *         .end(callback)\n *\n *       // auto json\n *       request.post('/user')\n *         .send({ name: 'tj' })\n *         .end(callback)\n *\n *       // manual x-www-form-urlencoded\n *       request.post('/user')\n *         .type('form')\n *         .send('name=tj')\n *         .end(callback)\n *\n *       // auto x-www-form-urlencoded\n *       request.post('/user')\n *         .type('form')\n *         .send({ name: 'tj' })\n *         .end(callback)\n *\n *       // defaults to x-www-form-urlencoded\n *      request.post('/user')\n *        .send('name=tobi')\n *        .send('species=ferret')\n *        .end(callback)\n *\n * @param {String|Object} data\n * @return {Request} for chaining\n * @api public\n */\n\n// eslint-disable-next-line complexity\nRequestBase.prototype.send = function(data) {\n  const isObj = isObject(data);\n  let type = this._header['content-type'];\n\n  if (this._formData) {\n    throw new Error(\n      \".send() can't be used if .attach() or .field() is used. Please use only .send() or only .field() & .attach()\"\n    );\n  }\n\n  if (isObj && !this._data) {\n    if (Array.isArray(data)) {\n      this._data = [];\n    } else if (!this._isHost(data)) {\n      this._data = {};\n    }\n  } else if (data && this._data && this._isHost(this._data)) {\n    throw new Error(\"Can't merge these send calls\");\n  }\n\n  // merge\n  if (isObj && isObject(this._data)) {\n    for (const key in data) {\n      if (Object.prototype.hasOwnProperty.call(data, key))\n        this._data[key] = data[key];\n    }\n  } else if (typeof data === 'string') {\n    // default to x-www-form-urlencoded\n    if (!type) this.type('form');\n    type = this._header['content-type'];\n    if (type === 'application/x-www-form-urlencoded') {\n      this._data = this._data ? `${this._data}&${data}` : data;\n    } else {\n      this._data = (this._data || '') + data;\n    }\n  } else {\n    this._data = data;\n  }\n\n  if (!isObj || this._isHost(data)) {\n    return this;\n  }\n\n  // default to json\n  if (!type) this.type('json');\n  return this;\n};\n\n/**\n * Sort `querystring` by the sort function\n *\n *\n * Examples:\n *\n *       // default order\n *       request.get('/user')\n *         .query('name=Nick')\n *         .query('search=Manny')\n *         .sortQuery()\n *         .end(callback)\n *\n *       // customized sort function\n *       request.get('/user')\n *         .query('name=Nick')\n *         .query('search=Manny')\n *         .sortQuery(function(a, b){\n *           return a.length - b.length;\n *         })\n *         .end(callback)\n *\n *\n * @param {Function} sort\n * @return {Request} for chaining\n * @api public\n */\n\nRequestBase.prototype.sortQuery = function(sort) {\n  // _sort default to true but otherwise can be a function or boolean\n  this._sort = typeof sort === 'undefined' ? true : sort;\n  return this;\n};\n\n/**\n * Compose querystring to append to req.url\n *\n * @api private\n */\nRequestBase.prototype._finalizeQueryString = function() {\n  const query = this._query.join('&');\n  if (query) {\n    this.url += (this.url.includes('?') ? '&' : '?') + query;\n  }\n\n  this._query.length = 0; // Makes the call idempotent\n\n  if (this._sort) {\n    const index = this.url.indexOf('?');\n    if (index >= 0) {\n      const queryArr = this.url.slice(index + 1).split('&');\n      if (typeof this._sort === 'function') {\n        queryArr.sort(this._sort);\n      } else {\n        queryArr.sort();\n      }\n\n      this.url = this.url.slice(0, index) + '?' + queryArr.join('&');\n    }\n  }\n};\n\n// For backwards compat only\nRequestBase.prototype._appendQueryString = () => {\n  console.warn('Unsupported');\n};\n\n/**\n * Invoke callback with timeout error.\n *\n * @api private\n */\n\nRequestBase.prototype._timeoutError = function(reason, timeout, errno) {\n  if (this._aborted) {\n    return;\n  }\n\n  const err = new Error(`${reason + timeout}ms exceeded`);\n  err.timeout = timeout;\n  err.code = 'ECONNABORTED';\n  err.errno = errno;\n  this.timedout = true;\n  this.timedoutError = err;\n  this.abort();\n  this.callback(err);\n};\n\nRequestBase.prototype._setTimeouts = function() {\n  const self = this;\n\n  // deadline\n  if (this._timeout && !this._timer) {\n    this._timer = setTimeout(() => {\n      self._timeoutError('Timeout of ', self._timeout, 'ETIME');\n    }, this._timeout);\n  }\n\n  // response timeout\n  if (this._responseTimeout && !this._responseTimeoutTimer) {\n    this._responseTimeoutTimer = setTimeout(() => {\n      self._timeoutError(\n        'Response timeout of ',\n        self._responseTimeout,\n        'ETIMEDOUT'\n      );\n    }, this._responseTimeout);\n  }\n};\n","/**\n * Module dependencies.\n */\n\nconst utils = require('./utils');\n\n/**\n * Expose `ResponseBase`.\n */\n\nmodule.exports = ResponseBase;\n\n/**\n * Initialize a new `ResponseBase`.\n *\n * @api public\n */\n\nfunction ResponseBase(obj) {\n  if (obj) return mixin(obj);\n}\n\n/**\n * Mixin the prototype properties.\n *\n * @param {Object} obj\n * @return {Object}\n * @api private\n */\n\nfunction mixin(obj) {\n  for (const key in ResponseBase.prototype) {\n    if (Object.prototype.hasOwnProperty.call(ResponseBase.prototype, key))\n      obj[key] = ResponseBase.prototype[key];\n  }\n\n  return obj;\n}\n\n/**\n * Get case-insensitive `field` value.\n *\n * @param {String} field\n * @return {String}\n * @api public\n */\n\nResponseBase.prototype.get = function(field) {\n  return this.header[field.toLowerCase()];\n};\n\n/**\n * Set header related properties:\n *\n *   - `.type` the content type without params\n *\n * A response of \"Content-Type: text/plain; charset=utf-8\"\n * will provide you with a `.type` of \"text/plain\".\n *\n * @param {Object} header\n * @api private\n */\n\nResponseBase.prototype._setHeaderProperties = function(header) {\n  // TODO: moar!\n  // TODO: make this a util\n\n  // content-type\n  const ct = header['content-type'] || '';\n  this.type = utils.type(ct);\n\n  // params\n  const params = utils.params(ct);\n  for (const key in params) {\n    if (Object.prototype.hasOwnProperty.call(params, key))\n      this[key] = params[key];\n  }\n\n  this.links = {};\n\n  // links\n  try {\n    if (header.link) {\n      this.links = utils.parseLinks(header.link);\n    }\n  } catch {\n    // ignore\n  }\n};\n\n/**\n * Set flags such as `.ok` based on `status`.\n *\n * For example a 2xx response will give you a `.ok` of __true__\n * whereas 5xx will be __false__ and `.error` will be __true__. The\n * `.clientError` and `.serverError` are also available to be more\n * specific, and `.statusType` is the class of error ranging from 1..5\n * sometimes useful for mapping respond colors etc.\n *\n * \"sugar\" properties are also defined for common cases. Currently providing:\n *\n *   - .noContent\n *   - .badRequest\n *   - .unauthorized\n *   - .notAcceptable\n *   - .notFound\n *\n * @param {Number} status\n * @api private\n */\n\nResponseBase.prototype._setStatusProperties = function(status) {\n  const type = (status / 100) | 0;\n\n  // status / class\n  this.statusCode = status;\n  this.status = this.statusCode;\n  this.statusType = type;\n\n  // basics\n  this.info = type === 1;\n  this.ok = type === 2;\n  this.redirect = type === 3;\n  this.clientError = type === 4;\n  this.serverError = type === 5;\n  this.error = type === 4 || type === 5 ? this.toError() : false;\n\n  // sugar\n  this.created = status === 201;\n  this.accepted = status === 202;\n  this.noContent = status === 204;\n  this.badRequest = status === 400;\n  this.unauthorized = status === 401;\n  this.notAcceptable = status === 406;\n  this.forbidden = status === 403;\n  this.notFound = status === 404;\n  this.unprocessableEntity = status === 422;\n};\n","/**\n * Return the mime type for the given `str`.\n *\n * @param {String} str\n * @return {String}\n * @api private\n */\n\nexports.type = str => str.split(/ *; */).shift();\n\n/**\n * Return header field parameters.\n *\n * @param {String} str\n * @return {Object}\n * @api private\n */\n\nexports.params = str =>\n  str.split(/ *; */).reduce((obj, str) => {\n    const parts = str.split(/ *= */);\n    const key = parts.shift();\n    const val = parts.shift();\n\n    if (key && val) obj[key] = val;\n    return obj;\n  }, {});\n\n/**\n * Parse Link header fields.\n *\n * @param {String} str\n * @return {Object}\n * @api private\n */\n\nexports.parseLinks = str =>\n  str.split(/ *, */).reduce((obj, str) => {\n    const parts = str.split(/ *; */);\n    const url = parts[0].slice(1, -1);\n    const rel = parts[1].split(/ *= */)[1].slice(1, -1);\n    obj[rel] = url;\n    return obj;\n  }, {});\n\n/**\n * Strip content related fields from `header`.\n *\n * @param {Object} header\n * @return {Object} header\n * @api private\n */\n\nexports.cleanHeader = (header, changesOrigin) => {\n  delete header['content-type'];\n  delete header['content-length'];\n  delete header['transfer-encoding'];\n  delete header.host;\n  // secuirty\n  if (changesOrigin) {\n    delete header.authorization;\n    delete header.cookie;\n  }\n\n  return header;\n};\n","function Agent() {\n  this._defaults = [];\n}\n\n[\n  'use',\n  'on',\n  'once',\n  'set',\n  'query',\n  'type',\n  'accept',\n  'auth',\n  'withCredentials',\n  'sortQuery',\n  'retry',\n  'ok',\n  'redirects',\n  'timeout',\n  'buffer',\n  'serialize',\n  'parse',\n  'ca',\n  'key',\n  'pfx',\n  'cert',\n  'disableTLSCerts'\n].forEach(fn => {\n  // Default setting for all requests from this agent\n  Agent.prototype[fn] = function(...args) {\n    this._defaults.push({ fn, args });\n    return this;\n  };\n});\n\nAgent.prototype._setDefaults = function(req) {\n  this._defaults.forEach(def => {\n    req[def.fn](...def.args);\n  });\n};\n\nmodule.exports = Agent;\n","import superagent from 'superagent'\r\n\r\nconst API_ROOT = 'https://conduit.productionready.io/api'\r\n\r\nconst encode = encodeURIComponent\r\n\r\nlet commonStore, authStore\r\n\r\nconst configure = stores => {\r\n  commonStore = stores.commonStore\r\n  authStore = stores.authStore\r\n}\r\n\r\nconst handleErrors = err => {\r\n  if (err && err.response && err.response.status === 401) {\r\n    authStore.logout()\r\n  }\r\n  return err\r\n}\r\n\r\nconst responseBody = res => res.body\r\n\r\nconst tokenPlugin = req => {\r\n  if (commonStore.token) {\r\n    req.set('authorization', `Token ${commonStore.token}`)\r\n  }\r\n}\r\n\r\nconst requests = {\r\n  del: url =>\r\n    superagent\r\n      .del(`${API_ROOT}${url}`)\r\n      .use(tokenPlugin)\r\n      .catch(handleErrors)\r\n      .then(responseBody),\r\n  get: url =>\r\n    superagent\r\n      .get(`${API_ROOT}${url}`)\r\n      .use(tokenPlugin)\r\n      .catch(handleErrors)\r\n      .then(responseBody),\r\n  put: (url, body) =>\r\n    superagent\r\n      .put(`${API_ROOT}${url}`, body)\r\n      .use(tokenPlugin)\r\n      .catch(handleErrors)\r\n      .then(responseBody),\r\n  post: (url, body) =>\r\n    superagent\r\n      .post(`${API_ROOT}${url}`, body)\r\n      .use(tokenPlugin)\r\n      .catch(handleErrors)\r\n      .then(responseBody)\r\n}\r\n\r\nconst Auth = {\r\n  current: () => requests.get('/user'),\r\n  login: (email, password) =>\r\n    requests.post('/users/login', { user: { email, password } }),\r\n  register: (username, email, password) =>\r\n    requests.post('/users', { user: { username, email, password } }),\r\n  save: user => requests.put('/user', { user })\r\n}\r\n\r\nconst Tags = {\r\n  getAll: () => requests.get('/tags')\r\n}\r\n\r\nconst limit = (count, p) => `limit=${count}&offset=${p ? p * count : 0}`\r\nconst omitSlug = article => Object.assign({}, article, { slug: undefined })\r\n\r\nconst Articles = {\r\n  all: (page, lim = 10) => requests.get(`/articles?${limit(lim, page)}`),\r\n  byAuthor: (author, page, query) =>\r\n    requests.get(`/articles?author=${encode(author)}&${limit(5, page)}`),\r\n  byTag: (tag, page, lim = 10) =>\r\n    requests.get(`/articles?tag=${encode(tag)}&${limit(lim, page)}`),\r\n  del: slug => requests.del(`/articles/${slug}`),\r\n  favorite: slug => requests.post(`/articles/${slug}/favorite`),\r\n  favoritedBy: (author, page) =>\r\n    requests.get(`/articles?favorited=${encode(author)}&${limit(5, page)}`),\r\n  feed: () => requests.get('/articles/feed?limit=10&offset=0'),\r\n  get: slug => requests.get(`/articles/${slug}`),\r\n  unfavorite: slug => requests.del(`/articles/${slug}/favorite`),\r\n  update: article =>\r\n    requests.put(`/articles/${article.slug}`, { article: omitSlug(article) }),\r\n  create: article => requests.post('/articles', { article })\r\n}\r\n\r\nconst Comments = {\r\n  create: (slug, comment) =>\r\n    requests.post(`/articles/${slug}/comments`, { comment }),\r\n  delete: (slug, commentId) =>\r\n    requests.del(`/articles/${slug}/comments/${commentId}`),\r\n  forArticle: slug => requests.get(`/articles/${slug}/comments`)\r\n}\r\n\r\nconst Profile = {\r\n  follow: username => requests.post(`/profiles/${username}/follow`),\r\n  get: username => requests.get(`/profiles/${username}`),\r\n  unfollow: username => requests.del(`/profiles/${username}/follow`)\r\n}\r\n\r\nexport default {\r\n  Articles,\r\n  Auth,\r\n  Comments,\r\n  Profile,\r\n  Tags,\r\n  configure\r\n}\r\n","import { observable, action, computed } from 'mobx'\r\nimport agent from '../agent'\r\n\r\nconst LIMIT = 10\r\n\r\nexport class ArticlesStore {\r\n  @observable isLoading = false\r\n  @observable page = 0\r\n  @observable totalPagesCount = 0\r\n  @observable articlesRegistry = observable.map()\r\n  @observable predicate = {}\r\n\r\n  @computed get articles() {\r\n    return Array.from(this.articlesRegistry.values())\r\n  }\r\n\r\n  clear() {\r\n    this.articlesRegistry.clear()\r\n    this.page = 0\r\n  }\r\n\r\n  getArticle(slug) {\r\n    return this.articlesRegistry.get(slug)\r\n  }\r\n\r\n  @action setPage(page) {\r\n    this.page = page\r\n  }\r\n\r\n  @action setPredicate(predicate) {\r\n    if (JSON.stringify(predicate) === JSON.stringify(this.predicate)) return\r\n    this.clear()\r\n    this.predicate = predicate\r\n  }\r\n\r\n  $req() {\r\n    if (this.predicate.myFeed) return agent.Articles.feed(this.page, LIMIT)\r\n    if (this.predicate.favoritedBy)\r\n      return agent.Articles.favoritedBy(\r\n        this.predicate.favoritedBy,\r\n        this.page,\r\n        LIMIT\r\n      )\r\n    if (this.predicate.tag)\r\n      return agent.Articles.byTag(this.predicate.tag, this.page, LIMIT)\r\n    if (this.predicate.author)\r\n      return agent.Articles.byAuthor(this.predicate.author, this.page, LIMIT)\r\n    return agent.Articles.all(this.page, LIMIT, this.predicate)\r\n  }\r\n\r\n  @action loadArticles() {\r\n    this.isLoading = true\r\n    return this.$req()\r\n      .then(\r\n        action('updateArticlesRegistry', ({ articles, articlesCount }) => {\r\n          this.articlesRegistry.clear()\r\n          articles.forEach(article =>\r\n            this.articlesRegistry.set(article.slug, article)\r\n          )\r\n          this.totalPagesCount = Math.ceil(articlesCount / LIMIT)\r\n        })\r\n      )\r\n      .finally(\r\n        action('endLoadingArticles', () => {\r\n          this.isLoading = false\r\n        })\r\n      )\r\n  }\r\n\r\n  @action loadArticle(slug, { acceptCached = false } = {}) {\r\n    if (acceptCached) {\r\n      const article = this.getArticle(slug)\r\n      if (article) return Promise.resolve(article)\r\n    }\r\n    this.isLoading = true\r\n    return agent.Articles.get(slug)\r\n      .then(\r\n        action(({ article }) => {\r\n          this.articlesRegistry.set(article.slug, article)\r\n          return article\r\n        })\r\n      )\r\n      .finally(\r\n        action(() => {\r\n          this.isLoading = false\r\n        })\r\n      )\r\n  }\r\n\r\n  @action makeFavorite(slug) {\r\n    const article = this.getArticle(slug)\r\n    if (article && !article.favorited) {\r\n      article.favorited = true\r\n      article.favoritesCount++\r\n      return agent.Articles.favorite(slug).catch(\r\n        action(err => {\r\n          article.favorited = false\r\n          article.favoritesCount--\r\n          throw err\r\n        })\r\n      )\r\n    }\r\n    return Promise.resolve()\r\n  }\r\n\r\n  @action unmakeFavorite(slug) {\r\n    const article = this.getArticle(slug)\r\n    if (article && article.favorited) {\r\n      article.favorited = false\r\n      article.favoritesCount--\r\n      return agent.Articles.unfavorite(slug).catch(\r\n        action(err => {\r\n          article.favorited = true\r\n          article.favoritesCount++\r\n          throw err\r\n        })\r\n      )\r\n    }\r\n    return Promise.resolve()\r\n  }\r\n\r\n  @action createArticle(article) {\r\n    return agent.Articles.create(article).then(\r\n      action(({ article }) => {\r\n        this.articlesRegistry.set(article.slug, article)\r\n        return article\r\n      })\r\n    )\r\n  }\r\n\r\n  @action updateArticle(data) {\r\n    return agent.Articles.update(data).then(\r\n      action(({ article }) => {\r\n        this.articlesRegistry.set(article.slug, article)\r\n        return article\r\n      })\r\n    )\r\n  }\r\n\r\n  @action deleteArticle(slug) {\r\n    this.articlesRegistry.delete(slug)\r\n    return agent.Articles.del(slug).catch(\r\n      action(err => {\r\n        this.loadArticles()\r\n        throw err\r\n      })\r\n    )\r\n  }\r\n}\r\n\r\nexport default ArticlesStore\r\n","import { observable, action } from 'mobx'\r\nimport agent from '../agent'\r\n\r\nexport class CommentsStore {\r\n  @observable isCreatingComment = false\r\n  @observable isLoadingComments = false\r\n  @observable commentErrors = undefined\r\n  @observable articleSlug = undefined\r\n  @observable comments = []\r\n\r\n  @action setArticleSlug(articleSlug) {\r\n    if (this.articleSlug !== articleSlug) {\r\n      this.comments = []\r\n      this.articleSlug = articleSlug\r\n    }\r\n  }\r\n\r\n  @action loadComments() {\r\n    this.isLoadingComments = true\r\n    this.commentErrors = undefined\r\n    return agent.Comments.forArticle(this.articleSlug)\r\n      .then(\r\n        action(({ comments }) => {\r\n          this.comments = comments\r\n        })\r\n      )\r\n      .catch(\r\n        action(err => {\r\n          this.commentErrors =\r\n            err.response && err.response.body && err.response.body.errors\r\n          throw err\r\n        })\r\n      )\r\n      .finally(\r\n        action(() => {\r\n          this.isLoadingComments = false\r\n        })\r\n      )\r\n  }\r\n\r\n  @action createComment(comment) {\r\n    this.isCreatingComment = true\r\n    return agent.Comments.create(this.articleSlug, comment)\r\n      .then(() => this.loadComments())\r\n      .finally(\r\n        action(() => {\r\n          this.isCreatingComment = false\r\n        })\r\n      )\r\n  }\r\n\r\n  @action deleteComment(id) {\r\n    const idx = this.comments.findIndex(c => c.id === id)\r\n    if (idx > -1) this.comments.splice(idx, 1)\r\n    return agent.Comments.delete(this.articleSlug, id).catch(\r\n      action(err => {\r\n        this.loadComments()\r\n        throw err\r\n      })\r\n    )\r\n  }\r\n}\r\n\r\nexport default CommentsStore\r\n","import { observable, action } from 'mobx'\r\nimport agent from '../agent'\r\n\r\nclass AuthStore {\r\n  constructor(rootStore) {\r\n    this.rootStore = rootStore\r\n  }\r\n\r\n  @observable inProgress = false\r\n  @observable errors = undefined\r\n\r\n  @observable values = {\r\n    username: '',\r\n    email: '',\r\n    password: ''\r\n  }\r\n\r\n  @action setUsername(username) {\r\n    this.values.username = username\r\n  }\r\n\r\n  @action setEmail(email) {\r\n    this.values.email = email\r\n  }\r\n\r\n  @action setPassword(password) {\r\n    this.values.password = password\r\n  }\r\n\r\n  @action reset() {\r\n    this.values.username = ''\r\n    this.values.email = ''\r\n    this.values.password = ''\r\n  }\r\n\r\n  @action login() {\r\n    this.inProgress = true\r\n    this.errors = undefined\r\n    return agent.Auth.login(this.values.email, this.values.password)\r\n      .then(({ user }) => this.rootStore.commonStore.setToken(user.token))\r\n      .then(() => this.rootStore.userStore.pullUser())\r\n      .catch(\r\n        action(err => {\r\n          this.errors =\r\n            err.response && err.response.body && err.response.body.errors\r\n          throw err\r\n        })\r\n      )\r\n      .finally(\r\n        action(() => {\r\n          this.inProgress = false\r\n        })\r\n      )\r\n  }\r\n\r\n  @action register() {\r\n    this.inProgress = true\r\n    this.errors = undefined\r\n    return agent.Auth.register(\r\n      this.values.username,\r\n      this.values.email,\r\n      this.values.password\r\n    )\r\n      .then(({ user }) => this.rootStore.commonStore.setToken(user.token))\r\n      .then(() => this.rootStore.userStore.pullUser())\r\n      .catch(\r\n        action(err => {\r\n          this.errors =\r\n            err.response && err.response.body && err.response.body.errors\r\n          throw err\r\n        })\r\n      )\r\n      .finally(\r\n        action(() => {\r\n          this.inProgress = false\r\n        })\r\n      )\r\n  }\r\n\r\n  @action logout() {\r\n    this.rootStore.commonStore.setToken(undefined)\r\n    this.rootStore.userStore.forgetUser()\r\n    return Promise.resolve()\r\n  }\r\n}\r\n\r\nexport default AuthStore\r\n","import { observable, action, reaction } from 'mobx'\r\nimport agent from '../agent'\r\n\r\nclass CommonStore {\r\n  @observable appName = 'Conduit'\r\n  @observable token = window.localStorage.getItem('jwt')\r\n  @observable appLoaded = false\r\n\r\n  @observable tags = []\r\n  @observable isLoadingTags = false\r\n\r\n  constructor() {\r\n    reaction(\r\n      () => this.token,\r\n      token => {\r\n        if (token) {\r\n          window.localStorage.setItem('jwt', token)\r\n        } else {\r\n          window.localStorage.removeItem('jwt')\r\n        }\r\n      }\r\n    )\r\n  }\r\n\r\n  @action loadTags() {\r\n    this.isLoadingTags = true\r\n    return agent.Tags.getAll()\r\n      .then(\r\n        action('updateTags', ({ tags }) => {\r\n          this.tags = tags.map(t => t.toLowerCase())\r\n        })\r\n      )\r\n      .finally(\r\n        action('endLoadingTags', () => {\r\n          this.isLoadingTags = false\r\n        })\r\n      )\r\n  }\r\n\r\n  @action setToken(token) {\r\n    this.token = token\r\n  }\r\n\r\n  @action setAppLoaded() {\r\n    this.appLoaded = true\r\n  }\r\n}\r\n\r\nexport default CommonStore\r\n","import { observable, action } from 'mobx'\r\n\r\nclass EditorStore {\r\n  constructor(rootStore) {\r\n    this.rootStore = rootStore\r\n  }\r\n\r\n  @observable inProgress = false\r\n  @observable errors = undefined\r\n  @observable articleSlug = undefined\r\n\r\n  @observable title = ''\r\n  @observable description = ''\r\n  @observable body = ''\r\n  @observable tagList = []\r\n\r\n  @action setArticleSlug(articleSlug) {\r\n    if (this.articleSlug !== articleSlug) {\r\n      this.reset()\r\n      this.articleSlug = articleSlug\r\n    }\r\n  }\r\n\r\n  @action loadInitialData() {\r\n    if (!this.articleSlug) return Promise.resolve()\r\n    this.inProgress = true\r\n    return this.rootStore.articlesStore\r\n      .loadArticle(this.articleSlug, { acceptCached: true })\r\n      .then(\r\n        action(article => {\r\n          if (!article) throw new Error(\"Can't load original article\")\r\n          this.title = article.title\r\n          this.description = article.description\r\n          this.body = article.body\r\n          this.tagList = article.tagList\r\n        })\r\n      )\r\n      .finally(\r\n        action(() => {\r\n          this.inProgress = false\r\n        })\r\n      )\r\n  }\r\n\r\n  @action reset() {\r\n    this.title = ''\r\n    this.description = ''\r\n    this.body = ''\r\n    this.tagList = []\r\n  }\r\n\r\n  @action setTitle(title) {\r\n    this.title = title\r\n  }\r\n\r\n  @action setDescription(description) {\r\n    this.description = description\r\n  }\r\n\r\n  @action setBody(body) {\r\n    this.body = body\r\n  }\r\n\r\n  @action addTag(tag) {\r\n    if (this.tagList.includes(tag)) return\r\n    this.tagList.push(tag)\r\n  }\r\n\r\n  @action removeTag(tag) {\r\n    this.tagList = this.tagList.filter(t => t !== tag)\r\n  }\r\n\r\n  @action submit() {\r\n    this.inProgress = true\r\n    this.errors = undefined\r\n    const article = {\r\n      title: this.title,\r\n      description: this.description,\r\n      body: this.body,\r\n      tagList: this.tagList,\r\n      slug: this.articleSlug\r\n    }\r\n    return (this.articleSlug\r\n      ? this.rootStore.articlesStore.updateArticle(article)\r\n      : this.rootStore.articlesStore.createArticle(article)\r\n    )\r\n      .catch(\r\n        action(err => {\r\n          this.errors =\r\n            err.response && err.response.body && err.response.body.errors\r\n          throw err\r\n        })\r\n      )\r\n      .finally(\r\n        action(() => {\r\n          this.inProgress = false\r\n        })\r\n      )\r\n  }\r\n}\r\n\r\nexport default EditorStore\r\n","import { observable, action } from 'mobx'\r\nimport agent from '../agent'\r\n\r\nclass UserStore {\r\n  @observable currentUser\r\n  @observable loadingUser\r\n  @observable updatingUser\r\n  @observable updatingUserErrors\r\n\r\n  @action pullUser() {\r\n    this.loadingUser = true\r\n    return agent.Auth.current()\r\n      .then(\r\n        action(({ user }) => {\r\n          this.currentUser = user\r\n        })\r\n      )\r\n      .finally(\r\n        action(() => {\r\n          this.loadingUser = false\r\n        })\r\n      )\r\n  }\r\n\r\n  @action updateUser(newUser) {\r\n    this.updatingUser = true\r\n    return agent.Auth.save(newUser)\r\n      .then(\r\n        action(({ user }) => {\r\n          this.currentUser = user\r\n        })\r\n      )\r\n      .finally(\r\n        action(() => {\r\n          this.updatingUser = false\r\n        })\r\n      )\r\n  }\r\n\r\n  @action forgetUser() {\r\n    this.currentUser = undefined\r\n  }\r\n}\r\n\r\nexport default UserStore\r\n","import { observable, action } from 'mobx'\r\nimport agent from '../agent'\r\n\r\nclass ProfileStore {\r\n  @observable profile = undefined\r\n  @observable isLoadingProfile = false\r\n\r\n  @action loadProfile(username) {\r\n    this.isLoadingProfile = true\r\n    agent.Profile.get(username)\r\n      .then(\r\n        action('updateProfile', ({ profile }) => {\r\n          this.profile = profile\r\n        })\r\n      )\r\n      .finally(\r\n        action('endLoadingProfile', () => {\r\n          this.isLoadingProfile = false\r\n        })\r\n      )\r\n  }\r\n\r\n  @action follow() {\r\n    if (this.profile && !this.profile.following) {\r\n      this.profile.following = true\r\n      agent.Profile.follow(this.profile.username).catch(\r\n        action(() => {\r\n          this.profile.following = false\r\n        })\r\n      )\r\n    }\r\n  }\r\n\r\n  @action unfollow() {\r\n    if (this.profile && this.profile.following) {\r\n      this.profile.following = false\r\n      agent.Profile.unfollow(this.profile.username).catch(\r\n        action(() => {\r\n          this.profile.following = true\r\n        })\r\n      )\r\n    }\r\n  }\r\n}\r\n\r\nexport default ProfileStore\r\n","import ArticlesStore from './articlesStore'\r\nimport CommentsStore from './commentsStore'\r\nimport AuthStore from './authStore'\r\nimport CommonStore from './commonStore'\r\nimport EditorStore from './editorStore'\r\nimport UserStore from './userStore'\r\nimport ProfileStore from './profileStore'\r\n\r\nclass RootStore {\r\n  constructor() {\r\n    this.articlesStore = new ArticlesStore()\r\n    this.commentsStore = new CommentsStore()\r\n    this.authStore = new AuthStore(this)\r\n    this.commonStore = new CommonStore()\r\n    this.editorStore = new EditorStore(this)\r\n    this.userStore = new UserStore()\r\n    this.profileStore = new ProfileStore()\r\n  }\r\n}\r\n\r\nexport default RootStore\r\n","/**\n * Default configs.\n */\nconst DEFAULT_DELIMITER = \"/\";\n\nexport interface ParseOptions {\n  /**\n   * Set the default delimiter for repeat parameters. (default: `'/'`)\n   */\n  delimiter?: string;\n  /**\n   * List of characters to consider delimiters when parsing. (default: `undefined`, any character)\n   */\n  whitelist?: string | string[];\n}\n\n/**\n * Balanced bracket helper function.\n */\nfunction balanced(open: string, close: string, str: string, index: number) {\n  let count = 0;\n  let i = index;\n\n  while (i < str.length) {\n    if (str[i] === \"\\\\\") {\n      i += 2;\n      continue;\n    }\n\n    if (str[i] === close) {\n      count--;\n\n      if (count === 0) return i + 1;\n    }\n\n    if (str[i] === open) {\n      count++;\n    }\n\n    i++;\n  }\n\n  return -1;\n}\n\n/**\n * Parse a string for the raw tokens.\n */\nexport function parse(str: string, options: ParseOptions = {}): Token[] {\n  const tokens = [];\n  const defaultDelimiter = options.delimiter ?? DEFAULT_DELIMITER;\n  const whitelist = options.whitelist ?? undefined;\n  let i = 0;\n  let key = 0;\n  let path = \"\";\n  let isEscaped = false;\n\n  // tslint:disable-next-line\n  while (i < str.length) {\n    let prefix = \"\";\n    let name = \"\";\n    let pattern = \"\";\n\n    // Ignore escaped sequences.\n    if (str[i] === \"\\\\\") {\n      i++;\n      path += str[i++];\n      isEscaped = true;\n      continue;\n    }\n\n    if (str[i] === \":\") {\n      while (++i < str.length) {\n        const code = str.charCodeAt(i);\n\n        if (\n          // `0-9`\n          (code >= 48 && code <= 57) ||\n          // `A-Z`\n          (code >= 65 && code <= 90) ||\n          // `a-z`\n          (code >= 97 && code <= 122) ||\n          // `_`\n          code === 95\n        ) {\n          name += str[i];\n          continue;\n        }\n\n        break;\n      }\n\n      // False positive on param name.\n      if (!name) i--;\n    }\n\n    if (str[i] === \"(\") {\n      const end = balanced(\"(\", \")\", str, i);\n\n      // False positive on matching brackets.\n      if (end > -1) {\n        pattern = str.slice(i + 1, end - 1);\n        i = end;\n\n        if (pattern[0] === \"?\") {\n          throw new TypeError(\"Path pattern must be a capturing group\");\n        }\n\n        if (/\\((?=[^?])/.test(pattern)) {\n          const validPattern = pattern.replace(/\\((?=[^?])/, \"(?:\");\n\n          throw new TypeError(\n            `Capturing groups are not allowed in pattern, use a non-capturing group: (${validPattern})`\n          );\n        }\n      }\n    }\n\n    // Add regular characters to the path string.\n    if (name === \"\" && pattern === \"\") {\n      path += str[i++];\n      isEscaped = false;\n      continue;\n    }\n\n    // Extract the final character from `path` for the prefix.\n    if (path.length && !isEscaped) {\n      const char = path[path.length - 1];\n      const matches = whitelist ? whitelist.indexOf(char) > -1 : true;\n\n      if (matches) {\n        prefix = char;\n        path = path.slice(0, -1);\n      }\n    }\n\n    // Push the current path onto the list of tokens.\n    if (path.length) {\n      tokens.push(path);\n      path = \"\";\n    }\n\n    const repeat = str[i] === \"+\" || str[i] === \"*\";\n    const optional = str[i] === \"?\" || str[i] === \"*\";\n    const delimiter = prefix || defaultDelimiter;\n\n    // Increment `i` past modifier token.\n    if (repeat || optional) i++;\n\n    tokens.push({\n      name: name || key++,\n      prefix,\n      delimiter,\n      optional,\n      repeat,\n      pattern:\n        pattern ||\n        `[^${escapeString(\n          delimiter === defaultDelimiter\n            ? delimiter\n            : delimiter + defaultDelimiter\n        )}]+?`\n    });\n  }\n\n  if (path.length) tokens.push(path);\n\n  return tokens;\n}\n\nexport interface TokensToFunctionOptions {\n  /**\n   * When `true` the regexp will be case sensitive. (default: `false`)\n   */\n  sensitive?: boolean;\n  /**\n   * Function for encoding input strings for output.\n   */\n  encode?: (value: string, token: Key) => string;\n  /**\n   * When `false` the function can produce an invalid (unmatched) path. (default: `true`)\n   */\n  validate?: boolean;\n}\n\n/**\n * Compile a string to a template function for the path.\n */\nexport function compile<P extends object = object>(\n  str: string,\n  options?: ParseOptions & TokensToFunctionOptions\n) {\n  return tokensToFunction<P>(parse(str, options), options);\n}\n\nexport type PathFunction<P extends object = object> = (data?: P) => string;\n\n/**\n * Expose a method for transforming tokens into the path function.\n */\nexport function tokensToFunction<P extends object = object>(\n  tokens: Token[],\n  options: TokensToFunctionOptions = {}\n): PathFunction<P> {\n  const reFlags = flags(options);\n  const { encode = (x: string) => x, validate = true } = options;\n\n  // Compile all the tokens into regexps.\n  const matches = tokens.map(token => {\n    if (typeof token === \"object\") {\n      return new RegExp(`^(?:${token.pattern})$`, reFlags);\n    }\n  });\n\n  return (data: Record<string, any> | null | undefined) => {\n    let path = \"\";\n\n    for (let i = 0; i < tokens.length; i++) {\n      const token = tokens[i];\n\n      if (typeof token === \"string\") {\n        path += token;\n        continue;\n      }\n\n      const value = data ? data[token.name] : undefined;\n\n      if (Array.isArray(value)) {\n        if (!token.repeat) {\n          throw new TypeError(\n            `Expected \"${token.name}\" to not repeat, but got an array`\n          );\n        }\n\n        if (value.length === 0) {\n          if (token.optional) continue;\n\n          throw new TypeError(`Expected \"${token.name}\" to not be empty`);\n        }\n\n        for (let j = 0; j < value.length; j++) {\n          const segment = encode(value[j], token);\n\n          if (validate && !(matches[i] as RegExp).test(segment)) {\n            throw new TypeError(\n              `Expected all \"${token.name}\" to match \"${token.pattern}\", but got \"${segment}\"`\n            );\n          }\n\n          path += (j === 0 ? token.prefix : token.delimiter) + segment;\n        }\n\n        continue;\n      }\n\n      if (typeof value === \"string\" || typeof value === \"number\") {\n        const segment = encode(String(value), token);\n\n        if (validate && !(matches[i] as RegExp).test(segment)) {\n          throw new TypeError(\n            `Expected \"${token.name}\" to match \"${token.pattern}\", but got \"${segment}\"`\n          );\n        }\n\n        path += token.prefix + segment;\n        continue;\n      }\n\n      if (token.optional) continue;\n\n      const typeOfMessage = token.repeat ? \"an array\" : \"a string\";\n      throw new TypeError(`Expected \"${token.name}\" to be ${typeOfMessage}`);\n    }\n\n    return path;\n  };\n}\n\nexport interface RegexpToFunctionOptions {\n  /**\n   * Function for decoding strings for params.\n   */\n  decode?: (value: string, token: Key) => string;\n}\n\n/**\n * A match result contains data about the path match.\n */\nexport interface MatchResult<P extends object = object> {\n  path: string;\n  index: number;\n  params: P;\n}\n\n/**\n * A match is either `false` (no match) or a match result.\n */\nexport type Match<P extends object = object> = false | MatchResult<P>;\n\n/**\n * The match function takes a string and returns whether it matched the path.\n */\nexport type MatchFunction<P extends object = object> = (\n  path: string\n) => Match<P>;\n\n/**\n * Create path match function from `path-to-regexp` spec.\n */\nexport function match<P extends object = object>(\n  str: Path,\n  options?: ParseOptions & TokensToRegexpOptions & RegexpToFunctionOptions\n) {\n  const keys: Key[] = [];\n  const re = pathToRegexp(str, keys, options);\n  return regexpToFunction<P>(re, keys, options);\n}\n\n/**\n * Create a path match function from `path-to-regexp` output.\n */\nexport function regexpToFunction<P extends object = object>(\n  re: RegExp,\n  keys: Key[],\n  options: RegexpToFunctionOptions = {}\n): MatchFunction<P> {\n  const { decode = (x: string) => x } = options;\n\n  return function(pathname: string) {\n    const m = re.exec(pathname);\n    if (!m) return false;\n\n    const { 0: path, index } = m;\n    const params = Object.create(null);\n\n    for (let i = 1; i < m.length; i++) {\n      // tslint:disable-next-line\n      if (m[i] === undefined) continue;\n\n      const key = keys[i - 1];\n\n      if (key.repeat) {\n        params[key.name] = m[i].split(key.delimiter).map(value => {\n          return decode(value, key);\n        });\n      } else {\n        params[key.name] = decode(m[i], key);\n      }\n    }\n\n    return { path, index, params };\n  };\n}\n\n/**\n * Escape a regular expression string.\n */\nfunction escapeString(str: string) {\n  return str.replace(/([.+*?=^!:${}()[\\]|/\\\\])/g, \"\\\\$1\");\n}\n\n/**\n * Get the flags for a regexp from the options.\n */\nfunction flags(options?: { sensitive?: boolean }) {\n  return options && options.sensitive ? \"\" : \"i\";\n}\n\n/**\n * Metadata about a key.\n */\nexport interface Key {\n  name: string | number;\n  prefix: string;\n  delimiter: string;\n  optional: boolean;\n  repeat: boolean;\n  pattern: string;\n}\n\n/**\n * A token is a string (nothing special) or key metadata (capture group).\n */\nexport type Token = string | Key;\n\n/**\n * Pull out keys from a regexp.\n */\nfunction regexpToRegexp(path: RegExp, keys?: Key[]): RegExp {\n  if (!keys) return path;\n\n  // Use a negative lookahead to match only capturing groups.\n  const groups = path.source.match(/\\((?!\\?)/g);\n\n  if (groups) {\n    for (let i = 0; i < groups.length; i++) {\n      keys.push({\n        name: i,\n        prefix: \"\",\n        delimiter: \"\",\n        optional: false,\n        repeat: false,\n        pattern: \"\"\n      });\n    }\n  }\n\n  return path;\n}\n\n/**\n * Transform an array into a regexp.\n */\nfunction arrayToRegexp(\n  paths: Array<string | RegExp>,\n  keys?: Key[],\n  options?: TokensToRegexpOptions & ParseOptions\n): RegExp {\n  const parts = paths.map(path => pathToRegexp(path, keys, options).source);\n  return new RegExp(`(?:${parts.join(\"|\")})`, flags(options));\n}\n\n/**\n * Create a path regexp from string input.\n */\nfunction stringToRegexp(\n  path: string,\n  keys?: Key[],\n  options?: TokensToRegexpOptions & ParseOptions\n) {\n  return tokensToRegexp(parse(path, options), keys, options);\n}\n\nexport interface TokensToRegexpOptions {\n  /**\n   * When `true` the regexp will be case sensitive. (default: `false`)\n   */\n  sensitive?: boolean;\n  /**\n   * When `true` the regexp allows an optional trailing delimiter to match. (default: `false`)\n   */\n  strict?: boolean;\n  /**\n   * When `true` the regexp will match to the end of the string. (default: `true`)\n   */\n  end?: boolean;\n  /**\n   * When `true` the regexp will match from the beginning of the string. (default: `true`)\n   */\n  start?: boolean;\n  /**\n   * Sets the final character for non-ending optimistic matches. (default: `/`)\n   */\n  delimiter?: string;\n  /**\n   * List of characters that can also be \"end\" characters.\n   */\n  endsWith?: string | string[];\n  /**\n   * Encode path tokens for use in the `RegExp`.\n   */\n  encode?: (value: string) => string;\n}\n\n/**\n * Expose a function for taking tokens and returning a RegExp.\n */\nexport function tokensToRegexp(\n  tokens: Token[],\n  keys?: Key[],\n  options: TokensToRegexpOptions = {}\n) {\n  const {\n    strict,\n    start = true,\n    end = true,\n    delimiter = DEFAULT_DELIMITER,\n    encode = (x: string) => x\n  } = options;\n  const endsWith = (typeof options.endsWith === \"string\"\n    ? options.endsWith.split(\"\")\n    : options.endsWith || []\n  )\n    .map(escapeString)\n    .concat(\"$\")\n    .join(\"|\");\n  let route = start ? \"^\" : \"\";\n\n  // Iterate over the tokens and create our regexp string.\n  for (const token of tokens) {\n    if (typeof token === \"string\") {\n      route += escapeString(encode(token));\n    } else {\n      const capture = token.repeat\n        ? `(?:${token.pattern})(?:${escapeString(token.delimiter)}(?:${\n            token.pattern\n          }))*`\n        : token.pattern;\n\n      if (keys) keys.push(token);\n\n      if (token.optional) {\n        if (!token.prefix) {\n          route += `(${capture})?`;\n        } else {\n          route += `(?:${escapeString(token.prefix)}(${capture}))?`;\n        }\n      } else {\n        route += `${escapeString(token.prefix)}(${capture})`;\n      }\n    }\n  }\n\n  if (end) {\n    if (!strict) route += `(?:${escapeString(delimiter)})?`;\n\n    route += endsWith === \"$\" ? \"$\" : `(?=${endsWith})`;\n  } else {\n    const endToken = tokens[tokens.length - 1];\n    const isEndDelimited =\n      typeof endToken === \"string\"\n        ? endToken[endToken.length - 1] === delimiter\n        : // tslint:disable-next-line\n          endToken === undefined;\n\n    if (!strict) {\n      route += `(?:${escapeString(delimiter)}(?=${endsWith}))?`;\n    }\n\n    if (!isEndDelimited) {\n      route += `(?=${escapeString(delimiter)}|${endsWith})`;\n    }\n  }\n\n  return new RegExp(route, flags(options));\n}\n\n/**\n * Supported `path-to-regexp` input types.\n */\nexport type Path = string | RegExp | Array<string | RegExp>;\n\n/**\n * Normalize the given path string, returning a regular expression.\n *\n * An empty array can be passed in for the keys, which will hold the\n * placeholder key descriptions. For example, using `/user/:id`, `keys` will\n * contain `[{ name: 'id', delimiter: '/', optional: false, repeat: false }]`.\n */\nexport function pathToRegexp(\n  path: Path,\n  keys?: Key[],\n  options?: TokensToRegexpOptions & ParseOptions\n) {\n  if (path instanceof RegExp) {\n    return regexpToRegexp(path, keys);\n  }\n\n  if (Array.isArray(path)) {\n    return arrayToRegexp(path, keys, options);\n  }\n\n  return stringToRegexp(path, keys, options);\n}\n","const assoc = (obj, attr, val) => { obj[attr] = val; return obj }\r\nconst isArray = Array.isArray\r\n\r\nexport const keys = Object.keys\r\n\r\nexport const clone = obj =>\r\n  obj\r\n    ? isArray(obj)\r\n      ? obj.slice(0)\r\n      : extend({}, obj)\r\n    : obj\r\n\r\nexport const pick = (obj, attrs) =>\r\n  attrs.reduce((acc, attr) =>\r\n    obj[attr] === undefined\r\n      ? acc\r\n      : assoc(acc, attr, obj[attr]), {})\r\n\r\nexport const isEqual = (obj1, obj2) => {\r\n  const keys1 = keys(obj1)\r\n  return keys1.length === keys(obj2).length &&\r\n    keys1.every(key => obj2[key] === obj1[key])\r\n}\r\n\r\nexport const extend = Object.assign\r\n","export default function invariant (condition, format, ...args) {\r\n  if (!condition) {\r\n    let argIndex = 0\r\n    throw new Error(\r\n      'Invariant Violation: ' +\r\n      format.replace(/%s/g, () => args[argIndex++])\r\n    )\r\n  }\r\n}\r\n","import invariant from './invariant'\r\nimport { pathToRegexp } from 'path-to-regexp'\r\n\r\nconst paramInjectMatcher = /:([a-zA-Z_$][a-zA-Z0-9_$?]*[?+*]?)/g\r\nconst specialParamChars = /[+*?]$/g\r\nconst queryMatcher = /\\?(.+)/\r\n\r\nconst _compiledPatterns = {}\r\n\r\nfunction compilePattern (pattern) {\r\n  if (!(pattern in _compiledPatterns)) {\r\n    const paramNames = []\r\n    const re = pathToRegexp(pattern, paramNames)\r\n\r\n    _compiledPatterns[pattern] = {\r\n      matcher: re,\r\n      paramNames: paramNames.map(p => p.name)\r\n    }\r\n  }\r\n\r\n  return _compiledPatterns[pattern]\r\n}\r\n\r\n/**\r\n * Returns an array of the names of all parameters in the given pattern.\r\n */\r\nexport function extractParamNames (pattern) {\r\n  return compilePattern(pattern).paramNames\r\n}\r\n\r\n/**\r\n * Extracts the portions of the given URL path that match the given pattern\r\n * and returns an object of param name => value pairs. Returns null if the\r\n * pattern does not match the given path.\r\n */\r\nexport function extractParams (pattern, path) {\r\n  const cp = compilePattern(pattern)\r\n  const matcher = cp.matcher\r\n  const paramNames = cp.paramNames\r\n  const match = path.match(matcher)\r\n\r\n  if (!match) {\r\n    return null\r\n  }\r\n\r\n  const params = {}\r\n\r\n  paramNames.forEach(function (paramName, index) {\r\n    params[paramName] = match[index + 1] && decodeURIComponent(match[index + 1])\r\n  })\r\n\r\n  return params\r\n}\r\n\r\n/**\r\n * Returns a version of the given route path with params interpolated. Throws\r\n * if there is a dynamic segment of the route path for which there is no param.\r\n */\r\nexport function injectParams (pattern, params) {\r\n  params = params || {}\r\n\r\n  return pattern.replace(paramInjectMatcher, function (match, param) {\r\n    const paramName = param.replace(specialParamChars, '')\r\n    const lastChar = param.slice(-1)\r\n\r\n    // If param is optional don't check for existence\r\n    if (lastChar === '?' || lastChar === '*') {\r\n      if (params[paramName] == null) {\r\n        return ''\r\n      }\r\n    } else {\r\n      invariant(\r\n        params[paramName] != null,\r\n        \"Missing '%s' parameter for path '%s'\",\r\n        paramName, pattern\r\n      )\r\n    }\r\n\r\n    let paramValue = encodeURIComponent(params[paramName])\r\n    if (lastChar === '*' || lastChar === '+') {\r\n      // restore / for splats\r\n      paramValue = paramValue.replace('%2F', '/')\r\n    }\r\n    return paramValue\r\n  })\r\n}\r\n\r\n/**\r\n * Returns an object that is the result of parsing any query string contained\r\n * in the given path, null if the path contains no query string.\r\n */\r\nexport function extractQuery (qs, path) {\r\n  const match = path.match(queryMatcher)\r\n  return match && qs.parse(match[1])\r\n}\r\n\r\n/**\r\n * Returns a version of the given path with the parameters in the given\r\n * query merged into the query string.\r\n */\r\nexport function withQuery (qs, path, query) {\r\n  const queryString = qs.stringify(query, { indices: false })\r\n\r\n  if (queryString) {\r\n    return withoutQuery(path) + '?' + queryString\r\n  }\r\n\r\n  return path\r\n}\r\n\r\n/**\r\n * Returns a version of the given path without the query string.\r\n */\r\nexport function withoutQuery (path) {\r\n  return path.replace(queryMatcher, '')\r\n}\r\n","/**\r\n* Bind `el` event `type` to `fn`.\r\n*\r\n* @param {Element} el\r\n* @param {String} type\r\n* @param {Function} fn\r\n* @return {Function}\r\n* @api public\r\n*/\r\n\r\nexport function bindEvent (el, type, fn) {\r\n  el.addEventListener(type, fn)\r\n  return fn\r\n}\r\n\r\n/**\r\n* Unbind `el` event `type`'s callback `fn`.\r\n*\r\n* @param {Element} el\r\n* @param {String} type\r\n* @param {Function} fn\r\n* @return {Function}\r\n* @api public\r\n*/\r\n\r\nexport function unbindEvent (el, type, fn) {\r\n  el.removeEventListener(type, fn)\r\n  return fn\r\n}\r\n","/* eslint-disable */\r\n// LocationBar module extracted from Backbone.js 1.1.0\r\n//\r\n// the dependency on backbone, underscore and jquery have been removed to turn\r\n// this into a small standalone library for handling browser's history API\r\n// cross browser and with a fallback to hashchange events or polling.\r\n\r\nimport {extend} from '../utils.js'\r\nimport {bindEvent, unbindEvent} from '../events.js'\r\n\r\n// this is mostly original code with minor modifications\r\n// to avoid dependency on 3rd party libraries\r\n//\r\n// Backbone.History\r\n// ----------------\r\n\r\n// Handles cross-browser history management, based on either\r\n// [pushState](http://diveintohtml5.info/history.html) and real URLs, or\r\n// [onhashchange](https://developer.mozilla.org/en-US/docs/DOM/window.onhashchange)\r\n// and URL fragments.\r\nclass History {\r\n  constructor() {\r\n    this.handlers = [];\r\n    this.checkUrl = this.checkUrl.bind(this);\r\n    this.location = window.location;\r\n    this.history = window.history;\r\n  }\r\n\r\n  // Set up all inheritable **Backbone.History** properties and methods.\r\n  // Are we at the app root?\r\n  atRoot() {\r\n    return this.location.pathname.replace(/[^\\/]$/, '$&/') === this.root;\r\n  }\r\n\r\n  // Gets the true hash value. Cannot use location.hash directly due to bug\r\n  // in Firefox where location.hash will always be decoded.\r\n  getHash() {\r\n    const match = this.location.href.match(/#(.*)$/);\r\n    return match ? match[1] : '';\r\n  }\r\n\r\n  // Get the cross-browser normalized URL fragment, either from the URL,\r\n  // the hash, or the override.\r\n  getFragment(fragment, forcePushState) {\r\n    if (fragment == null) {\r\n      if (this._hasPushState || !this._wantsHashChange || forcePushState) {\r\n        fragment = decodeURI(this.location.pathname + this.location.search);\r\n        const root = this.root.replace(trailingSlash, '');\r\n        if (!fragment.indexOf(root)) fragment = fragment.slice(root.length);\r\n      } else {\r\n        fragment = this.getHash();\r\n      }\r\n    }\r\n    return fragment.replace(routeStripper, '');\r\n  }\r\n\r\n  // Start the hash change handling, returning `true` if the current URL matches\r\n  // an existing route, and `false` otherwise.\r\n  start(options = {}) {\r\n    // MODIFICATION OF ORIGINAL BACKBONE.HISTORY\r\n    // if (History.started) throw new Error(\"LocationBar has already been started\");\r\n    // History.started = true;\r\n    this.started = true;\r\n\r\n    // Figure out the initial configuration.\r\n    // Is pushState desired ... is it available?\r\n    this.options          = extend({root: '/'}, options);\r\n    this.location         = this.options.location || this.location;\r\n    this.history          = this.options.history || this.history;\r\n    this.root             = this.options.root;\r\n    this._wantsHashChange = this.options.hashChange !== false;\r\n    this._wantsPushState  = !!this.options.pushState;\r\n    this._hasPushState    = this._wantsPushState;\r\n    const fragment        = this.getFragment();\r\n\r\n    // Normalize root to always include a leading and trailing slash.\r\n    this.root = (`/${this.root}/`).replace(rootStripper, '/');\r\n\r\n    // Depending on whether we're using pushState or hashes, and whether\r\n    // 'onhashchange' is supported, determine how we check the URL state.\r\n    bindEvent(window, this._hasPushState ? 'popstate' : 'hashchange', this.checkUrl);\r\n\r\n    // Determine if we need to change the base url, for a pushState link\r\n    // opened by a non-pushState browser.\r\n    this.fragment = fragment;\r\n    const loc = this.location;\r\n\r\n    // Transition from hashChange to pushState or vice versa if both are\r\n    // requested.\r\n    if (this._wantsHashChange && this._wantsPushState) {\r\n\r\n      // If we've started off with a route from a `pushState`-enabled\r\n      // browser, but we're currently in a browser that doesn't support it...\r\n      if (!this._hasPushState && !this.atRoot()) {\r\n        this.fragment = this.getFragment(null, true);\r\n        this.location.replace(`${this.root}#${this.fragment}`);\r\n        // Return immediately as browser will do redirect to new url\r\n        return true;\r\n\r\n      // Or if we've started out with a hash-based route, but we're currently\r\n      // in a browser where it could be `pushState`-based instead...\r\n      } else if (this._hasPushState && this.atRoot() && loc.hash) {\r\n        this.fragment = this.getHash().replace(routeStripper, '');\r\n        this.history.replaceState({}, document.title, this.root + this.fragment);\r\n      }\r\n\r\n    }\r\n\r\n    if (!this.options.silent) return this.loadUrl();\r\n  }\r\n\r\n  // Disable Backbone.history, perhaps temporarily. Not useful in a real app,\r\n  // but possibly useful for unit testing Routers.\r\n  stop() {\r\n    unbindEvent(window, this._hasPushState ? 'popstate' : 'hashchange', this.checkUrl);\r\n    this.started = false;\r\n  }\r\n\r\n  // Add a route to be tested when the fragment changes. Routes added later\r\n  // may override previous routes.\r\n  route(route, callback) {\r\n    this.handlers.unshift({route, callback});\r\n  }\r\n\r\n  // Checks the current URL to see if it has changed, and if it has,\r\n  // calls `loadUrl`.\r\n  checkUrl() {\r\n    const current = this.getFragment();\r\n    if (current === this.fragment) return false;\r\n    this.loadUrl();\r\n  }\r\n\r\n  // Attempt to load the current URL fragment. If a route succeeds with a\r\n  // match, returns `true`. If no defined routes matches the fragment,\r\n  // returns `false`.\r\n  loadUrl(fragment) {\r\n    fragment = this.fragment = this.getFragment(fragment);\r\n    return this.handlers.some(handler => {\r\n      if (handler.route.test(fragment)) {\r\n        handler.callback(fragment);\r\n        return true;\r\n      }\r\n    });\r\n  }\r\n\r\n  // Save a fragment into the hash history, or replace the URL state if the\r\n  // 'replace' option is passed. You are responsible for properly URL-encoding\r\n  // the fragment in advance.\r\n  //\r\n  // The options object can contain `trigger: true` if you wish to have the\r\n  // route callback be fired (not usually desirable), or `replace: true`, if\r\n  // you wish to modify the current URL without adding an entry to the history.\r\n  update(fragment, options) {\r\n    if (!this.started) return false;\r\n    if (!options || options === true) options = {trigger: !!options};\r\n\r\n    let url = this.root + (fragment = this.getFragment(fragment || ''));\r\n\r\n    // Strip the hash for matching.\r\n    fragment = fragment.replace(pathStripper, '');\r\n\r\n    if (this.fragment === fragment) return;\r\n    this.fragment = fragment;\r\n\r\n    // Don't include a trailing slash on the root.\r\n    if (fragment === '' && url !== '/') url = url.slice(0, -1);\r\n\r\n    // If pushState is available, we use it to set the fragment as a real URL.\r\n    if (this._hasPushState) {\r\n      this.history[options.replace ? 'replaceState' : 'pushState']({}, document.title, url);\r\n\r\n    // If hash changes haven't been explicitly disabled, update the hash\r\n    // fragment to store history.\r\n    } else if (this._wantsHashChange) {\r\n      this._updateHash(this.location, fragment, options.replace);\r\n    // If you've told us that you explicitly don't want fallback hashchange-\r\n    // based history, then `update` becomes a page refresh.\r\n    } else {\r\n      return this.location.assign(url);\r\n    }\r\n    if (options.trigger) return this.loadUrl(fragment);\r\n  }\r\n\r\n  // Update the hash location, either replacing the current entry, or adding\r\n  // a new one to the browser history.\r\n  _updateHash(location, fragment, replace) {\r\n    if (replace) {\r\n      const href = location.href.replace(/(javascript:|#).*$/, '');\r\n      location.replace(`${href}#${fragment}`);\r\n    } else {\r\n      // Some browsers require that `hash` contains a leading #.\r\n      location.hash = `#${fragment}`;\r\n    }\r\n  }\r\n\r\n  // add some features to History\r\n\r\n  // a generic callback for any changes\r\n  onChange(callback) {\r\n    this.route(/^(.*?)$/, callback);\r\n  }\r\n\r\n  // checks if the browser has pushstate support\r\n  hasPushState() {\r\n    // MODIFICATION OF ORIGINAL BACKBONE.HISTORY\r\n    if (!this.started) {\r\n      throw new Error(\"only available after LocationBar.start()\");\r\n    }\r\n    return this._hasPushState;\r\n  }\r\n}\r\n\r\n// Cached regex for stripping a leading hash/slash and trailing space.\r\nconst routeStripper = /^[#\\/]|\\s+$/g;\r\n\r\n// Cached regex for stripping leading and trailing slashes.\r\nconst rootStripper = /^\\/+|\\/+$/g;\r\n\r\n// Cached regex for removing a trailing slash.\r\nconst trailingSlash = /\\/$/;\r\n\r\n// Cached regex for stripping urls of hash.\r\nconst pathStripper = /#.*$/;\r\n\r\n\r\n// export\r\nexport default History;\r\n","import { extend } from '../utils'\r\nimport LocationBar from './location-bar'\r\n\r\nclass BrowserLocation {\r\n  constructor (options = {}) {\r\n    this.path = options.path || ''\r\n\r\n    this.options = extend({\r\n      pushState: false,\r\n      root: '/'\r\n    }, options)\r\n\r\n    // we're using the location-bar module for actual\r\n    // URL management\r\n    this.locationBar = new LocationBar()\r\n    this.locationBar.onChange(path => {\r\n      this.handleURL(`/${path || ''}`)\r\n    })\r\n\r\n    this.locationBar.start(options)\r\n  }\r\n\r\n  /**\r\n   * Get the current URL\r\n   */\r\n\r\n  getURL () {\r\n    return this.path\r\n  }\r\n\r\n  /**\r\n   * Set the current URL without triggering any events\r\n   * back to the router. Add a new entry in browser's history.\r\n   */\r\n\r\n  setURL (path, options = {}) {\r\n    if (this.path !== path) {\r\n      this.path = path\r\n      this.locationBar.update(path, extend({ trigger: true }, options))\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Set the current URL without triggering any events\r\n   * back to the router. Replace the latest entry in broser's history.\r\n   */\r\n\r\n  replaceURL (path, options = {}) {\r\n    if (this.path !== path) {\r\n      this.path = path\r\n      this.locationBar.update(path, extend({ trigger: true, replace: true }, options))\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Setup a URL change handler\r\n   * @param  {Function} callback\r\n   */\r\n  onChange (callback) {\r\n    this.changeCallback = callback\r\n  }\r\n\r\n  /**\r\n   * Given a path, generate a URL appending root\r\n   * if pushState is used and # if hash state is used\r\n   */\r\n  formatURL (path) {\r\n    if (this.locationBar.hasPushState()) {\r\n      let rootURL = this.options.root\r\n      if (path !== '') {\r\n        rootURL = rootURL.replace(/\\/$/, '')\r\n      }\r\n      return rootURL + path\r\n    } else {\r\n      if (path[0] === '/') {\r\n        path = path.substr(1)\r\n      }\r\n      return `#${path}`\r\n    }\r\n  }\r\n\r\n  /**\r\n   * When we use pushState with a custom root option,\r\n   * we need to take care of removingRoot at certain points.\r\n   * Specifically\r\n   * - browserLocation.update() can be called with the full URL by router\r\n   * - LocationBar expects all .update() calls to be called without root\r\n   * - this method is public so that we could dispatch URLs without root in router\r\n   */\r\n  removeRoot (url) {\r\n    if (this.options.pushState && this.options.root && this.options.root !== '/') {\r\n      return url.replace(this.options.root, '')\r\n    } else {\r\n      return url\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Stop listening to URL changes and link clicks\r\n   */\r\n  destroy () {\r\n    this.locationBar.stop()\r\n  }\r\n\r\n  /**\r\n    initially, the changeCallback won't be defined yet, but that's good\r\n    because we dont' want to kick off routing right away, the router\r\n    does that later by manually calling this handleURL method with the\r\n    url it reads of the location. But it's important this is called\r\n    first by Backbone, because we wanna set a correct this.path value\r\n\r\n    @private\r\n   */\r\n  handleURL (url) {\r\n    this.path = url\r\n    if (this.changeCallback) {\r\n      this.changeCallback(url)\r\n    }\r\n  }\r\n}\r\n\r\nexport default BrowserLocation\r\n","import { extend } from '../utils'\r\n\r\nclass MemoryLocation {\r\n  constructor ({ path }) {\r\n    this.path = path || ''\r\n  }\r\n\r\n  getURL () {\r\n    return this.path\r\n  }\r\n\r\n  setURL (path, options) {\r\n    if (this.path !== path) {\r\n      this.path = path\r\n      this.handleURL(this.getURL(), options)\r\n    }\r\n  }\r\n\r\n  replaceURL (path, options) {\r\n    if (this.path !== path) {\r\n      this.setURL(path, options)\r\n    }\r\n  }\r\n\r\n  onChange (callback) {\r\n    this.changeCallback = callback\r\n  }\r\n\r\n  handleURL (url, options = {}) {\r\n    this.path = url\r\n    options = extend({ trigger: true }, options)\r\n    if (this.changeCallback && options.trigger) {\r\n      this.changeCallback(url)\r\n    }\r\n  }\r\n\r\n  removeRoot (url) {\r\n    return url\r\n  }\r\n\r\n  formatURL (url) {\r\n    return url\r\n  }\r\n}\r\n\r\nexport default MemoryLocation\r\n","export const TRANSITION_REDIRECTED = 'TransitionRedirected'\r\n\r\nexport const TRANSITION_CANCELLED = 'TransitionCancelled'\r\n","/* eslint-disable promise/param-names */\r\nimport { clone } from './utils'\r\nimport invariant from './invariant'\r\nimport { TRANSITION_CANCELLED, TRANSITION_REDIRECTED } from './constants'\r\n\r\nfunction runError (router, transition, err) {\r\n  router.middleware.forEach((m) => {\r\n    m.error && m.error(transition, err)\r\n  })\r\n}\r\n\r\nexport default function transition (options) {\r\n  options = options || {}\r\n\r\n  const router = options.router\r\n  const log = router.log\r\n  const logError = router.logError\r\n\r\n  const path = options.path\r\n  const match = options.match\r\n  const routes = match.routes\r\n  const params = match.params\r\n  const pathname = match.pathname\r\n  const query = match.query\r\n\r\n  const id = options.id\r\n  const startTime = Date.now()\r\n  log('---')\r\n  log('Transition #' + id, 'to', path)\r\n  log('Transition #' + id, 'routes:', routes.map(r => r.name))\r\n  log('Transition #' + id, 'params:', params)\r\n  log('Transition #' + id, 'query:', query)\r\n\r\n  // create the transition promise\r\n  let resolve, reject\r\n  const promise = new Promise(function (res, rej) {\r\n    resolve = res\r\n    reject = rej\r\n  })\r\n\r\n  // 1. make transition errors loud\r\n  // 2. by adding this handler we make sure\r\n  //    we don't trigger the default 'Potentially\r\n  //    unhandled rejection' for cancellations\r\n  promise.then(function () {\r\n    log('Transition #' + id, 'completed in', (Date.now() - startTime) + 'ms')\r\n  }).catch(function (err) {\r\n    if (err.type !== TRANSITION_REDIRECTED && err.type !== TRANSITION_CANCELLED) {\r\n      log('Transition #' + id, 'FAILED')\r\n      logError(err)\r\n    }\r\n  })\r\n\r\n  let cancelled = false\r\n\r\n  const transition = {\r\n    id: id,\r\n    prev: {\r\n      routes: clone(router.state.routes) || [],\r\n      path: router.state.path || '',\r\n      pathname: router.state.pathname || '',\r\n      params: clone(router.state.params) || {},\r\n      query: clone(router.state.query) || {}\r\n    },\r\n    routes: clone(routes),\r\n    path: path,\r\n    pathname: pathname,\r\n    params: clone(params),\r\n    query: clone(query),\r\n    redirectTo: function (...args) {\r\n      return router.transitionTo(...args)\r\n    },\r\n    retry: function () {\r\n      return router.transitionTo(path)\r\n    },\r\n    cancel: function (err) {\r\n      if (router.state.activeTransition !== transition) {\r\n        return\r\n      }\r\n\r\n      if (transition.isCancelled) {\r\n        return\r\n      }\r\n\r\n      router.state.activeTransition = null\r\n      transition.isCancelled = true\r\n      cancelled = true\r\n\r\n      if (!err) {\r\n        err = new Error(TRANSITION_CANCELLED)\r\n        err.type = TRANSITION_CANCELLED\r\n      }\r\n      if (err.type === TRANSITION_CANCELLED) {\r\n        log('Transition #' + id, 'cancelled')\r\n      }\r\n      if (err.type === TRANSITION_REDIRECTED) {\r\n        log('Transition #' + id, 'redirected')\r\n      }\r\n\r\n      router.middleware.forEach((m) => {\r\n        m.cancel && m.cancel(transition, err)\r\n      })\r\n      reject(err)\r\n    },\r\n    followRedirects: function () {\r\n      return promise.catch(function (reason) {\r\n        if (router.state.activeTransition) {\r\n          return router.state.activeTransition.followRedirects()\r\n        }\r\n        return Promise.reject(reason)\r\n      })\r\n    },\r\n\r\n    then: promise.then.bind(promise),\r\n    catch: promise.catch.bind(promise)\r\n  }\r\n\r\n  router.middleware.forEach((m) => {\r\n    m.before && m.before(transition)\r\n  })\r\n\r\n  // here we handle calls to all of the middlewares\r\n  function callNext (i, prevResult) {\r\n    let middleware\r\n    let middlewareName\r\n    // if transition has been cancelled - nothing left to do\r\n    if (cancelled) {\r\n      return\r\n    }\r\n    // done\r\n    if (i < router.middleware.length) {\r\n      middleware = router.middleware[i]\r\n      middlewareName = middleware.name || 'anonymous'\r\n      log('Transition #' + id, 'resolving middleware:', middlewareName)\r\n      let middlewarePromise\r\n      try {\r\n        middlewarePromise = middleware.resolve ? middleware.resolve(transition, prevResult) : prevResult\r\n        invariant(transition !== middlewarePromise, 'Middleware %s returned a transition which resulted in a deadlock', middlewareName)\r\n      } catch (err) {\r\n        router.state.activeTransition = null\r\n        runError(router, transition, err)\r\n        return reject(err)\r\n      }\r\n      Promise.resolve(middlewarePromise)\r\n        .then(function (result) {\r\n          callNext(i + 1, result)\r\n        })\r\n        .catch(function (err) {\r\n          log('Transition #' + id, 'resolving middleware:', middlewareName, 'FAILED')\r\n          router.state.activeTransition = null\r\n          runError(router, transition, err)\r\n          reject(err)\r\n        })\r\n    } else {\r\n      router.state = {\r\n        activeTransition: null,\r\n        routes,\r\n        path,\r\n        pathname,\r\n        params,\r\n        query\r\n      }\r\n      router.middleware.forEach((m) => {\r\n        m.done && m.done(transition)\r\n      })\r\n      resolve()\r\n    }\r\n  }\r\n\r\n  if (!options.noop) {\r\n    Promise.resolve().then(() => callNext(0))\r\n  } else {\r\n    resolve()\r\n  }\r\n\r\n  if (options.noop) {\r\n    transition.noop = true\r\n  }\r\n\r\n  return transition\r\n}\r\n","export default function defineLogger (router, method, fn) {\r\n  if (fn === true) return\r\n  router[method] = typeof fn === 'function' ? fn : () => {}\r\n}\r\n","export default {\r\n  parse (querystring) {\r\n    return querystring.split('&').reduce((acc, pair) => {\r\n      const parts = pair.split('=')\r\n      acc[parts[0]] = decodeURIComponent(parts[1])\r\n      return acc\r\n    }, {})\r\n  },\r\n\r\n  stringify (params) {\r\n    return Object.keys(params).reduce((acc, key) => {\r\n      if (params[key] !== undefined) {\r\n        acc.push(key + '=' + encodeURIComponent(params[key]))\r\n      }\r\n      return acc\r\n    }, []).join('&')\r\n  }\r\n}\r\n","import { pick, clone, extend, isEqual, keys } from './utils'\r\nimport functionDsl from './function-dsl'\r\nimport arrayDsl from './array-dsl'\r\nimport { withQuery, withoutQuery, injectParams, extractParams, extractParamNames, extractQuery } from './path'\r\nimport invariant from './invariant'\r\nimport BrowserLocation from './locations/browser'\r\nimport MemoryLocation from './locations/memory'\r\nimport transition from './transition'\r\nimport { intercept } from './links'\r\nimport defineLogger from './logger'\r\nimport qs from './qs'\r\nimport { TRANSITION_CANCELLED, TRANSITION_REDIRECTED } from './constants'\r\n\r\nclass Router {\r\n  constructor (options = {}) {\r\n    this.nextId = 1\r\n    this.state = {}\r\n    this.middleware = []\r\n    this.options = extend({\r\n      location: 'browser',\r\n      logError: true,\r\n      qs\r\n    }, options)\r\n    defineLogger(this, 'log', this.options.log)\r\n    defineLogger(this, 'logError', this.options.logError)\r\n    if (options.routes) {\r\n      this.map(options.routes)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Add a middleware\r\n   * @param  {Function} middleware\r\n   * @return {Object}   router\r\n   * @api public\r\n   */\r\n  use (middleware, options = {}) {\r\n    const m = typeof middleware === 'function' ? { resolve: middleware } : middleware\r\n    typeof options.at === 'number' ? this.middleware.splice(options.at, 0, m) : this.middleware.push(m)\r\n    m.create && m.create(this)\r\n    return this\r\n  }\r\n\r\n  /**\r\n   * Add the route map\r\n   * @param  {Function} routes\r\n   * @return {Object}   router\r\n   * @api public\r\n   */\r\n  map (routes) {\r\n    // create the route tree\r\n    this.routes = Array.isArray(routes) ? arrayDsl(routes) : functionDsl(routes)\r\n\r\n    // create the matcher list, which is like a flattened\r\n    // list of routes = a list of all branches of the route tree\r\n    const matchers = this.matchers = []\r\n    // keep track of whether duplicate paths have been created,\r\n    // in which case we'll warn the dev\r\n    const dupes = {}\r\n    // keep track of abstract routes to build index route forwarding\r\n    const abstracts = {}\r\n\r\n    eachBranch({ routes: this.routes }, [], routes => {\r\n      // concatenate the paths of the list of routes\r\n      let path = routes.reduce((memo, r) => // reset if there's a leading slash, otherwise concat\r\n      // and keep resetting the trailing slash\r\n        (r.path[0] === '/' ? r.path : `${memo}/${r.path}`).replace(/\\/$/, ''), '')\r\n      // ensure we have a leading slash\r\n      if (path === '') {\r\n        path = '/'\r\n      }\r\n\r\n      const lastRoute = routes[routes.length - 1]\r\n\r\n      if (lastRoute.options.abstract) {\r\n        abstracts[path] = lastRoute.name\r\n        return\r\n      }\r\n\r\n      if (lastRoute.path === '') {\r\n        let matcher\r\n        matchers.some(m => {\r\n          if (m.path === path) {\r\n            matcher = m\r\n            return true\r\n          }\r\n        })\r\n\r\n        if (matcher) {\r\n          // remap the matcher of a parent route\r\n          matcher.routes = routes\r\n        } else if (abstracts[path]) {\r\n          matchers.push({\r\n            routes,\r\n            name: abstracts[path],\r\n            path\r\n          })\r\n        }\r\n      }\r\n\r\n      // register routes\r\n      matchers.push({\r\n        routes,\r\n        name: lastRoute.name,\r\n        path\r\n      })\r\n\r\n      // dupe detection\r\n      if (dupes[path] && lastRoute.path !== '') {\r\n        throw new Error(`Routes ${dupes[path]} and ${lastRoute.name} have the same url path '${path}'`)\r\n      }\r\n      dupes[path] = lastRoute.name\r\n    })\r\n\r\n    function eachBranch (node, memo, fn) {\r\n      node.routes.forEach(route => {\r\n        fn(memo.concat(route))\r\n\r\n        if (route.routes.length) {\r\n          eachBranch(route, memo.concat(route), fn)\r\n        }\r\n      })\r\n    }\r\n\r\n    return this\r\n  }\r\n\r\n  /**\r\n   * Starts listening to the location changes.\r\n   * @param  {Object}  location (optional)\r\n   * @return {Promise} initial transition\r\n   *\r\n   * @api public\r\n   */\r\n  listen (path) {\r\n    const location = this.location = this.createLocation(path || '')\r\n    // setup the location onChange handler\r\n    location.onChange((url) => {\r\n      const previousUrl = this.state.path\r\n      this.dispatch(url).catch((err) => {\r\n        if (err && err.type === TRANSITION_CANCELLED) {\r\n          // reset the URL in case the transition has been cancelled\r\n          this.location.replaceURL(previousUrl, { trigger: false })\r\n        }\r\n        return err\r\n      })\r\n    })\r\n    // and also kick off the initial transition\r\n    return this.dispatch(location.getURL())\r\n  }\r\n\r\n  /**\r\n   * Transition to a different route. Passe in url or a route name followed by params and query\r\n   * @param  {String} url     url or route name\r\n   * @param  {Object} params  Optional\r\n   * @param  {Object} query   Optional\r\n   * @return {Object}         transition\r\n   *\r\n   * @api public\r\n   */\r\n  transitionTo (name, params, query) {\r\n    if (this.state.activeTransition) {\r\n      return this.replaceWith(name, params, query)\r\n    }\r\n    return this.doTransition('setURL', name, params, query)\r\n  }\r\n\r\n  /**\r\n   * Like transitionTo, but doesn't leave an entry in the browser's history,\r\n   * so clicking back will skip this route\r\n   * @param  {String} url     url or route name followed by params and query\r\n   * @param  {Object} params  Optional\r\n   * @param  {Object} query   Optional\r\n   * @return {Object}         transition\r\n   *\r\n   * @api public\r\n   */\r\n  replaceWith (name, params, query) {\r\n    return this.doTransition('replaceURL', name, params, query)\r\n  }\r\n\r\n  /**\r\n   * Create an href\r\n   * @param  {String} name   target route name\r\n   * @param  {Object} params\r\n   * @param  {Object} query\r\n   * @return {String}        href\r\n   *\r\n   * @api public\r\n   */\r\n  generate (name, params, query) {\r\n    invariant(this.location, 'call .listen() before using .generate()')\r\n    let matcher\r\n\r\n    query = query || {}\r\n\r\n    this.matchers.forEach(m => {\r\n      if (m.name === name) {\r\n        matcher = m\r\n      }\r\n    })\r\n\r\n    if (!matcher) {\r\n      throw new Error(`No route is named ${name}`)\r\n    }\r\n\r\n    const url = withQuery(this.options.qs, injectParams(matcher.path, params), query)\r\n    return this.location.formatURL(url)\r\n  }\r\n\r\n  /**\r\n   * Stop listening to URL changes\r\n   * @api public\r\n   */\r\n  destroy () {\r\n    if (this.location && this.location.destroy) {\r\n      this.location.destroy()\r\n    }\r\n    if (this.state.activeTransition) {\r\n      this.state.activeTransition.cancel()\r\n    }\r\n    this.state = {}\r\n    this.middleware.forEach(m => {\r\n      m.destroy && m.destroy(this)\r\n    })\r\n  }\r\n\r\n  /**\r\n   * Check if the given route/params/query combo is active\r\n   * @param  {String} name   target route name\r\n   * @param  {Object} params\r\n   * @param  {Object} query\r\n   * @return {Boolean}\r\n   *\r\n   * @api public\r\n   */\r\n  isActive (name, params, query, exact) {\r\n    const activeRoutes = this.state.routes || []\r\n    const activeParams = this.state.params\r\n    const activeQuery = this.state.query\r\n\r\n    let isActive = activeRoutes.some(route => route.name === name) &&\r\n      (!exact || activeRoutes[activeRoutes.length - 1].name === name)\r\n    isActive = isActive && (!params || keys(params).every(key => activeParams[key] === params[key]))\r\n    isActive = isActive && (!query || keys(query).every(key => activeQuery[key] === query[key]))\r\n\r\n    return isActive\r\n  }\r\n\r\n  /**\r\n   * @api private\r\n   */\r\n  doTransition (method, name, params, query) {\r\n    const previousUrl = this.location.getURL()\r\n\r\n    let url = name\r\n    if (url[0] !== '/') {\r\n      url = this.generate(name, params, query)\r\n      url = url.replace(/^#/, '/')\r\n    }\r\n\r\n    if (this.options.pushState) {\r\n      url = this.location.removeRoot(url)\r\n    }\r\n\r\n    const transition = this.dispatch(url)\r\n\r\n    transition.catch((err) => {\r\n      if (err && err.type === TRANSITION_CANCELLED) {\r\n        // reset the URL in case the transition has been cancelled\r\n        this.location.replaceURL(previousUrl, { trigger: false })\r\n      }\r\n      return err\r\n    })\r\n\r\n    this.location[method](url, { trigger: false })\r\n\r\n    return transition\r\n  }\r\n\r\n  /**\r\n   * Match the path against the routes\r\n   * @param  {String} path\r\n   * @return {Object} the list of matching routes and params\r\n   *\r\n   * @api private\r\n   */\r\n  match (path) {\r\n    path = (path || '').replace(/\\/$/, '') || '/'\r\n    let params\r\n    let routes = []\r\n    const pathWithoutQuery = withoutQuery(path)\r\n    const qs = this.options.qs\r\n    this.matchers.some(matcher => {\r\n      params = extractParams(matcher.path, pathWithoutQuery)\r\n      if (params) {\r\n        routes = matcher.routes\r\n        return true\r\n      }\r\n    })\r\n    return {\r\n      routes: routes.map(descriptor),\r\n      params: params || {},\r\n      pathname: pathWithoutQuery,\r\n      query: extractQuery(qs, path) || {}\r\n    }\r\n\r\n    // clone the data (only a shallow clone of options)\r\n    // to make sure the internal route store is not mutated\r\n    // by the middleware. The middleware can mutate data\r\n    // before it gets passed into the resolve middleware, but\r\n    // only within the same transition. New transitions\r\n    // will get to use pristine data.\r\n    function descriptor (route) {\r\n      return {\r\n        name: route.name,\r\n        path: route.path,\r\n        params: pick(params, extractParamNames(route.path)),\r\n        options: clone(route.options)\r\n      }\r\n    }\r\n  }\r\n\r\n  dispatch (path) {\r\n    const match = this.match(path)\r\n    const query = match.query\r\n    const pathname = match.pathname\r\n\r\n    const activeTransition = this.state.activeTransition\r\n\r\n    // if we already have an active transition with all the same\r\n    // params - return that and don't do anything else\r\n    if (activeTransition &&\r\n        activeTransition.pathname === pathname &&\r\n        isEqual(activeTransition.query, query)) {\r\n      return activeTransition\r\n    }\r\n\r\n    // otherwise, cancel the active transition since we're\r\n    // redirecting (or initiating a brand new transition)\r\n    if (activeTransition) {\r\n      const err = new Error(TRANSITION_REDIRECTED)\r\n      err.type = TRANSITION_REDIRECTED\r\n      err.nextPath = path\r\n      activeTransition.cancel(err)\r\n    }\r\n\r\n    // if there is no active transition, check if\r\n    // this is a noop transition, in which case, return\r\n    // a transition to respect the function signature,\r\n    // but don't actually run any of the middleware\r\n    if (!activeTransition) {\r\n      if (this.state.pathname === pathname &&\r\n          isEqual(this.state.query, query)) {\r\n        return transition({\r\n          id: this.nextId++,\r\n          path,\r\n          match,\r\n          noop: true,\r\n          router: this\r\n        })\r\n      }\r\n    }\r\n\r\n    const t = transition({\r\n      id: this.nextId++,\r\n      path,\r\n      match,\r\n      router: this\r\n    })\r\n\r\n    this.state.activeTransition = t\r\n\r\n    return t\r\n  }\r\n\r\n  /**\r\n   * Create the default location.\r\n   * This is used when no custom location is passed to\r\n   * the listen call.\r\n   * @return {Object} location\r\n   *\r\n   * @api private\r\n   */\r\n  createLocation (path) {\r\n    const location = this.options.location\r\n    if (typeof location !== 'string') {\r\n      return location\r\n    }\r\n    if (location === 'browser') {\r\n      return new BrowserLocation(pick(this.options, ['pushState', 'root']))\r\n    } else if (location === 'memory') {\r\n      return new MemoryLocation({ path })\r\n    } else {\r\n      throw new Error('Location can be `browser`, `memory` or a custom implementation')\r\n    }\r\n  }\r\n\r\n  log (...args) {\r\n    console.info(...args)\r\n  }\r\n\r\n  logError (...args) {\r\n    console.error(...args)\r\n  }\r\n}\r\n\r\nfunction defaultClickHandler (event, link, router) {\r\n  event.preventDefault()\r\n  router.transitionTo(router.location.removeRoot(link.getAttribute('href')))\r\n}\r\n\r\n/**\r\n * Helper to intercept links when using pushState but server is not configured for it\r\n * Link clicks are handled via the router avoiding browser page reload\r\n */\r\nfunction interceptLinks (router, el = document, clickHandler = defaultClickHandler) {\r\n  return intercept(el, (event, link) => clickHandler(event, link, router))\r\n}\r\n\r\nexport { Router, interceptLinks }\r\n","\r\nexport default function arrayDsl (routes) {\r\n  const result = []\r\n\r\n  routes.forEach(({ name, children, ...options }) => {\r\n    if (typeof options.path !== 'string') {\r\n      const parts = name.split('.')\r\n      options.path = parts[parts.length - 1]\r\n    }\r\n    result.push(\r\n      {\r\n        name,\r\n        path: options.path,\r\n        options,\r\n        routes: children ? arrayDsl(children) : []\r\n      }\r\n    )\r\n  })\r\n\r\n  return result\r\n}\r\n","/* eslint-disable standard/no-callback-literal */\r\nimport invariant from './invariant'\r\n\r\nexport default function functionDsl (callback) {\r\n  let ancestors = []\r\n  const matches = {}\r\n  const names = {}\r\n\r\n  callback(function route (name, options, childrenCallback) {\r\n    let routes\r\n\r\n    invariant(!names[name], 'Route names must be unique, but route \"%s\" is declared multiple times', name)\r\n\r\n    names[name] = true\r\n\r\n    if (arguments.length === 1) {\r\n      options = {}\r\n    }\r\n\r\n    if (arguments.length === 2 && typeof options === 'function') {\r\n      childrenCallback = options\r\n      options = {}\r\n    }\r\n\r\n    if (typeof options.path !== 'string') {\r\n      const parts = name.split('.')\r\n      options.path = parts[parts.length - 1]\r\n    }\r\n\r\n    // go to the next level\r\n    if (childrenCallback) {\r\n      ancestors = ancestors.concat(name)\r\n      childrenCallback()\r\n      routes = pop()\r\n      ancestors.splice(-1)\r\n    }\r\n\r\n    // add the node to the tree\r\n    push({\r\n      name: name,\r\n      path: options.path,\r\n      routes: routes || [],\r\n      options: options\r\n    })\r\n  })\r\n\r\n  function pop () {\r\n    return matches[currentLevel()] || []\r\n  }\r\n\r\n  function push (route) {\r\n    const level = currentLevel()\r\n    matches[level] = matches[level] || []\r\n    matches[level].push(route)\r\n  }\r\n\r\n  function currentLevel () {\r\n    return ancestors.join('.')\r\n  }\r\n\r\n  return pop()\r\n}\r\n","const resolved = Promise.resolve()\r\nlet routeElMap = Object.create(null)\r\nlet routeComponentMap = Object.create(null)\r\nlet router, rootOutlet, rootOutletEl\r\n\r\nfunction parseNumber (value) {\r\n  const n = parseFloat(value)\r\n  const isNumeric = value == n // eslint-disable-line eqeqeq\r\n  return isNumeric ? n : value\r\n}\r\n\r\nclass TransitionValue {\r\n  constructor (key, format) {\r\n    this.key = key\r\n    this.format = format\r\n  }\r\n\r\n  value (transition) {\r\n    let result = this.getValue(transition)\r\n    if (result !== undefined) {\r\n      const format = this.format\r\n      if (format === 'number') {\r\n        result = parseNumber(result)\r\n      } else if (typeof format === 'function') {\r\n        result = format(result)\r\n      }\r\n    }\r\n    return result\r\n  }\r\n}\r\n\r\nclass ParamValue extends TransitionValue {\r\n  getValue (transition) {\r\n    return transition.params[this.key]\r\n  }\r\n}\r\n\r\nclass QueryValue extends TransitionValue {\r\n  getValue (transition) {\r\n    return transition.query[this.key]\r\n  }\r\n}\r\n\r\nexport function paramValue (key, format) {\r\n  return new ParamValue(key, format)\r\n}\r\n\r\nexport function queryValue (key, format) {\r\n  return new QueryValue(key, format)\r\n}\r\n\r\nexport function getRouteEl (route) {\r\n  return routeElMap[route.name]\r\n}\r\n\r\nfunction create (instance) {\r\n  router = instance\r\n  rootOutlet = instance.options.outlet\r\n}\r\n\r\nfunction destroy () {\r\n  router = null\r\n  routeElMap = Object.create(null)\r\n  routeComponentMap = Object.create(null)\r\n  rootOutletEl = null\r\n}\r\n\r\nfunction isEqual (obj1, obj2) {\r\n  const keys1 = Object.keys(obj1)\r\n  return keys1.length === Object.keys(obj2).length &&\r\n    keys1.every(key => obj2[key] === obj1[key])\r\n}\r\n\r\nfunction getOutlet (el) {\r\n  const renderRoot = el.shadowRoot || el\r\n  return renderRoot.querySelector(el.constructor.outlet || 'router-outlet')\r\n}\r\n\r\nfunction resolveRootOutlet () {\r\n  if (rootOutletEl) return rootOutletEl\r\n  if (!rootOutlet) return document.body\r\n  rootOutletEl = typeof rootOutlet === 'string' ? document.querySelector(rootOutlet) : rootOutlet\r\n  if (!rootOutletEl) {\r\n    throw new Error(`slick-router(wc): Invalid outlet option ${rootOutlet}`)\r\n  }\r\n  return rootOutletEl\r\n}\r\n\r\nfunction getParentEl (transition, parentIndex) {\r\n  let parent = transition.routes[parentIndex]\r\n  while (parent) {\r\n    if (parent.options.component) {\r\n      return routeElMap[parent.name]\r\n    }\r\n    parent = transition.routes[--parentIndex]\r\n  }\r\n}\r\n\r\nfunction getChangingIndex (prevRoutes, currentRoutes) {\r\n  let index, prev, current\r\n  const count = Math.max(prevRoutes.length, currentRoutes.length)\r\n  for (index = 0; index < count; index++) {\r\n    prev = prevRoutes[index]\r\n    current = currentRoutes[index]\r\n    if (!(prev && current) || (prev.name !== current.name) || !isEqual(prev.params, current.params)) {\r\n      break\r\n    }\r\n  }\r\n  return index\r\n}\r\n\r\nasync function runLifeCycle (transition, routes, prefix, suffix) {\r\n  for (let i = 0; i < routes.length; i++) {\r\n    let result\r\n    const { route, el } = routes[i]\r\n    const routeMethod = route.options[`${prefix}${suffix}`]\r\n    if (typeof routeMethod === 'function') {\r\n      result = await routeMethod(transition)\r\n      if (result === false) {\r\n        transition.cancel()\r\n      }\r\n    }\r\n    if (transition.isCancelled) break\r\n    const elMethod = el && el[`${prefix}Route${suffix}`]\r\n    if (typeof elMethod === 'function') {\r\n      result = await elMethod.call(el, transition)\r\n      if (result === false) {\r\n        transition.cancel()\r\n      }\r\n    }\r\n    if (transition.isCancelled) break\r\n  }\r\n}\r\n\r\nfunction resolveModule (value) {\r\n  return value && value.__esModule ? value.default : value\r\n}\r\n\r\nasync function resolveComponents (routes) {\r\n  const result = []\r\n\r\n  for (const route of routes) {\r\n    let el = route.options.reuse ? routeElMap[route.name] : undefined\r\n    let Component = route.options.component\r\n    if (!el && Component) {\r\n      if (typeof Component === 'function' && !(Component.prototype instanceof HTMLElement)) {\r\n        Component = routeComponentMap[route.name] || (routeComponentMap[route.name] = resolveModule(await Component(route)))\r\n      }\r\n      el = typeof Component === 'string' ? document.createElement(Component) : new Component()\r\n      routeElMap[route.name] = el\r\n      el.$router = router\r\n    }\r\n    result.push({ el, route })\r\n  }\r\n  return result\r\n}\r\n\r\nfunction applyProperties (transition, el, properties) {\r\n  if (properties) {\r\n    Object.keys(properties).forEach(key => {\r\n      const value = properties[key]\r\n      el[key] = value instanceof TransitionValue ? value.value(transition) : value\r\n    })\r\n  }\r\n}\r\n\r\nconst removedEls = new WeakSet()\r\nconst outletCurrentEl = new WeakMap()\r\n\r\nasync function renderElements (transition, activated, changingIndex) {\r\n  // set properties of not activated elements\r\n  const { path, pathname, routes, params, query } = transition\r\n  const routeState = { path, pathname, routes, params, query }\r\n  for (let k = 0; k < changingIndex; k++) {\r\n    const route = transition.routes[k]\r\n    const el = routeElMap[route.name]\r\n    if (el) {\r\n      el.$route = routeState\r\n      applyProperties(transition, el, route.options.properties)\r\n    }\r\n  }\r\n  for (let i = 0; i < activated.length; i++) {\r\n    const { el, route } = activated[i]\r\n    if (el) {\r\n      const parentEl = getParentEl(transition, changingIndex + i - 1)\r\n      const outletEl = parentEl ? getOutlet(parentEl) : resolveRootOutlet()\r\n      if (outletEl) {\r\n        const currentEl = outletCurrentEl.get(outletEl) || outletEl.firstElementChild\r\n        if (currentEl) {\r\n          outletEl.removeChild(currentEl)\r\n          removedEls.add(currentEl)\r\n        }\r\n        el.$route = routeState\r\n        applyProperties(transition, el, route.options.properties)\r\n        outletEl.appendChild(el)\r\n        outletCurrentEl.set(outletEl, el)\r\n        await (el.updateComplete || resolved)\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nfunction updateDOMTree (activated, deactivated) {\r\n  let parentElRemoved\r\n  for (let routeIndex = deactivated.length - 1; routeIndex >= 0; routeIndex--) {\r\n    const { route, el } = deactivated[routeIndex]\r\n    if (!activated.some(({ route: activeRoute }) => activeRoute.name === route.name)) {\r\n      if (el) {\r\n        // removes only the parent el from the deactivated els\r\n        // and don't remove elements that were queued to be removed\r\n        // necessary for lazy removal done in animations\r\n        if (!parentElRemoved && !removedEls.has(el)) el.remove()\r\n        parentElRemoved = true\r\n      }\r\n      routeElMap[route.name] = undefined\r\n    }\r\n  }\r\n}\r\n\r\nasync function resolve (transition) {\r\n  const prevRoutes = transition.prev.routes\r\n  const changingIndex = getChangingIndex(prevRoutes, transition.routes)\r\n  const deactivated = []\r\n\r\n  // deactivate previous routes from child to parent\r\n  for (let routeIndex = prevRoutes.length - 1; routeIndex >= changingIndex; routeIndex--) {\r\n    const route = prevRoutes[routeIndex]\r\n    deactivated.push({ el: routeElMap[route.name], route })\r\n  }\r\n\r\n  await runLifeCycle(transition, deactivated, 'before', 'Leave')\r\n\r\n  if (transition.isCancelled) return\r\n\r\n  const activated = await resolveComponents(transition.routes.slice(changingIndex))\r\n\r\n  await runLifeCycle(transition, activated, 'before', 'Enter')\r\n\r\n  if (transition.isCancelled) return\r\n\r\n  await renderElements(transition, activated, changingIndex)\r\n\r\n  updateDOMTree(activated, deactivated)\r\n\r\n  transition.activated = activated\r\n  transition.deactivated = deactivated\r\n}\r\n\r\nfunction done (transition) {\r\n  runLifeCycle(transition, transition.deactivated, 'after', 'Leave')\r\n  runLifeCycle(transition, transition.activated, 'after', 'Enter')\r\n}\r\n\r\nexport const wc = {\r\n  create,\r\n  destroy,\r\n  resolve,\r\n  done\r\n}\r\n","const routerLinksData = Symbol('routerLinksData')\r\nconst unbindRouterLinks = Symbol('unbindRouterLinks')\r\nconst resolved = Promise.resolve()\r\nconst linkContainers = new Set()\r\nlet router\r\n\r\n// Make a event delegation handler for the given `eventName` and `selector`\r\n// and attach it to `el`.\r\n// If selector is empty, the listener will be bound to `el`. If not, a\r\n// new handler that will recursively traverse up the event target's DOM\r\n// hierarchy looking for a node that matches the selector. If one is found,\r\n// the event's `delegateTarget` property is set to it and the return the\r\n// result of calling bound `listener` with the parameters given to the\r\n// handler.\r\n\r\nconst delegate = function (el, eventName, selector, listener, context) {\r\n  const handler = function (e) {\r\n    var node = e.target\r\n    for (; node && node !== el; node = node.parentNode) {\r\n      if (node.matches && node.matches(selector)) {\r\n        e.selectorTarget = node\r\n        listener.call(context, e)\r\n      }\r\n    }\r\n  }\r\n\r\n  handler.eventName = eventName\r\n  el.addEventListener(eventName, handler, false)\r\n  return handler\r\n}\r\n\r\nfunction isModifiedEvent (event) {\r\n  return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey)\r\n}\r\n\r\nconst undelegate = function (el, handler) {\r\n  const eventName = handler.eventName\r\n  el.removeEventListener(eventName, handler, false)\r\n}\r\n\r\nfunction mutationHandler (mutations, observer) {\r\n  mutations.forEach(function (mutation) {\r\n    if (mutation.type === 'attributes') {\r\n      const attr = mutation.attributeName\r\n      if (attr.indexOf('param-') === 0 || attr.indexOf('query-') === 0) {\r\n        updateLink(mutation.target, observer.ownerEl)\r\n      }\r\n    } else {\r\n      mutation.addedNodes.forEach(node => {\r\n        if (node.nodeType === 1) {\r\n          if (node.getAttribute('route')) updateLink(node, observer.ownerEl)\r\n          createLinks(observer.ownerEl, node)\r\n        }\r\n      })\r\n    }\r\n  })\r\n}\r\n\r\nconst elementsObserverConfig = { childList: true, subtree: true, attributes: true }\r\n\r\nfunction getAttributeValues (el, prefix, result) {\r\n  const attributes = el.attributes\r\n\r\n  for (let i = 0; i < attributes.length; i++) {\r\n    const attr = attributes[i]\r\n    if (attr.name.indexOf(prefix) === 0) {\r\n      const paramName = attr.name.slice(prefix.length)\r\n      result[paramName] = attr.value\r\n    }\r\n  }\r\n  return result\r\n}\r\n\r\nfunction getDefaults (ownerEl, routeName, propName, routeEl, options) {\r\n  let result = options[propName]\r\n  if (typeof result === 'function') result = result.call(ownerEl, routeName, routeEl)\r\n  return result || {}\r\n}\r\n\r\nfunction getRouteProp (ownerEl, routeName, routeEl, propName, attrPrefix) {\r\n  const options = ownerEl[routerLinksData].options\r\n  const defaults = getDefaults(ownerEl, routeName, propName, routeEl, options)\r\n  const rootEl = routeEl.closest(options.selector || '[routerlinks]')\r\n  if (rootEl) {\r\n    getAttributeValues(rootEl, attrPrefix, defaults)\r\n  }\r\n  return getAttributeValues(routeEl, attrPrefix, defaults)\r\n}\r\n\r\nfunction updateActiveClass (el, routeName, params, query) {\r\n  const activeClass = el.hasAttribute('active-class') ? el.getAttribute('active-class') : 'active'\r\n  if (activeClass) {\r\n    const isActive = router.isActive(routeName, params, query, el.hasAttribute('exact'))\r\n    el.classList.toggle(activeClass, isActive)\r\n  }\r\n}\r\n\r\nfunction updateLink (el, ownerEl) {\r\n  const routeName = el.getAttribute('route')\r\n  if (!routeName) return\r\n  const params = getRouteProp(ownerEl, routeName, el, 'params', 'param-')\r\n  const query = getRouteProp(ownerEl, routeName, el, 'query', 'query-')\r\n  const href = router.generate(routeName, params, query)\r\n  const anchorEl = el.tagName === 'A' ? el : el.querySelector('a')\r\n  if (anchorEl) anchorEl.setAttribute('href', href)\r\n  if (!router.state.activeTransition) {\r\n    updateActiveClass(el, routeName, params, query)\r\n  }\r\n}\r\n\r\nfunction createLinks (ownerEl, rootEl) {\r\n  const routeEls = rootEl.querySelectorAll('[route]')\r\n\r\n  routeEls.forEach(el => {\r\n    updateLink(el, ownerEl)\r\n  })\r\n}\r\n\r\nfunction linkClickHandler (e) {\r\n  if (e.button !== 0 || isModifiedEvent(e)) return\r\n  e.preventDefault()\r\n  const el = e.selectorTarget\r\n  const routeName = el.getAttribute('route')\r\n  if (!routeName) return\r\n  const params = getRouteProp(this, routeName, el, 'params', 'param-')\r\n  const query = getRouteProp(this, routeName, el, 'query', 'query-')\r\n  const method = el.hasAttribute('replace') ? 'replaceWith' : 'transitionTo'\r\n  router[method](routeName, params, query)\r\n}\r\n\r\nexport function bindRouterLinks (ownerEl, options = {}) {\r\n  const { selector = '[routerlinks]' } = options\r\n  const rootEls = selector ? ownerEl.querySelectorAll(selector) : [ownerEl]\r\n  const observer = new MutationObserver(mutationHandler)\r\n  const eventHandlers = []\r\n  observer.ownerEl = ownerEl\r\n  ownerEl[routerLinksData] = { options, rootEls, observer }\r\n  rootEls.forEach(rootEl => {\r\n    eventHandlers.push(delegate(rootEl, 'click', '[route]', linkClickHandler, ownerEl))\r\n    createLinks(ownerEl, rootEl, options)\r\n    observer.observe(rootEl, elementsObserverConfig)\r\n  })\r\n  linkContainers.add(ownerEl)\r\n\r\n  return function () {\r\n    linkContainers.delete(ownerEl)\r\n    eventHandlers.forEach((eventHandler, i) => undelegate(rootEls[i], eventHandler))\r\n  }\r\n}\r\n\r\nconst createClass = (ctor, options = {}) => {\r\n  return class extends ctor {\r\n    connectedCallback () {\r\n      super.connectedCallback && super.connectedCallback()\r\n      const renderWait = this.updateComplete || resolved\r\n      renderWait.then(() => {\r\n        this[unbindRouterLinks] = bindRouterLinks(this, options)\r\n      })\r\n    }\r\n\r\n    disconnectedCallback () {\r\n      super.disconnectedCallback && super.disconnectedCallback()\r\n      if (this[unbindRouterLinks]) {\r\n        this[unbindRouterLinks]()\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport const withRouterLinks = (optionsOrCtorOrDescriptor, options) => {\r\n  // current state of decorators sucks. Lets abuse of duck typing\r\n  if (typeof optionsOrCtorOrDescriptor === 'function') {\r\n    // constructor -> typescript decorator or class mixin\r\n    return createClass(optionsOrCtorOrDescriptor, options)\r\n  }\r\n  if (optionsOrCtorOrDescriptor.kind === 'class') {\r\n    // descriptor -> spec decorator\r\n    const { kind, elements } = optionsOrCtorOrDescriptor\r\n    return {\r\n      kind,\r\n      elements,\r\n      finisher (ctor) {\r\n        return createClass(ctor, options)\r\n      }\r\n    }\r\n  }\r\n  // optionsOrCtorOrDescriptor === options\r\n  return (ctorOrDescriptor) => {\r\n    return withRouterLinks(ctorOrDescriptor, optionsOrCtorOrDescriptor)\r\n  }\r\n}\r\n\r\nfunction create (instance) {\r\n  router = instance\r\n}\r\n\r\nfunction done () {\r\n  linkContainers.forEach(ownerEl => {\r\n    const data = ownerEl[routerLinksData]\r\n    data.rootEls.forEach(rootEl => {\r\n      rootEl.querySelectorAll('[route]').forEach(el => {\r\n        const routeName = el.getAttribute('route')\r\n        if (!routeName) return\r\n        const params = getRouteProp(ownerEl, routeName, el, 'params', 'param-')\r\n        const query = getRouteProp(ownerEl, routeName, el, 'query', 'query-')\r\n        updateActiveClass(el, routeName, params, query)\r\n      })\r\n    })\r\n  })\r\n}\r\n\r\nexport const routerLinks = {\r\n  create,\r\n  done\r\n}\r\n","import 'components/list-errors'\r\nimport { Component, html } from 'components/base'\r\n\r\nclass LoginPage extends Component {\r\n  static observedContexts = ['stores']\r\n\r\n  disconnectedCallback() {\r\n    super.disconnectedCallback()\r\n    this.context.stores.authStore.reset()\r\n  }\r\n\r\n  handleEmailChange = e => {\r\n    this.context.stores.authStore.setEmail(e.target.value)\r\n  }\r\n\r\n  handlePasswordChange = e => {\r\n    this.context.stores.authStore.setPassword(e.target.value)\r\n  }\r\n\r\n  handleSubmitForm = e => {\r\n    e.preventDefault()\r\n    this.context.stores.authStore\r\n      .login()\r\n      .then(() => this.$router.replaceWith('home'))\r\n  }\r\n\r\n  render() {\r\n    const { values, errors, inProgress } = this.context.stores.authStore\r\n\r\n    return html`\r\n      <div class=\"auth-page\">\r\n        <div class=\"container page\">\r\n          <div class=\"row\">\r\n            <div class=\"col-md-6 offset-md-3 col-xs-12\">\r\n              <h1 class=\"text-xs-center\">Sign In</h1>\r\n              <p class=\"text-xs-center\">\r\n                <a url=\"register\">Need an account?</a>\r\n              </p>\r\n              <list-errors .errors=${errors}></list-errors>\r\n              <form @submit=${this.handleSubmitForm}>\r\n                <fieldset>\r\n                  <fieldset class=\"form-group\">\r\n                    <input\r\n                      class=\"form-control form-control-lg\"\r\n                      type=\"email\"\r\n                      placeholder=\"Email\"\r\n                      .value=${values.email}\r\n                      @change=${this.handleEmailChange}\r\n                    />\r\n                  </fieldset>\r\n                  <fieldset class=\"form-group\">\r\n                    <input\r\n                      class=\"form-control form-control-lg\"\r\n                      type=\"password\"\r\n                      placeholder=\"Password\"\r\n                      .value=${values.password}\r\n                      @change=${this.handlePasswordChange}\r\n                    />\r\n                  </fieldset>\r\n                  <button\r\n                    class=\"btn btn-lg btn-primary pull-xs-right\"\r\n                    type=\"submit\"\r\n                    ?disabled=${inProgress}\r\n                  >\r\n                    Sign in\r\n                  </button>\r\n                </fieldset>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    `\r\n  }\r\n}\r\n\r\ncustomElements.define('login-page', LoginPage)\r\n","import { html } from 'lit-html'\r\n\r\nconst Banner = ({ appName, token }) => {\r\n  if (token) {\r\n    return null\r\n  }\r\n  return html`\r\n    <div class=\"banner\">\r\n      <div class=\"container\">\r\n        <h1 class=\"logo-font\">${appName.toLowerCase()}</h1>\r\n        <p>A place to share your knowledge.</p>\r\n      </div>\r\n    </div>\r\n  `\r\n}\r\n\r\nexport default Banner\r\n","import { Component, html, styleMap } from './base'\r\n\r\nconst style = {\r\n  borderRadius: '50%',\r\n  width: '40px',\r\n  height: '40px',\r\n  margin: '90px auto',\r\n  position: 'relative',\r\n  borderTop: '3px solid rgba(0, 0, 0, 0.1)',\r\n  borderRight: '3px solid rgba(0, 0, 0, 0.1)',\r\n  borderBottom: '3px solid rgba(0, 0, 0, 0.1)',\r\n  borderLeft: '3px solid #818a91',\r\n  transform: 'translateZ(0)',\r\n  animation: 'loading-spinner 0.5s infinite linear'\r\n}\r\n\r\nclass LoadingSpinner extends Component {\r\n  render() {\r\n    return html`\r\n      <div class=\"loading-spinner\" style=${styleMap(style)}>\r\n        <style>\r\n          @keyframes loading-spinner {\r\n            0% {\r\n              transform: rotate(0deg);\r\n            }\r\n            100% {\r\n              transform: rotate(360deg);\r\n            }\r\n          }\r\n        </style>\r\n      </div>\r\n    `\r\n  }\r\n}\r\n\r\ncustomElements.define('loading-spinner', LoadingSpinner)\r\n","import '../../components/loading-spinner'\r\nimport { html } from 'lit-html'\r\n\r\nconst Tags = props => {\r\n  const tags = props.tags\r\n  if (tags) {\r\n    return html`\r\n      <div class=\"tag-list\" routerlinks>\r\n        ${tags.map(tag => {\r\n          return html`\r\n            <a\r\n              route=\"home\"\r\n              query-tab=\"tag\"\r\n              query-tag=${tag}\r\n              class=\"tag-default tag-pill\"\r\n              >${tag}</a\r\n            >\r\n          `\r\n        })}\r\n      </div>\r\n    `\r\n  } else {\r\n    return html`\r\n      <loading-spinner></loading-spinner>\r\n    `\r\n  }\r\n}\r\n\r\nexport default Tags\r\n","import { html } from './base'\r\n\r\nconst ListPagination = props => {\r\n  if (props.totalPagesCount < 2) {\r\n    return null\r\n  }\r\n\r\n  const range = []\r\n  for (let i = 0; i < props.totalPagesCount; ++i) {\r\n    range.push(i)\r\n  }\r\n\r\n  return html`\r\n    <nav>\r\n      <ul class=\"pagination\">\r\n        ${range.map(v => {\r\n          const isCurrent = v === props.currentPage\r\n\r\n          const onClick = ev => {\r\n            ev.preventDefault()\r\n            props.onSetPage(v)\r\n          }\r\n\r\n          return html`\r\n            <li\r\n              class=${isCurrent ? 'page-item active' : 'page-item'}\r\n              @click=${onClick}\r\n              key=${v.toString()}\r\n            >\r\n              <a class=\"page-link\" href=\"\">${v + 1}</a>\r\n            </li>\r\n          `\r\n        })}\r\n      </ul>\r\n    </nav>\r\n  `\r\n}\r\n\r\nexport default ListPagination\r\n","import { Component, html } from './base'\r\nimport { withRouterLinks } from 'slick-router/middlewares/router-links'\r\n\r\nconst FAVORITED_CLASS = 'btn btn-sm btn-primary'\r\nconst NOT_FAVORITED_CLASS = 'btn btn-sm btn-outline-primary'\r\n\r\n@withRouterLinks\r\nclass ArticlePreview extends Component {\r\n  static observedContexts = ['stores']\r\n\r\n  static properties = {\r\n    article: { type: Object }\r\n  }\r\n\r\n  handleClickFavorite = ev => {\r\n    ev.preventDefault()\r\n    const { article } = this\r\n    const { articlesStore } = this.context.stores\r\n    if (article.favorited) {\r\n      articlesStore.unmakeFavorite(article.slug)\r\n    } else {\r\n      articlesStore.makeFavorite(article.slug)\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { article } = this\r\n    const favoriteButtonClass = article.favorited\r\n      ? FAVORITED_CLASS\r\n      : NOT_FAVORITED_CLASS\r\n\r\n    return html`\r\n      <div class=\"article-preview\">\r\n        <div class=\"article-meta\">\r\n          <a href=${`#@${article.author.username}`}\r\n            ><img src=${article.author.image} alt=\"\"\r\n          /></a>\r\n          <div class=\"info\">\r\n            <a class=\"author\" href=${`#@${article.author.username}`}\r\n              >${article.author.username}</a\r\n            ><span class=\"date\"\r\n              >${new Date(article.createdAt).toDateString()}</span\r\n            >\r\n          </div>\r\n          <div class=\"pull-xs-right\">\r\n            <button\r\n              class=${favoriteButtonClass}\r\n              @click=${this.handleClickFavorite}\r\n            >\r\n              <i class=\"ion-heart\"></i> ${article.favoritesCount}\r\n            </button>\r\n          </div>\r\n        </div>\r\n        <a href=${`#article/${article.slug}`} class=\"preview-link\"\r\n          ><h1>${article.title}</h1>\r\n          <p>${article.description}</p>\r\n          <span>Read more...</span>\r\n          <ul class=\"tag-list\">\r\n            ${article.tagList.map(tag => {\r\n              return html`\r\n                <li class=\"tag-default tag-pill tag-outline\" key=${tag}>\r\n                  ${tag}\r\n                </li>\r\n              `\r\n            })}\r\n          </ul></a\r\n        >\r\n      </div>\r\n    `\r\n  }\r\n}\r\n\r\ncustomElements.define('article-preview', ArticlePreview)\r\n","import ListPagination from './ListPagination'\r\nimport './article-preview'\r\nimport './loading-spinner'\r\nimport { html, repeat } from './base'\r\n\r\nconst ArticleList = ({\r\n  onSetPage,\r\n  totalPagesCount,\r\n  currentPage,\r\n  articles,\r\n  loading\r\n}) => {\r\n  if (loading && articles.length === 0) {\r\n    return html`\r\n      <loading-spinner></loading-spinner>\r\n    `\r\n  }\r\n\r\n  if (articles.length === 0) {\r\n    return html`\r\n      <div class=\"article-preview\">No articles are here... yet.</div>\r\n    `\r\n  }\r\n\r\n  return html`\r\n    <div>\r\n      ${repeat(\r\n        articles,\r\n        article => article.slug,\r\n        article => html`\r\n          <article-preview .article=${article}></article-preview>\r\n        `\r\n      )}\r\n      ${ListPagination({ onSetPage, totalPagesCount, currentPage })}\r\n    </div>\r\n  `\r\n}\r\n\r\nexport default ArticleList\r\n","import ArticleList from '../../components/ArticleList'\r\nimport { Component, html } from '../../components/base'\r\nimport { withRouterLinks } from 'slick-router/middlewares/router-links'\r\n\r\nconst YourFeedTab = ({ currentUser, tab }) => {\r\n  if (currentUser) {\r\n    return html`\r\n      <li class=\"nav-item\">\r\n        <a\r\n          route=\"home\"\r\n          query-tab=\"feed\"\r\n          class=${`nav-link ${tab === 'feed' ? 'active' : ''}`}\r\n          >Your Feed</a\r\n        >\r\n      </li>\r\n    `\r\n  }\r\n  return null\r\n}\r\n\r\nconst GlobalFeedTab = ({ tab }) => {\r\n  return html`\r\n    <li class=\"nav-item\">\r\n      <a\r\n        route=\"home\"\r\n        query-tab=\"all\"\r\n        active-class=\"\"\r\n        class=${`nav-link ${tab === 'all' ? 'active' : ''}`}\r\n        >Global Feed</a\r\n      >\r\n    </li>\r\n  `\r\n}\r\n\r\nconst TagFilterTab = props => {\r\n  if (!props.tag) {\r\n    return null\r\n  }\r\n\r\n  return html`\r\n    <li class=\"nav-item\">\r\n      <a route=\"home\" query-tag=${props.tag} class=\"nav-link active\"\r\n        ><i class=\"ion-pound\"></i> ${props.tag}</a\r\n      >\r\n    </li>\r\n  `\r\n}\r\n\r\n@withRouterLinks\r\nclass MainView extends Component {\r\n  static observedContexts = ['stores']\r\n\r\n  static properties = {\r\n    tab: { type: String },\r\n    tag: { type: String }\r\n  }\r\n\r\n  connectedCallback() {\r\n    super.connectedCallback()\r\n    this.context.stores.articlesStore.setPredicate(this.getPredicate())\r\n    this.context.stores.articlesStore.loadArticles()\r\n  }\r\n\r\n  shouldUpdate(changedProperties) {\r\n    if (changedProperties.has('tab') || changedProperties.has('tag')) {\r\n      this.context.stores.articlesStore.setPredicate(this.getPredicate())\r\n      this.context.stores.articlesStore.loadArticles()\r\n    }\r\n    return true\r\n  }\r\n\r\n  getTag() {\r\n    return this.tag || ''\r\n  }\r\n\r\n  getTab() {\r\n    return this.tab || 'all'\r\n  }\r\n\r\n  getPredicate() {\r\n    switch (this.getTab()) {\r\n      case 'feed':\r\n        return { myFeed: true }\r\n      case 'tag':\r\n        return { tag: this.tag }\r\n      default:\r\n        return {}\r\n    }\r\n  }\r\n\r\n  handleTabChange = tab => {\r\n    if (this.tab === tab) return\r\n    this.dispatchEvent(new CustomEvent('tab-changed', { detail: tab }))\r\n  }\r\n\r\n  handleSetPage = page => {\r\n    this.context.stores.articlesStore.setPage(page)\r\n    this.context.stores.articlesStore.loadArticles()\r\n  }\r\n\r\n  render() {\r\n    const { currentUser } = this.context.stores.userStore\r\n    const {\r\n      articles,\r\n      isLoading,\r\n      page,\r\n      totalPagesCount\r\n    } = this.context.stores.articlesStore\r\n\r\n    const tab = this.getTab()\r\n\r\n    return html`\r\n      <div>\r\n        <div class=\"feed-toggle\">\r\n          <ul class=\"nav nav-pills outline-active\" routerlinks>\r\n            ${YourFeedTab({ currentUser, tab })} ${GlobalFeedTab({ tab })}\r\n            ${TagFilterTab({ tag: this.tag })}\r\n          </ul>\r\n        </div>\r\n        ${ArticleList({\r\n          articles,\r\n          totalPagesCount,\r\n          loading: isLoading,\r\n          currentPage: page,\r\n          onSetPage: this.handleSetPage\r\n        })}\r\n      </div>\r\n    `\r\n  }\r\n}\r\n\r\ncustomElements.define('home-main-view', MainView)\r\n","import { Component, html } from '../../components/base'\r\nimport Banner from './Banner'\r\nimport Tags from './Tags'\r\nimport './home-main-view'\r\nimport { withRouterLinks } from 'slick-router/middlewares/router-links'\r\n\r\n@withRouterLinks\r\nclass HomePage extends Component {\r\n  static observedContexts = ['stores']\r\n\r\n  static properties = {\r\n    $route: {}\r\n  }\r\n\r\n  connectedCallback() {\r\n    super.connectedCallback()\r\n    this.context.stores.commonStore.loadTags()\r\n  }\r\n\r\n  tabChanged(e) {\r\n    this.$router.transitionTo('home', {}, { tab: e.detail })\r\n  }\r\n\r\n  render() {\r\n    const { tags, token, appName } = this.context.stores.commonStore\r\n    const query = this.$route ? this.$route.query : {}\r\n    return html`\r\n      <div class=\"home-page\">\r\n        ${Banner({ token: token, appName: appName })}\r\n        <div class=\"container page\">\r\n          <div class=\"row\">\r\n            <home-main-view\r\n              class=\"col-md-9\"\r\n              .tag=${query.tag}\r\n              .tab=${query.tab}\r\n              @tab-changed=${this.tabChanged}\r\n            ></home-main-view>\r\n            <div class=\"col-md-3\">\r\n              <div class=\"sidebar\">\r\n                <p>Popular Tags</p>\r\n                ${Tags({ tags })}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    `\r\n  }\r\n}\r\n\r\ncustomElements.define('home-page', HomePage)\r\n","import 'components/list-errors'\r\nimport { Component, html } from 'components/base'\r\n\r\nclass RegisterPage extends Component {\r\n  static observedContexts = ['stores']\r\n\r\n  disconnectedCallback() {\r\n    super.disconnectedCallback()\r\n    this.context.stores.authStore.reset()\r\n  }\r\n\r\n  handleUsernameChange = e =>\r\n    this.context.stores.authStore.setUsername(e.target.value)\r\n  handleEmailChange = e =>\r\n    this.context.stores.authStore.setEmail(e.target.value)\r\n  handlePasswordChange = e =>\r\n    this.context.stores.authStore.setPassword(e.target.value)\r\n  handleSubmitForm = e => {\r\n    e.preventDefault()\r\n    this.context.stores.authStore\r\n      .register()\r\n      .then(() => this.$router.replaceWith('home'))\r\n  }\r\n\r\n  render() {\r\n    const { values, errors, inProgress } = this.context.stores.authStore\r\n\r\n    return html`\r\n      <div class=\"auth-page\">\r\n        <div class=\"container page\">\r\n          <div class=\"row\">\r\n            <div class=\"col-md-6 offset-md-3 col-xs-12\">\r\n              <h1 class=\"text-xs-center\">Sign Up</h1>\r\n              <p class=\"text-xs-center\">\r\n                <a url=\"login\">Have an account?</a>\r\n              </p>\r\n              <list-errors .errors=${errors}></list-errors>\r\n              <form @submit=${this.handleSubmitForm}>\r\n                <fieldset>\r\n                  <fieldset class=\"form-group\">\r\n                    <input\r\n                      class=\"form-control form-control-lg\"\r\n                      type=\"text\"\r\n                      placeholder=\"Username\"\r\n                      .value=${values.username}\r\n                      @change=${this.handleUsernameChange}\r\n                    />\r\n                  </fieldset>\r\n                  <fieldset class=\"form-group\">\r\n                    <input\r\n                      class=\"form-control form-control-lg\"\r\n                      type=\"email\"\r\n                      placeholder=\"Email\"\r\n                      .value=${values.email}\r\n                      @change=${this.handleEmailChange}\r\n                    />\r\n                  </fieldset>\r\n                  <fieldset class=\"form-group\">\r\n                    <input\r\n                      class=\"form-control form-control-lg\"\r\n                      type=\"password\"\r\n                      placeholder=\"Password\"\r\n                      .value=${values.password}\r\n                      @change=${this.handlePasswordChange}\r\n                    />\r\n                  </fieldset>\r\n                  <button\r\n                    class=\"btn btn-lg btn-primary pull-xs-right\"\r\n                    type=\"submit\"\r\n                    ?disabled=${inProgress}\r\n                  >\r\n                    Sign in\r\n                  </button>\r\n                </fieldset>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    `\r\n  }\r\n}\r\n\r\ncustomElements.define('register-page', RegisterPage)\r\n","import 'components/list-errors'\r\nimport { Component, html } from 'components/base'\r\n\r\nclass EditorPage extends Component {\r\n  static observedContexts = ['stores']\r\n\r\n  static properties = {\r\n    tagInput: { type: String },\r\n    slug: { type: String }\r\n  }\r\n\r\n  tagInput = ''\r\n\r\n  set $route(value) {\r\n    this.slug = value.params.slug\r\n  }\r\n\r\n  connectedCallback() {\r\n    super.connectedCallback()\r\n    this.context.stores.editorStore.setArticleSlug(this.slug)\r\n    this.context.stores.editorStore.loadInitialData()\r\n    this.dataLoaded = true\r\n  }\r\n\r\n  shouldUpdate(changedProperties) {\r\n    if (this.dataLoaded) {\r\n      this.dataLoaded = false\r\n      return true\r\n    }\r\n\r\n    if (changedProperties.has('slug')) {\r\n      this.context.stores.editorStore.setArticleSlug(this.slug)\r\n      this.context.stores.editorStore.loadInitialData()\r\n    }\r\n    return true\r\n  }\r\n\r\n  changeTitle = e => this.context.stores.editorStore.setTitle(e.target.value)\r\n  changeDescription = e =>\r\n    this.context.stores.editorStore.setDescription(e.target.value)\r\n  changeBody = e => this.context.stores.editorStore.setBody(e.target.value)\r\n  changeTagInput = e => (this.tagInput = e.target.value)\r\n\r\n  handleTagInputKeyDown = ev => {\r\n    switch (ev.keyCode) {\r\n      case 13: // Enter\r\n      case 9: // Tab\r\n      case 188: // ,\r\n        if (ev.keyCode !== 9) ev.preventDefault()\r\n        this.handleAddTag()\r\n        break\r\n      default:\r\n        break\r\n    }\r\n  }\r\n\r\n  handleAddTag = () => {\r\n    if (this.tagInput) {\r\n      this.context.stores.editorStore.addTag(this.tagInput.trim())\r\n      this.tagInput = ''\r\n    }\r\n  }\r\n\r\n  handleRemoveTag = tag => {\r\n    if (this.context.stores.editorStore.inProgress) return\r\n    this.context.stores.editorStore.removeTag(tag)\r\n  }\r\n\r\n  submitForm = ev => {\r\n    ev.preventDefault()\r\n    const { editorStore } = this.context.stores\r\n    editorStore.submit().then(article => {\r\n      editorStore.reset()\r\n      this.$router.replaceWith('article', { id: article.slug })\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      inProgress,\r\n      errors,\r\n      title,\r\n      description,\r\n      body,\r\n      tagList\r\n    } = this.context.stores.editorStore\r\n\r\n    return html`\r\n      <div class=\"editor-page\">\r\n        <div class=\"container page\">\r\n          <div class=\"row\">\r\n            <div class=\"col-md-10 offset-md-1 col-xs-12\">\r\n              <list-errors .errors=${errors}></list-errors>\r\n              <form>\r\n                <fieldset>\r\n                  <fieldset class=\"form-group\">\r\n                    <input\r\n                      class=\"form-control form-control-lg\"\r\n                      type=\"text\"\r\n                      placeholder=\"Article Title\"\r\n                      .value=${title}\r\n                      @input=${this.changeTitle}\r\n                      ?disabled=${inProgress}\r\n                    />\r\n                  </fieldset>\r\n                  <fieldset class=\"form-group\">\r\n                    <input\r\n                      class=\"form-control\"\r\n                      type=\"text\"\r\n                      placeholder=\"What's this article about?\"\r\n                      .value=${description}\r\n                      @input=${this.changeDescription}\r\n                      ?disabled=${inProgress}\r\n                    />\r\n                  </fieldset>\r\n                  <fieldset class=\"form-group\">\r\n                    <textarea\r\n                      class=\"form-control\"\r\n                      rows=\"8\"\r\n                      placeholder=\"Write your article (in markdown)\"\r\n                      .value=${body}\r\n                      @input=${this.changeBody}\r\n                      ?disabled=${inProgress}\r\n                    ></textarea>\r\n                  </fieldset>\r\n                  <fieldset class=\"form-group\">\r\n                    <input\r\n                      class=\"form-control\"\r\n                      type=\"text\"\r\n                      placeholder=\"Enter tags\"\r\n                      .value=${this.tagInput}\r\n                      @input=${this.changeTagInput}\r\n                      @blur=${this.handleAddTag}\r\n                      @keydown=${this.handleTagInputKeyDown}\r\n                      ?disabled=${inProgress}\r\n                    />\r\n                    <div class=\"tag-list\">\r\n                      ${tagList.map(tag => {\r\n                        return html`\r\n                          <span class=\"tag-default tag-pill\"\r\n                            ><i\r\n                              class=\"ion-close-round\"\r\n                              @click=${() => this.handleRemoveTag(tag)}\r\n                            ></i\r\n                            >${tag}</span\r\n                          >\r\n                        `\r\n                      })}\r\n                    </div>\r\n                  </fieldset>\r\n                  <button\r\n                    class=\"btn btn-lg pull-xs-right btn-primary\"\r\n                    type=\"button\"\r\n                    ?disabled=${inProgress}\r\n                    @click=${this.submitForm}\r\n                  >\r\n                    Publish Article\r\n                  </button>\r\n                </fieldset>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    `\r\n  }\r\n}\r\n\r\ncustomElements.define('editor-page', EditorPage)\r\n","import 'components/red-error'\r\nimport 'components/loading-spinner'\r\nimport ArticleList from 'components/ArticleList'\r\nimport { Component, html } from 'components/base'\r\nimport { bindRouterLinks } from 'slick-router/middlewares/router-links'\r\n\r\nconst EditProfileSettings = props => {\r\n  if (props.isUser) {\r\n    return html`\r\n      <a href=\"#settings\" class=\"btn btn-sm btn-outline-secondary action-btn\"\r\n        ><i class=\"ion-gear-a\"></i> Edit Profile Settings</a\r\n      >\r\n    `\r\n  }\r\n  return null\r\n}\r\n\r\nconst FollowUserButton = props => {\r\n  if (props.isUser) {\r\n    return null\r\n  }\r\n\r\n  let classes = 'btn btn-sm action-btn'\r\n  if (props.following) {\r\n    classes += ' btn-secondary'\r\n  } else {\r\n    classes += ' btn-outline-secondary'\r\n  }\r\n\r\n  const handleClick = ev => {\r\n    ev.preventDefault()\r\n    if (props.following) {\r\n      props.unfollow(props.username)\r\n    } else {\r\n      props.follow(props.username)\r\n    }\r\n  }\r\n\r\n  return html`\r\n    <button class=${classes} @click=${handleClick}>\r\n      <i class=\"ion-plus-round\"></i> ${props.following ? 'Unfollow' : 'Follow'}\r\n      ${props.username}\r\n    </button>\r\n  `\r\n}\r\n\r\nclass ProfilePage extends Component {\r\n  static observedContexts = ['stores']\r\n\r\n  static properties = {\r\n    username: { type: String },\r\n    pathname: { type: String }\r\n  }\r\n\r\n  set $route(value) {\r\n    this.username = value.params.username\r\n    this.pathname = value.pathname\r\n  }\r\n\r\n  updated() {\r\n    // wait to routerlinks root el be rendered\r\n    if (!this.disposeRouterLinks) {\r\n      const rootEls = this.querySelector('[routerlinks]')\r\n      if (rootEls) this.disposeRouterLinks = bindRouterLinks(this)\r\n    }\r\n  }\r\n\r\n  connectedCallback() {\r\n    super.connectedCallback()\r\n    this.context.stores.articlesStore.setPredicate(this.getPredicate())\r\n    this.context.stores.profileStore.loadProfile(this.username)\r\n    this.context.stores.articlesStore.loadArticles()\r\n    this.dataLoaded = true\r\n  }\r\n\r\n  disconnectedCallback() {\r\n    if (this.disposeRouterLinks) {\r\n      this.disposeRouterLinks()\r\n    }\r\n  }\r\n\r\n  shouldUpdate(changedProperties) {\r\n    // avoid reloading data just after connect\r\n    if (this.dataLoaded) {\r\n      this.dataLoaded = false\r\n      return true\r\n    }\r\n\r\n    if (changedProperties.has('username')) {\r\n      this.context.stores.profileStore.loadProfile(this.username)\r\n    }\r\n\r\n    if (changedProperties.has('pathname')) {\r\n      this.context.stores.articlesStore.setPredicate(this.getPredicate())\r\n      this.context.stores.articlesStore.loadArticles()\r\n    }\r\n    return true\r\n  }\r\n\r\n  getTab() {\r\n    if (/\\/favorites/.test(this.pathname)) return 'favorites'\r\n    return 'all'\r\n  }\r\n\r\n  getPredicate() {\r\n    switch (this.getTab()) {\r\n      case 'favorites':\r\n        return { favoritedBy: this.username }\r\n      default:\r\n        return { author: this.username }\r\n    }\r\n  }\r\n\r\n  handleFollow = () => this.context.stores.profileStore.follow()\r\n  handleUnfollow = () => this.context.stores.profileStore.unfollow()\r\n\r\n  handleSetPage = page => {\r\n    this.context.stores.articlesStore.setPage(page)\r\n    this.context.stores.articlesStore.loadArticles()\r\n  }\r\n\r\n  renderTabs() {\r\n    const { profile } = this.context.stores.profileStore\r\n    const isFavorites = this.pathname.match('/favorites')\r\n    return html`\r\n      <ul class=\"nav nav-pills outline-active\" routerlinks>\r\n        <li class=\"nav-item\">\r\n          <a\r\n            class=${`nav-link ${!isFavorites ? 'active' : ''}`}\r\n            route=\"profile\"\r\n            param-username=${profile.username}\r\n            exact\r\n            >My Articles</a\r\n          >\r\n        </li>\r\n        <li class=\"nav-item\">\r\n          <a\r\n            class=\"nav-link\"\r\n            route=\"profile.favorites\"\r\n            param-username=${profile.username}\r\n            >Favorited Articles</a\r\n          >\r\n        </li>\r\n      </ul>\r\n    `\r\n  }\r\n\r\n  render() {\r\n    const { profileStore, articlesStore, userStore } = this.context.stores\r\n    const { profile, isLoadingProfile } = profileStore\r\n    const { currentUser } = userStore\r\n\r\n    if (isLoadingProfile && !profile)\r\n      return html`\r\n        <loading-spinner></loading-spinner>\r\n      `\r\n    if (!profile)\r\n      return html`\r\n        <red-error message=\"Can't load profile\"></red-error>\r\n      `\r\n\r\n    const isUser = currentUser && profile.username === currentUser.username\r\n\r\n    return html`\r\n      <div class=\"profile-page\">\r\n        <div class=\"user-info\">\r\n          <div class=\"container\">\r\n            <div class=\"row\">\r\n              <div class=\"col-xs-12 col-md-10 offset-md-1\">\r\n                <img src=${profile.image} class=\"user-img\" alt=\"\" />\r\n                <h4>${profile.username}</h4>\r\n                <p>${profile.bio}</p>\r\n                ${EditProfileSettings({ isUser })}\r\n                ${FollowUserButton({\r\n                  isUser,\r\n                  username: profile.username,\r\n                  following: profile.following,\r\n                  unfollow: this.handleUnfollow,\r\n                  follow: this.handleFollow\r\n                })}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"container\">\r\n          <div class=\"row\">\r\n            <div class=\"col-xs-12 col-md-10 offset-md-1\">\r\n              <div class=\"articles-toggle\">${this.renderTabs()}</div>\r\n              ${ArticleList({\r\n                articles: articlesStore.articles,\r\n                totalPagesCount: articlesStore.totalPagesCount,\r\n                onSetPage: this.handleSetPage,\r\n                loading: articlesStore.isLoading\r\n              })}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    `\r\n  }\r\n}\r\n\r\ncustomElements.define('profile-page', ProfilePage)\r\n","import 'components/list-errors'\r\nimport { Component, html } from 'components/base'\r\n\r\nclass SettingsForm extends Component {\r\n  static observedContexts = ['stores']\r\n\r\n  static properties = {\r\n    state: { type: Object }\r\n  }\r\n\r\n  constructor() {\r\n    super()\r\n\r\n    this.state = {\r\n      image: '',\r\n      username: '',\r\n      bio: '',\r\n      email: '',\r\n      password: ''\r\n    }\r\n\r\n    this.updateState = field => ev => {\r\n      const state = this.state\r\n      const newState = Object.assign({}, state, { [field]: ev.target.value })\r\n      this.state = newState\r\n    }\r\n\r\n    this.submitForm = ev => {\r\n      ev.preventDefault()\r\n\r\n      const user = Object.assign({}, this.state)\r\n      if (!user.password) {\r\n        delete user.password\r\n      }\r\n\r\n      this.onSubmitForm(user)\r\n    }\r\n  }\r\n\r\n  connectedCallback() {\r\n    super.connectedCallback()\r\n    if (this.context.stores.userStore.currentUser) {\r\n      Object.assign(this.state, {\r\n        image: this.context.stores.userStore.currentUser.image || '',\r\n        username: this.context.stores.userStore.currentUser.username,\r\n        bio: this.context.stores.userStore.currentUser.bio || '',\r\n        email: this.context.stores.userStore.currentUser.email\r\n      })\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return html`\r\n      <form @submit=${this.submitForm}>\r\n        <fieldset>\r\n          <fieldset class=\"form-group\">\r\n            <input\r\n              class=\"form-control\"\r\n              type=\"text\"\r\n              placeholder=\"URL of profile picture\"\r\n              .value=${this.state.image}\r\n              @change=${this.updateState('image')}\r\n            />\r\n          </fieldset>\r\n          <fieldset class=\"form-group\">\r\n            <input\r\n              class=\"form-control form-control-lg\"\r\n              type=\"text\"\r\n              placeholder=\"Username\"\r\n              .value=${this.state.username}\r\n              @change=${this.updateState('username')}\r\n            />\r\n          </fieldset>\r\n          <fieldset class=\"form-group\">\r\n            <textarea\r\n              class=\"form-control form-control-lg\"\r\n              rows=\"8\"\r\n              placeholder=\"Short bio about you\"\r\n              .value=${this.state.bio}\r\n              @change=${this.updateState('bio')}\r\n            /></textarea>\r\n          </fieldset>\r\n          <fieldset class=\"form-group\">\r\n            <input\r\n              class=\"form-control form-control-lg\"\r\n              type=\"email\"\r\n              placeholder=\"Email\"\r\n              .value=${this.state.email}\r\n              @change=${this.updateState('email')}\r\n            />\r\n          </fieldset>\r\n          <fieldset class=\"form-group\">\r\n            <input\r\n              class=\"form-control form-control-lg\"\r\n              type=\"password\"\r\n              placeholder=\"New Password\"\r\n              .value=${this.state.password}\r\n              @change=${this.updateState('password')}\r\n            />\r\n          </fieldset>\r\n          <button\r\n            class=\"btn btn-lg btn-primary pull-xs-right\"\r\n            type=\"submit\"\r\n            ?disabled=${this.context.stores.userStore.updatingUser}\r\n          >\r\n            Update Settings\r\n          </button>\r\n        </fieldset>\r\n      </form>\r\n    `\r\n  }\r\n}\r\n\r\nclass SettingsPage extends Component {\r\n  static observedContexts = ['stores']\r\n\r\n  handleClickLogout = () =>\r\n    this.context.stores.authStore\r\n      .logout()\r\n      .then(() => this.$router.replaceWith('home'))\r\n\r\n  render() {\r\n    return html`\r\n      <div class=\"settings-page\">\r\n        <div class=\"container page\">\r\n          <div class=\"row\">\r\n            <div class=\"col-md-6 offset-md-3 col-xs-12\">\r\n              <h1 class=\"text-xs-center\">Your Settings</h1>\r\n              <list-errors\r\n                .errors=${this.context.stores.userStore.updatingUserErrors}\r\n              ></list-errors>\r\n              <settings-form\r\n                .currentUser=${this.context.stores.userStore.currentUser}\r\n                .onSubmitForm=${user =>\r\n                  this.context.stores.userStore.updateUser(user)}\r\n              ></settings-form>\r\n              <hr />\r\n              <button\r\n                class=\"btn btn-outline-danger\"\r\n                @click=${this.handleClickLogout}\r\n              >\r\n                Or click here to logout.\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    `\r\n  }\r\n}\r\n\r\ncustomElements.define('settings-form', SettingsForm)\r\ncustomElements.define('settings-page', SettingsPage)\r\n","import { observe } from 'mobx'\r\nimport { Router } from 'slick-router'\r\nimport { wc } from 'slick-router/middlewares/wc'\r\nimport {\r\n  routerLinks,\r\n  withRouterLinks\r\n} from 'slick-router/middlewares/router-links'\r\n\r\nimport 'pages/login-page'\r\nimport 'pages/Home/home-page'\r\nimport 'pages/register-page'\r\nimport 'pages/editor-page'\r\nimport 'pages/profile-page'\r\nimport 'pages/settings-page'\r\n\r\nasync function ArticlePage() {\r\n  await import('pages/Article/article-page')\r\n  return 'article-page'\r\n}\r\n\r\nexport function createRouter({ stores }) {\r\n  const appLoaded = new Promise(resolve => {\r\n    const disposer = observe(\r\n      stores.commonStore,\r\n      'appLoaded',\r\n      ({ newValue }) => {\r\n        if (newValue) {\r\n          resolve()\r\n          disposer()\r\n        }\r\n      }\r\n    )\r\n  })\r\n\r\n  const routes = [\r\n    {\r\n      name: 'app',\r\n      path: '/',\r\n      beforeEnter: () => appLoaded,\r\n      children: [\r\n        {\r\n          name: 'home',\r\n          component: 'home-page',\r\n          path: ''\r\n        },\r\n        {\r\n          name: 'login',\r\n          component: 'login-page'\r\n        },\r\n        { name: 'register', component: 'register-page' },\r\n        { name: 'editor', component: 'editor-page', path: 'editor/:slug?' },\r\n        { name: 'article', component: ArticlePage, path: 'article/:id' },\r\n        {\r\n          name: 'settings',\r\n          component: 'settings-page',\r\n          beforeEnter: transition => {\r\n            if (stores.userStore.currentUser == null) {\r\n              transition.redirectTo('home')\r\n            }\r\n          }\r\n        },\r\n        {\r\n          name: 'profile',\r\n          component: 'profile-page',\r\n          path: '@:username',\r\n          children: [{ name: 'profile.favorites' }]\r\n        }\r\n      ]\r\n    }\r\n  ]\r\n\r\n  const router = new Router({ routes, outlet: 'app-root', log: true })\r\n  router.use(wc)\r\n  router.use(routerLinks)\r\n  return router\r\n}\r\n\r\nexport { withRouterLinks }\r\n","export class AnimationHook {\r\n  constructor (options = {}) {\r\n    this.options = options\r\n  }\r\n\r\n  getOption (outlet, name) {\r\n    return outlet.hasAttribute(name) ? outlet.getAttribute(name) : this.options[name]\r\n  }\r\n\r\n  hasOption (outlet, name) {\r\n    return outlet.hasAttribute(name) || this.options[name]\r\n  }\r\n\r\n  runParallel (outlet) {\r\n    return this.hasOption(outlet, 'parallel')\r\n  }\r\n\r\n  beforeEnter (outlet, el) {\r\n\r\n  }\r\n\r\n  enter (outlet, el) {\r\n\r\n  }\r\n\r\n  leave (outlet, el, done) {\r\n    done()\r\n  }\r\n}\r\n\r\n// code extracted from vue\r\nvar raf = window.requestAnimationFrame\r\nvar TRANSITION = 'transition'\r\nvar ANIMATION = 'animation'\r\n\r\n// Transition property/event sniffing\r\nvar transitionProp = 'transition'\r\nvar transitionEndEvent = 'transitionend'\r\nvar animationProp = 'animation'\r\nvar animationEndEvent = 'animationend'\r\n\r\nfunction nextFrame (fn) {\r\n  raf(function () {\r\n    raf(fn)\r\n  })\r\n}\r\n\r\nfunction whenTransitionEnds (\r\n  el,\r\n  cb\r\n) {\r\n  var ref = getTransitionInfo(el)\r\n  var type = ref.type\r\n  var timeout = ref.timeout\r\n  var propCount = ref.propCount\r\n  if (!type) { return cb() }\r\n  var event = type === TRANSITION ? transitionEndEvent : animationEndEvent\r\n  var ended = 0\r\n  var end = function () {\r\n    el.removeEventListener(event, onEnd)\r\n    cb()\r\n  }\r\n  var onEnd = function (e) {\r\n    if (e.target === el) {\r\n      if (++ended >= propCount) {\r\n        end()\r\n      }\r\n    }\r\n  }\r\n  setTimeout(function () {\r\n    if (ended < propCount) {\r\n      end()\r\n    }\r\n  }, timeout + 1)\r\n  el.addEventListener(event, onEnd)\r\n}\r\n\r\nfunction getTransitionInfo (el) {\r\n  var styles = window.getComputedStyle(el)\r\n  // JSDOM may return undefined for transition properties\r\n  var transitionDelays = (styles[transitionProp + 'Delay'] || '').split(', ')\r\n  var transitionDurations = (styles[transitionProp + 'Duration'] || '').split(', ')\r\n  var transitionTimeout = getTimeout(transitionDelays, transitionDurations)\r\n  var animationDelays = (styles[animationProp + 'Delay'] || '').split(', ')\r\n  var animationDurations = (styles[animationProp + 'Duration'] || '').split(', ')\r\n  var animationTimeout = getTimeout(animationDelays, animationDurations)\r\n\r\n  var type\r\n  var timeout = 0\r\n  var propCount = 0\r\n\r\n  timeout = Math.max(transitionTimeout, animationTimeout)\r\n  type = timeout > 0\r\n    ? transitionTimeout > animationTimeout\r\n      ? TRANSITION\r\n      : ANIMATION\r\n    : null\r\n  propCount = type\r\n    ? type === TRANSITION\r\n      ? transitionDurations.length\r\n      : animationDurations.length\r\n    : 0\r\n\r\n  return {\r\n    type,\r\n    timeout,\r\n    propCount\r\n  }\r\n}\r\n\r\nfunction getTimeout (delays, durations) {\r\n  /* istanbul ignore next */\r\n  while (delays.length < durations.length) {\r\n    delays = delays.concat(delays)\r\n  }\r\n\r\n  return Math.max.apply(null, durations.map(function (d, i) {\r\n    return toMs(d) + toMs(delays[i])\r\n  }))\r\n}\r\n\r\n// Old versions of Chromium (below 61.0.3163.100) formats floating pointer numbers\r\n// in a locale-dependent way, using a comma instead of a dot.\r\n// If comma is not replaced with a dot, the input will be rounded down (i.e. acting\r\n// as a floor function) causing unexpected behaviors\r\nfunction toMs (s) {\r\n  return Number(s.slice(0, -1).replace(',', '.')) * 1000\r\n}\r\n\r\nfunction runTransition (el, name, type, cb) {\r\n  el.classList.add(`${name}-${type}-active`)\r\n  nextFrame(function () {\r\n    el.classList.remove(`${name}-${type}`)\r\n    el.classList.add(`${name}-${type}-to`)\r\n    whenTransitionEnds(el, function () {\r\n      el.classList.remove(`${name}-${type}-active`, `${name}-${type}-to`)\r\n      if (cb) cb()\r\n    })\r\n  })\r\n}\r\n\r\nexport class GenericCSS extends AnimationHook {\r\n  beforeEnter (outlet, el) {\r\n    const name = outlet.getAttribute('animation') || 'outlet'\r\n    el.classList.add(`${name}-enter`)\r\n  }\r\n\r\n  enter (outlet, el) {\r\n    const name = outlet.getAttribute('animation') || 'outlet'\r\n    runTransition(el, name, 'enter')\r\n  }\r\n\r\n  leave (outlet, el, done) {\r\n    const name = outlet.getAttribute('animation') || 'outlet'\r\n    el.classList.add(`${name}-leave`)\r\n    runTransition(el, name, 'leave', done)\r\n  }\r\n}\r\n\r\nexport class AnimateCSS extends AnimationHook {\r\n  beforeEnter (outlet, el) {\r\n    const enter = this.getOption(outlet, 'enter')\r\n    if (enter) {\r\n      el.style.display = 'none'\r\n    }\r\n  }\r\n\r\n  enter (outlet, el) {\r\n    const enter = this.getOption(outlet, 'enter')\r\n    if (!enter) return\r\n    el.style.display = 'block'\r\n    el.classList.add('animated', enter)\r\n    el.addEventListener(\r\n      'animationend',\r\n      () => {\r\n        el.classList.remove('animated', enter)\r\n      },\r\n      { once: true }\r\n    )\r\n  }\r\n\r\n  leave (outlet, el, done) {\r\n    const leave = this.getOption(outlet, 'leave')\r\n    if (!leave) {\r\n      done()\r\n      return\r\n    }\r\n    el.classList.add('animated', leave)\r\n    el.addEventListener(\r\n      'animationend',\r\n      done,\r\n      { once: true }\r\n    )\r\n  }\r\n}\r\n\r\nconst animationRegistry = {}\r\nlet defaultHook\r\n\r\nexport function registerAnimation (name, AnimationHookClass, options = {}) {\r\n  animationRegistry[name] = new AnimationHookClass(options)\r\n}\r\n\r\nexport function setDefaultAnimation (AnimationHookClass, options = {}) {\r\n  defaultHook = new AnimationHookClass(options)\r\n}\r\n\r\nfunction getAnimationHook (name) {\r\n  return animationRegistry[name] || defaultHook || (defaultHook = new GenericCSS())\r\n}\r\n\r\nexport class AnimatedOutlet extends HTMLElement {\r\n  appendChild (el) {\r\n    if (!this.hasAttribute('animation')) {\r\n      super.appendChild(el)\r\n      return\r\n    }\r\n    const hook = getAnimationHook(this.getAttribute('animation'))\r\n    const runParallel = hook.runParallel(this)\r\n\r\n    hook.beforeEnter(this, el)\r\n    super.appendChild(el)\r\n    if (!runParallel && this.removing) {\r\n      // when removing a previous el, append animation is run after remove one\r\n      this.appending = el\r\n    } else {\r\n      hook.enter(this, el)\r\n    }\r\n  }\r\n\r\n  removeChild (el) {\r\n    if (!this.hasAttribute('animation')) {\r\n      super.removeChild(el)\r\n      return\r\n    }\r\n    const hook = getAnimationHook(this.getAttribute('animation'))\r\n\r\n    if (this.removing && this.removing.parentNode === this) {\r\n      super.removeChild(this.removing)\r\n    }\r\n\r\n    if (el === this.appending) {\r\n      if (el.parentNode === this) {\r\n        super.removeChild(el)\r\n      }\r\n      this.removing = null\r\n      return\r\n    }\r\n\r\n    this.removing = el\r\n    hook.leave(this, el, () => {\r\n      if (this.removing && this.removing.parentNode === this) {\r\n        super.removeChild(this.removing)\r\n      }\r\n      if (this.appending) hook.enter(this, this.appending)\r\n      this.appending = null\r\n      this.removing = null\r\n    })\r\n  }\r\n}\r\n","import { Component, html, ifDefined } from './base'\r\nimport { withRouterLinks } from 'slick-router/middlewares/router-links'\r\n\r\nconst LoggedOutView = props => {\r\n  if (!props.currentUser) {\r\n    return html`\r\n      <ul class=\"nav navbar-nav pull-xs-right\">\r\n        <li class=\"nav-item\">\r\n          <a route=\"home\" class=\"nav-link\">Home</a>\r\n        </li>\r\n        <li class=\"nav-item\">\r\n          <a route=\"login\" class=\"nav-link\">Sign in</a>\r\n        </li>\r\n        <li class=\"nav-item\">\r\n          <a route=\"register\" class=\"nav-link\">Sign up</a>\r\n        </li>\r\n      </ul>\r\n    `\r\n  }\r\n  return null\r\n}\r\n\r\nconst LoggedInView = props => {\r\n  if (props.currentUser) {\r\n    return html`\r\n      <ul class=\"nav navbar-nav pull-xs-right\">\r\n        <li class=\"nav-item\">\r\n          <a route=\"home\" class=\"nav-link\">Home</a>\r\n        </li>\r\n        <li class=\"nav-item\">\r\n          <a route=\"editor\" class=\"nav-link\"\r\n            ><i class=\"ion-compose\"></i> New Post</a\r\n          >\r\n        </li>\r\n        <li class=\"nav-item\">\r\n          <a route=\"settings\" class=\"nav-link\"\r\n            ><i class=\"ion-gear-a\"></i> Settings</a\r\n          >\r\n        </li>\r\n        <li class=\"nav-item\">\r\n          <a\r\n            route=\"profile\"\r\n            param-username=${props.currentUser.username}\r\n            class=\"nav-link\"\r\n            ><img\r\n              src=${ifDefined(props.currentUser.image || undefined)}\r\n              class=\"user-pic\"\r\n              alt=\"\"\r\n            />${props.currentUser.username}</a\r\n          >\r\n        </li>\r\n      </ul>\r\n    `\r\n  }\r\n\r\n  return null\r\n}\r\n\r\n@withRouterLinks\r\nclass AppHeader extends Component {\r\n  static observedContexts = ['stores']\r\n\r\n  render() {\r\n    const { commonStore, userStore } = this.context.stores\r\n    return html`\r\n      <nav class=\"navbar navbar-light\">\r\n        <div class=\"container\" routerlinks>\r\n          <a route=\"home\" class=\"navbar-brand\"\r\n            >${commonStore.appName.toLowerCase()}</a\r\n          >\r\n          ${LoggedOutView({ currentUser: userStore.currentUser })}\r\n          ${LoggedInView({ currentUser: userStore.currentUser })}\r\n        </div>\r\n      </nav>\r\n    `\r\n  }\r\n}\r\n\r\ncustomElements.define('app-header', AppHeader)\r\n","import { Component, html } from './components/base'\r\nimport {\r\n  AnimatedOutlet,\r\n  GenericCSS,\r\n  registerAnimation\r\n} from 'slick-router/components/animated-outlet'\r\n\r\nimport './components/app-header'\r\n\r\nclass RevealAnimation extends GenericCSS {\r\n  leave(outlet, el, done) {\r\n    super.leave(outlet, el, done)\r\n    // run animation once\r\n    outlet.removeAttribute('animation')\r\n  }\r\n}\r\n\r\nregisterAnimation('reveal', RevealAnimation)\r\n\r\ncustomElements.define('app-root', AnimatedOutlet)\r\n\r\nclass App extends Component {\r\n  static properties = {\r\n    stores: { type: Object, attribute: false }\r\n  }\r\n\r\n  static providedContexts = {\r\n    stores: { property: 'stores' }\r\n  }\r\n\r\n  firstUpdated() {\r\n    if (this.stores.commonStore.token) {\r\n      this.stores.userStore\r\n        .pullUser()\r\n        .finally(() => this.stores.commonStore.setAppLoaded())\r\n    } else {\r\n      this.stores.commonStore.setAppLoaded()\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const token = this.stores.commonStore.token\r\n    return html`\r\n      <div>\r\n        <app-header></app-header>\r\n        <app-root animation=\"reveal\">\r\n          <div class=\"splash-screen\">\r\n            Welcome${token ? ' back' : ''}!<br />Wait a second...\r\n          </div>\r\n        </app-root>\r\n      </div>\r\n    `\r\n  }\r\n}\r\n\r\ncustomElements.define('realworld-app', App)\r\n","import { render, html } from 'lit-html'\r\nimport 'promise-prototype-finally'\r\nimport { configure as configureMobx, observe } from 'mobx'\r\nimport agent from 'agent'\r\n\r\nimport RootStore from './stores/rootStore'\r\nimport { createRouter } from './router'\r\nimport './realworld-app'\r\n\r\nconst stores = new RootStore()\r\n\r\n// For easier debugging\r\nwindow._____APP_STATE_____ = stores\r\n\r\nconfigureMobx({ enforceActions: 'observed' })\r\nagent.configure(stores)\r\n\r\nconst router = createRouter({ stores })\r\nrouter.listen()\r\n\r\nrender(\r\n  html`\r\n    <realworld-app .stores=${stores}></realworld-app>\r\n  `,\r\n  document.getElementById('root')\r\n)\r\n"],"sourceRoot":""}