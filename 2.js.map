{"version":3,"sources":["webpack:///./src/pages/Article/ArticleActions.js","webpack:///./src/pages/Article/ArticleMeta.js","webpack:///./src/pages/Article/comment-input.js","webpack:///./src/pages/Article/DeleteButton.js","webpack:///./src/pages/Article/Comment.js","webpack:///./src/pages/Article/CommentList.js","webpack:///./src/pages/Article/CommentContainer.js","webpack:///./src/pages/Article/article-page.js"],"names":["ArticleActions","props","article","handleDelete","onDelete","slug","canModify","html","ArticleMeta","author","username","image","Date","createdAt","toDateString","CommentInput","Component","constructor","super","this","body","handleBodyChange","ev","target","value","createComment","preventDefault","context","stores","commentsStore","then","render","isCreatingComment","ifDefined","currentUser","undefined","observedContexts","properties","type","String","customElements","define","DeleteButton","handleClick","commentId","show","Comment","comment","id","CommentList","repeat","comments","CommentContainer","errors","ArticlePage","handleDeleteArticle","deleting","articlesStore","deleteArticle","$router","replaceWith","finally","handleDeleteComment","deleteComment","params","connectedCallback","loadArticle","acceptCached","setArticleSlug","loadComments","userStore","commentErrors","getArticle","markup","marked","sanitize","title","unsafeHTML","tagList","map","tag"],"mappings":"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","file":"2.js","sourcesContent":["import { html } from 'lit-html'\r\n\r\nconst ArticleActions = props => {\r\n  const article = props.article\r\n  const handleDelete = () => props.onDelete(article.slug)\r\n\r\n  if (props.canModify) {\r\n    return html`\r\n      <span\r\n        ><a\r\n          href=${`#editor/${article.slug}`}\r\n          class=\"btn btn-outline-secondary btn-sm\"\r\n          ><i class=\"ion-edit\"></i> Edit Article</a\r\n        ><button class=\"btn btn-outline-danger btn-sm\" @click=${handleDelete}>\r\n          <i class=\"ion-trash-a\"></i> Delete Article\r\n        </button></span\r\n      >\r\n    `\r\n  }\r\n\r\n  return html`\r\n    <span></span>\r\n  `\r\n}\r\n\r\nexport default ArticleActions\r\n","import ArticleActions from './ArticleActions'\r\nimport { html } from 'lit-html'\r\n\r\nconst ArticleMeta = ({ article, canModify, onDelete }) => {\r\n  return html`\r\n    <div class=\"article-meta\">\r\n      <a href=${`#@${article.author.username}`}\r\n        ><img src=${article.author.image} alt=\"\"\r\n      /></a>\r\n      <div class=\"info\">\r\n        <a href=${`#@${article.author.username}`} class=\"author\"\r\n          >${article.author.username}</a\r\n        ><span class=\"date\">${new Date(article.createdAt).toDateString()}</span>\r\n      </div>\r\n      ${ArticleActions({\r\n        article,\r\n        canModify,\r\n        onDelete\r\n      })}\r\n    </div>\r\n  `\r\n}\r\n\r\nexport default ArticleMeta\r\n","import { Component, html, ifDefined } from 'components/base'\r\n\r\nclass CommentInput extends Component {\r\n  static observedContexts = ['stores']\r\n\r\n  static properties = {\r\n    body: { type: String },\r\n    currentUser: {}\r\n  }\r\n  constructor() {\r\n    super()\r\n    this.body = ''\r\n\r\n    this.handleBodyChange = ev => {\r\n      this.body = ev.target.value\r\n    }\r\n\r\n    this.createComment = ev => {\r\n      ev.preventDefault()\r\n      this.context.stores.commentsStore\r\n        .createComment({ body: this.body })\r\n        .then(() => (this.body = ''))\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { isCreatingComment } = this.context.stores.commentsStore\r\n    return html`\r\n      <form class=\"card comment-form\" @submit=${this.createComment}>\r\n        <div class=\"card-block\">\r\n          <textarea\r\n            class=\"form-control\"\r\n            placeholder=\"Write a comment...\"\r\n            .value=${this.body}\r\n            ?disabled=${isCreatingComment}\r\n            @change=${this.handleBodyChange}\r\n            rows=\"3\"\r\n          ></textarea>\r\n        </div>\r\n        <div class=\"card-footer\">\r\n          <img\r\n            src=${ifDefined(this.currentUser.image || undefined)}\r\n            class=\"comment-author-img\"\r\n            alt=\"\"\r\n          /><button class=\"btn btn-sm btn-primary\" type=\"submit\">\r\n            Post Comment\r\n          </button>\r\n        </div>\r\n      </form>\r\n    `\r\n  }\r\n}\r\n\r\ncustomElements.define('comment-input', CommentInput)\r\n","import { html } from 'lit-html'\r\n\r\nconst DeleteButton = props => {\r\n  const handleClick = () => props.onDelete(props.commentId)\r\n\r\n  if (props.show) {\r\n    return html`\r\n      <span class=\"mod-options\"\r\n        ><i class=\"ion-trash-a\" @click=${handleClick}></i\r\n      ></span>\r\n    `\r\n  }\r\n  return null\r\n}\r\n\r\nexport default DeleteButton\r\n","import DeleteButton from './DeleteButton'\r\nimport { html } from 'lit-html'\r\nimport { ifDefined } from 'components/base'\r\n\r\nconst Comment = props => {\r\n  const comment = props.comment\r\n  const show =\r\n    props.currentUser && props.currentUser.username === comment.author.username\r\n  return html`\r\n    <div class=\"card\">\r\n      <div class=\"card-block\"><p class=\"card-text\">${comment.body}</p></div>\r\n      <div class=\"card-footer\">\r\n        <a url=${`/@${comment.author.username}`} class=\"comment-author\"\r\n          ><img\r\n            src=${ifDefined(comment.author.image || undefined)}\r\n            class=\"comment-author-img\"\r\n            alt=\"\"\r\n        /></a>\r\n        <a url=${`/@${comment.author.username}`} class=\"comment-author\"\r\n          >${comment.author.username}</a\r\n        ><span class=\"date-posted\"\r\n          >${new Date(comment.createdAt).toDateString()}</span\r\n        >\r\n        ${DeleteButton({\r\n          show,\r\n          slug: props.slug,\r\n          commentId: comment.id,\r\n          onDelete: props.onDelete\r\n        })}\r\n      </div>\r\n    </div>\r\n  `\r\n}\r\n\r\nexport default Comment\r\n","import Comment from './Comment'\r\nimport { html } from 'lit-html'\r\nimport { repeat } from 'components/base'\r\n\r\nconst CommentList = props => {\r\n  const { currentUser, onDelete, slug } = props\r\n  return html`\r\n    <div>\r\n      ${repeat(\r\n        props.comments,\r\n        comment => comment.id,\r\n        comment => Comment({ comment, currentUser, onDelete, slug })\r\n      )}\r\n    </div>\r\n  `\r\n}\r\n\r\nexport default CommentList\r\n","import './comment-input'\r\nimport CommentList from './CommentList'\r\nimport 'components/list-errors'\r\nimport { html } from 'lit-html'\r\n\r\nconst CommentContainer = props => {\r\n  if (props.currentUser) {\r\n    return html`\r\n      <div class=\"col-xs-12 col-md-8 offset-md-2\">\r\n        <div>\r\n          <list-errors .errors=${props.errors}></list-errors>\r\n          <comment-input\r\n            .currentUser=${props.currentUser}\r\n            slug=${props.slug}\r\n          ></comment-input>\r\n        </div>\r\n        ${CommentList(props)}\r\n      </div>\r\n    `\r\n  } else {\r\n    return html`\r\n      <div class=\"col-xs-12 col-md-8 offset-md-2\">\r\n        <p>\r\n          <a url=\"/login\">Sign in</a> or <a url=\"/register\">sign up</a> to add\r\n          comments on this article.\r\n        </p>\r\n        ${CommentList(props)}\r\n      </div>\r\n    `\r\n  }\r\n}\r\n\r\nexport default CommentContainer\r\n","import marked from 'marked'\r\n\r\nimport 'components/red-error'\r\nimport ArticleMeta from './ArticleMeta'\r\nimport CommentContainer from './CommentContainer'\r\nimport { Component, unsafeHTML, html } from 'components/base'\r\n\r\nclass ArticlePage extends Component {\r\n  static observedContexts = ['stores']\r\n\r\n  static properties = {\r\n    slug: { type: String }\r\n  }\r\n\r\n  set $route(value) {\r\n    this.slug = value.params.id\r\n  }\r\n\r\n  connectedCallback() {\r\n    super.connectedCallback()\r\n    const slug = this.slug\r\n    this.context.stores.articlesStore.loadArticle(slug, { acceptCached: true })\r\n    this.context.stores.commentsStore.setArticleSlug(slug)\r\n    this.context.stores.commentsStore.loadComments()\r\n  }\r\n\r\n  handleDeleteArticle = slug => {\r\n    this.deleting = true\r\n    this.context.stores.articlesStore\r\n      .deleteArticle(slug)\r\n      .then(() => this.$router.replaceWith('home'))\r\n      .finally(() => (this.deleting = false))\r\n  }\r\n\r\n  handleDeleteComment = id => {\r\n    this.context.stores.commentsStore.deleteComment(id)\r\n  }\r\n\r\n  render() {\r\n    const slug = this.slug\r\n    const { currentUser } = this.context.stores.userStore\r\n    const { comments, commentErrors } = this.context.stores.commentsStore\r\n    const article = this.context.stores.articlesStore.getArticle(slug)\r\n\r\n    if (this.deleting) {\r\n      return html`\r\n        <loading-spinner></loading-spinner>\r\n      `\r\n    }\r\n\r\n    if (!article)\r\n      return html`\r\n        <red-error message=\"Can't load article\"></red-error>\r\n      `\r\n\r\n    const markup = marked(article.body, { sanitize: true })\r\n    const canModify =\r\n      currentUser && currentUser.username === article.author.username\r\n    return html`\r\n      <div class=\"article-page\">\r\n        <div class=\"banner\">\r\n          <div class=\"container\">\r\n            <h1>${article.title}</h1>\r\n            ${ArticleMeta({\r\n              article,\r\n              canModify,\r\n              onDelete: this.handleDeleteArticle\r\n            })}\r\n          </div>\r\n        </div>\r\n        <div class=\"container page\">\r\n          <div class=\"row article-content\">\r\n            <div class=\"col-xs-12\">\r\n              ${unsafeHTML(markup)}\r\n\r\n              <ul class=\"tag-list\">\r\n                ${article.tagList.map(tag => {\r\n                  return html`\r\n                    <li class=\"tag-default tag-pill tag-outline\">\r\n                      ${tag}\r\n                    </li>\r\n                  `\r\n                })}\r\n              </ul>\r\n            </div>\r\n          </div>\r\n          <hr />\r\n          <div class=\"article-actions\"></div>\r\n          <div class=\"row\">\r\n            ${CommentContainer({\r\n              comments,\r\n              errors: commentErrors,\r\n              slug,\r\n              currentUser,\r\n              onDelete: this.handleDeleteComment\r\n            })}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    `\r\n  }\r\n}\r\n\r\ncustomElements.define('article-page', ArticlePage)\r\n"],"sourceRoot":""}